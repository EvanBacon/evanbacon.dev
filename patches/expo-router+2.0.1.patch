diff --git a/node_modules/expo-router/src/static/renderStaticContent.tsx b/node_modules/expo-router/src/static/renderStaticContent.tsx
index 7fdae39..702f2e5 100644
--- a/node_modules/expo-router/src/static/renderStaticContent.tsx
+++ b/node_modules/expo-router/src/static/renderStaticContent.tsx
@@ -7,6 +7,7 @@
 
 import { ServerContainer, ServerContainerRef } from "@react-navigation/native";
 import App, { getManifest } from "expo-router/_entry";
+import * as Font from 'expo-font/build/server';
 import Head from "expo-router/head";
 import React from "react";
 import ReactDOMServer from "react-dom/server";
@@ -45,6 +46,11 @@ export function getStaticContent(location: URL): string {
   // "Warning: Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."
   resetReactNavigationContexts();
 
+  // Clear any existing static resources from the global scope to attempt to prevent leaking between pages.
+  // This could break if pages are rendered in parallel or if fonts are loaded outside of the React tree
+  Font.resetServerContext();
+
+
   const html = ReactDOMServer.renderToString(
     <Head.Provider context={headContext}>
       <ServerContainer ref={ref}>
@@ -73,6 +79,11 @@ export function getStaticContent(location: URL): string {
 
   output = output.replace("</head>", `${css}</head>`);
 
+
+  // Inject static fonts loaded with expo-font
+  output = output.replace('</head>', `${Font.getServerResources().join('')}</head>`);
+
+
   return "<!DOCTYPE html>" + output;
 }
 
diff --git a/node_modules/expo-router/types/global.d.ts b/node_modules/expo-router/types/global.d.ts
index ac91dd4..45ecd5b 100644
--- a/node_modules/expo-router/types/global.d.ts
+++ b/node_modules/expo-router/types/global.d.ts
@@ -3,27 +3,36 @@
 // Extend the NodeJS namespace
 declare namespace NodeJS {
   interface ProcessEnv {
-    readonly NODE_ENV: "development" | "production" | "test";
+    readonly NODE_ENV: 'development' | 'production' | 'test';
   }
 }
 
-// Allow for css imports, but don't export anything
-declare module "*.css";
-declare module "*.sass";
-declare module "*.scss";
-
 // Create types for CSS modules
-declare module "*.module.css" {
+declare module '*.module.css' {
+  /** **Experimental:** Import styles that can be used with `react-native-web` components, using the `style` prop. */
+  export const unstable_styles: { readonly [key: string]: object };
+
   const classes: { readonly [key: string]: string };
   export default classes;
 }
 
-declare module "*.module.sass" {
+declare module '*.module.sass' {
+  /** **Experimental:** Import styles that can be used with `react-native-web` components, using the `style` prop. */
+  export const unstable_styles: { readonly [key: string]: object };
+
   const classes: { readonly [key: string]: string };
   export default classes;
 }
 
-declare module "*.module.scss" {
+declare module '*.module.scss' {
+  /** **Experimental:** Import styles that can be used with `react-native-web` components, using the `style` prop. */
+  export const unstable_styles: { readonly [key: string]: object };
+
   const classes: { readonly [key: string]: string };
   export default classes;
 }
+
+// Allow for css imports, but don't export anything
+declare module '*.css';
+declare module '*.sass';
+declare module '*.scss';
\ No newline at end of file
