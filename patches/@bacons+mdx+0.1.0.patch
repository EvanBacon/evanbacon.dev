diff --git a/node_modules/@bacons/mdx/build/getBaseElements.js b/node_modules/@bacons/mdx/build/getBaseElements.js
index 3c74243..3e57fd2 100644
--- a/node_modules/@bacons/mdx/build/getBaseElements.js
+++ b/node_modules/@bacons/mdx/build/getBaseElements.js
@@ -57,38 +57,38 @@ function getBaseElements() {
         h2: wrapHeader(htmlElements.H2),
         h3: wrapHeader(htmlElements.H3),
         h4: wrapHeader(htmlElements.H4),
-        h5: htmlElements.H5,
-        h6: htmlElements.H6,
-        a: htmlElements.A,
+        h5: stripExtras(htmlElements.H5),
+        h6: stripExtras(htmlElements.H6),
+        a: stripExtras(htmlElements.A),
         ul: List.UL,
         // TODO
         li: List.LI,
         // TODO
         ol: List.UL,
-        nav: htmlElements.Nav,
-        footer: htmlElements.Footer,
-        aside: htmlElements.Aside,
-        header: htmlElements.Header,
-        main: htmlElements.Main,
-        article: htmlElements.Article,
-        section: htmlElements.Section,
+        nav: stripExtras(htmlElements.Nav),
+        footer: stripExtras(htmlElements.Footer),
+        aside: stripExtras(htmlElements.Aside),
+        header: stripExtras(htmlElements.Header),
+        main: stripExtras(htmlElements.Main),
+        article: stripExtras(htmlElements.Article),
+        section: stripExtras(htmlElements.Section),
         p: wrapHeader(htmlElements.P),
-        b: htmlElements.B,
-        s: htmlElements.S,
-        i: htmlElements.I,
-        q: htmlElements.Q,
-        blockquote: htmlElements.BlockQuote,
-        br: htmlElements.BR,
-        mark: htmlElements.Mark,
-        code: htmlElements.Code,
+        b: stripExtras(htmlElements.B),
+        s: stripExtras(htmlElements.S),
+        i: stripExtras(htmlElements.I),
+        q: stripExtras(htmlElements.Q),
+        blockquote: stripExtras(htmlElements.BlockQuote),
+        br: stripExtras(htmlElements.BR),
+        mark: stripExtras(htmlElements.Mark),
+        code: stripExtras(htmlElements.Code),
         // TODO
-        inlineCode: htmlElements.Code,
-        pre: htmlElements.Pre,
-        time: htmlElements.Time,
-        strong: htmlElements.Strong,
-        del: htmlElements.Del,
-        em: htmlElements.EM,
-        hr: htmlElements.HR,
+        inlineCode: stripExtras(htmlElements.Code),
+        pre: stripExtras(htmlElements.Pre),
+        time: stripExtras(htmlElements.Time),
+        strong: stripExtras(htmlElements.Strong),
+        del: stripExtras(htmlElements.Del),
+        em: stripExtras(htmlElements.EM),
+        hr: stripExtras(htmlElements.HR),
         div: Div,
         span: react_views_1.Text,
         img: Img,
@@ -105,9 +105,16 @@ function Img({ src, style }) {
     }
     return react_1.default.createElement(AutoImage_1.AutoImage, { style: style, source: source });
 }
+function stripExtras(Element) {
+    function E({ firstChild, lastChild, firstOfType, index, prevSibling, ...props }) {
+        return react_1.default.createElement(Element, { ...props });
+    }
+    E.displayName = Element.displayName;
+    return E;
+}
 function wrapHeader(Element) {
-    return function Header(props) {
-        const isFirst = props.index === 0;
+    return function Header({ firstChild, lastChild, firstOfType, index, prevSibling, ...props }) {
+        const isFirst = index === 0;
         return (react_1.default.createElement(Element, { ...props, style: [props.style, isFirst ? { marginTop: 0 } : {}] }));
     };
 }
