diff --git a/node_modules/@expo/metro-runtime/build/HMRClient.d.ts b/node_modules/@expo/metro-runtime/build/HMRClient.d.ts
index b6071ca..727fa1c 100644
--- a/node_modules/@expo/metro-runtime/build/HMRClient.d.ts
+++ b/node_modules/@expo/metro-runtime/build/HMRClient.d.ts
@@ -1,4 +1,4 @@
-type LogLevel = "trace" | "info" | "warn" | "error" | "log" | "group" | "groupCollapsed" | "groupEnd" | "debug";
+type LogLevel = 'trace' | 'info' | 'warn' | 'error' | 'log' | 'group' | 'groupCollapsed' | 'groupEnd' | 'debug';
 export type HMRClientNativeInterface = {
     enable(): void;
     disable(): void;
diff --git a/node_modules/@expo/metro-runtime/build/HMRClient.d.ts.map b/node_modules/@expo/metro-runtime/build/HMRClient.d.ts.map
index 644d86d..37d58d4 100644
--- a/node_modules/@expo/metro-runtime/build/HMRClient.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/HMRClient.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"HMRClient.d.ts","sourceRoot":"","sources":["../src/HMRClient.ts"],"names":[],"mappings":"AAiCA,KAAK,QAAQ,GACT,OAAO,GACP,MAAM,GACN,MAAM,GACN,OAAO,GACP,KAAK,GACL,OAAO,GACP,gBAAgB,GAChB,UAAU,GACV,OAAO,CAAC;AAEZ,MAAM,MAAM,wBAAwB,GAAG;IACrC,MAAM,IAAI,IAAI,CAAC;IACf,OAAO,IAAI,IAAI,CAAC;IAChB,cAAc,CAAC,UAAU,EAAE,MAAM,GAAG,IAAI,CAAC;IACzC,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IACxC,KAAK,CAAC,KAAK,EAAE;QAAE,SAAS,EAAE,OAAO,CAAA;KAAE,GAAG,IAAI,CAAC;CAC5C,CAAC;AAMF;;;GAGG;AACH,QAAA,MAAM,SAAS,EAAE,wBAoMhB,CAAC;AAuEF,eAAe,SAAS,CAAC"}
\ No newline at end of file
+{"version":3,"file":"HMRClient.d.ts","sourceRoot":"","sources":["../src/HMRClient.ts"],"names":[],"mappings":"AAiCA,KAAK,QAAQ,GACT,OAAO,GACP,MAAM,GACN,MAAM,GACN,OAAO,GACP,KAAK,GACL,OAAO,GACP,gBAAgB,GAChB,UAAU,GACV,OAAO,CAAC;AAEZ,MAAM,MAAM,wBAAwB,GAAG;IACrC,MAAM,IAAI,IAAI,CAAC;IACf,OAAO,IAAI,IAAI,CAAC;IAChB,cAAc,CAAC,UAAU,EAAE,MAAM,GAAG,IAAI,CAAC;IACzC,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IACxC,KAAK,CAAC,KAAK,EAAE;QAAE,SAAS,EAAE,OAAO,CAAA;KAAE,GAAG,IAAI,CAAC;CAC5C,CAAC;AAMF;;;GAGG;AACH,QAAA,MAAM,SAAS,EAAE,wBAwLhB,CAAC;AAuEF,eAAe,SAAS,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/HMRClient.js b/node_modules/@expo/metro-runtime/build/HMRClient.js
index 8ce3c59..ea226ca 100644
--- a/node_modules/@expo/metro-runtime/build/HMRClient.js
+++ b/node_modules/@expo/metro-runtime/build/HMRClient.js
@@ -27,7 +27,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -40,7 +40,7 @@ const pretty_format_1 = __importStar(require("pretty-format"));
 const LoadingView_1 = __importDefault(require("./LoadingView"));
 const LogBox_1 = __importDefault(require("./error-overlay/LogBox"));
 const getDevServer_1 = __importDefault(require("./getDevServer"));
-const MetroHMRClient = require("metro-runtime/src/modules/HMRClient");
+const MetroHMRClient = require('metro-runtime/src/modules/HMRClient');
 const pendingEntryPoints = [];
 let hmrClient = null;
 let hmrUnavailableReason = null;
@@ -64,15 +64,15 @@ const HMRClient = {
             // in response to a direct user action.
             throw new Error(hmrUnavailableReason);
         }
-        assert(hmrClient, "Expected HMRClient.setup() call at startup.");
+        assert(hmrClient, 'Expected HMRClient.setup() call at startup.');
         // We use this for internal logging only.
         // It doesn't affect the logic.
-        hmrClient.send(JSON.stringify({ type: "log-opt-in" }));
+        hmrClient.send(JSON.stringify({ type: 'log-opt-in' }));
         // When toggling Fast Refresh on, we might already have some stashed updates.
         // Since they'll get applied now, we'll show a banner.
         const hasUpdates = hmrClient.hasPendingUpdates();
         if (hasUpdates) {
-            LoadingView_1.default.showMessage("Refreshing...", "refresh");
+            LoadingView_1.default.showMessage('Refreshing...', 'refresh');
         }
         try {
             hmrClient.enable();
@@ -87,11 +87,11 @@ const HMRClient = {
         showCompileError();
     },
     disable() {
-        assert(hmrClient, "Expected HMRClient.setup() call at startup.");
+        assert(hmrClient, 'Expected HMRClient.setup() call at startup.');
         hmrClient.disable();
     },
     registerBundle(requestUrl) {
-        assert(hmrClient, "Expected HMRClient.setup() call at startup.");
+        assert(hmrClient, 'Expected HMRClient.setup() call at startup.');
         pendingEntryPoints.push(requestUrl);
         registerBundleEntryPoints(hmrClient);
     },
@@ -107,10 +107,10 @@ const HMRClient = {
         }
         try {
             hmrClient.send(JSON.stringify({
-                type: "log",
+                type: 'log',
                 level,
-                mode: "BRIDGE",
-                data: data.map((item) => typeof item === "string"
+                mode: 'BRIDGE',
+                data: data.map((item) => typeof item === 'string'
                     ? item
                     : (0, pretty_format_1.default)(item, {
                         escapeString: true,
@@ -129,8 +129,8 @@ const HMRClient = {
     // Called once by the bridge on startup, even if Fast Refresh is off.
     // It creates the HMR client but doesn't actually set up the socket yet.
     setup({ isEnabled }) {
-        assert(!hmrClient, "Cannot initialize hmrClient twice");
-        const serverScheme = window.location.protocol === "https:" ? "wss" : "ws";
+        assert(!hmrClient, 'Cannot initialize hmrClient twice');
+        const serverScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';
         const client = new MetroHMRClient(`${serverScheme}://${window.location.host}/hot`);
         hmrClient = client;
         const { fullBundleUrl } = (0, getDevServer_1.default)();
@@ -139,7 +139,7 @@ const HMRClient = {
         // there are any important URL parameters we can't reconstruct from
         // `setup()`'s arguments.
         fullBundleUrl);
-        client.on("connection-error", (e) => {
+        client.on('connection-error', (e) => {
             let error = `Cannot connect to Metro.
  
  Try the following to fix the issue:
@@ -151,31 +151,31 @@ const HMRClient = {
  Error: ${e.message}`;
             setHMRUnavailableReason(error);
         });
-        client.on("update-start", ({ isInitialUpdate }) => {
+        client.on('update-start', ({ isInitialUpdate }) => {
             currentCompileErrorMessage = null;
             didConnect = true;
             if (client.isEnabled() && !isInitialUpdate) {
-                LoadingView_1.default.showMessage("Refreshing...", "refresh");
+                LoadingView_1.default.showMessage('Refreshing...', 'refresh');
             }
         });
-        client.on("update", ({ isInitialUpdate }) => {
+        client.on('update', ({ isInitialUpdate }) => {
             if (client.isEnabled() && !isInitialUpdate) {
                 dismissRedbox();
                 LogBox_1.default.clearAllLogs();
             }
         });
-        client.on("update-done", () => {
+        client.on('update-done', () => {
             LoadingView_1.default.hide();
         });
-        client.on("error", (data) => {
+        client.on('error', (data) => {
             LoadingView_1.default.hide();
-            if (data.type === "GraphNotFoundError") {
+            if (data.type === 'GraphNotFoundError') {
                 client.close();
-                setHMRUnavailableReason("Metro has restarted since the last edit. Reload to reconnect.");
+                setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');
             }
-            else if (data.type === "RevisionNotFoundError") {
+            else if (data.type === 'RevisionNotFoundError') {
                 client.close();
-                setHMRUnavailableReason("Metro and the client are out of sync. Reload to reconnect.");
+                setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');
             }
             else {
                 currentCompileErrorMessage = `${data.type} ${data.message}`;
@@ -184,7 +184,7 @@ const HMRClient = {
                 }
             }
         });
-        client.on("close", (closeEvent) => {
+        client.on('close', (closeEvent) => {
             LoadingView_1.default.hide();
             // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1
             // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5
@@ -193,7 +193,7 @@ const HMRClient = {
                 closeEvent.code === 1005 ||
                 closeEvent.code == null;
             setHMRUnavailableReason(`${isNormalOrUnsetCloseReason
-                ? "Disconnected from Metro."
+                ? 'Disconnected from Metro.'
                 : `Disconnected from Metro (${closeEvent.code}: "${closeEvent.reason}").`}
 
 To reconnect:
@@ -212,7 +212,7 @@ To reconnect:
     },
 };
 function setHMRUnavailableReason(reason) {
-    assert(hmrClient, "Expected HMRClient.setup() call at startup.");
+    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');
     if (hmrUnavailableReason !== null) {
         // Don't show more than one warning.
         return;
@@ -233,8 +233,8 @@ function registerBundleEntryPoints(client) {
         return;
     }
     if (pendingEntryPoints.length > 0) {
-        client === null || client === void 0 ? void 0 : client.send(JSON.stringify({
-            type: "register-entrypoints",
+        client?.send(JSON.stringify({
+            type: 'register-entrypoints',
             entryPoints: pendingEntryPoints,
         }));
         pendingEntryPoints.length = 0;
diff --git a/node_modules/@expo/metro-runtime/build/HMRClient.js.map b/node_modules/@expo/metro-runtime/build/HMRClient.js.map
index 55b897b..4e29aa6 100644
--- a/node_modules/@expo/metro-runtime/build/HMRClient.js.map
+++ b/node_modules/@expo/metro-runtime/build/HMRClient.js.map
@@ -1 +1 @@
-{"version":3,"file":"HMRClient.js","sourceRoot":"","sources":["../src/HMRClient.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on this but with web support:\n * https://github.com/facebook/react-native/blob/086714b02b0fb838dee5a66c5bcefe73b53cf3df/Libraries/Utilities/HMRClient.js\n */\nimport prettyFormat, { plugins } from \"pretty-format\";\n\nimport LoadingView from \"./LoadingView\";\nimport LogBox from \"./error-overlay/LogBox\";\nimport getDevServer from \"./getDevServer\";\n\nconst MetroHMRClient = require(\"metro-runtime/src/modules/HMRClient\");\nconst pendingEntryPoints: string[] = [];\n\ntype HMRClientType = {\n  send: (msg: string) => void;\n  isEnabled: () => boolean;\n  disable: () => void;\n  enable: () => void;\n  hasPendingUpdates: () => boolean;\n};\n\nlet hmrClient: HMRClientType | null = null;\nlet hmrUnavailableReason: string | null = null;\nlet currentCompileErrorMessage: string | null = null;\nlet didConnect: boolean = false;\nconst pendingLogs: [LogLevel, any[]][] = [];\n\ntype LogLevel =\n  | \"trace\"\n  | \"info\"\n  | \"warn\"\n  | \"error\"\n  | \"log\"\n  | \"group\"\n  | \"groupCollapsed\"\n  | \"groupEnd\"\n  | \"debug\";\n\nexport type HMRClientNativeInterface = {\n  enable(): void;\n  disable(): void;\n  registerBundle(requestUrl: string): void;\n  log(level: LogLevel, data: any[]): void;\n  setup(props: { isEnabled: boolean }): void;\n};\n\nfunction assert(foo: any, msg: string): asserts foo {\n  if (!foo) throw new Error(msg);\n}\n\n/**\n * HMR Client that receives from the server HMR updates and propagates them\n * runtime to reflects those changes.\n */\nconst HMRClient: HMRClientNativeInterface = {\n  enable() {\n    if (hmrUnavailableReason !== null) {\n      // If HMR became unavailable while you weren't using it,\n      // explain why when you try to turn it on.\n      // This is an error (and not a warning) because it is shown\n      // in response to a direct user action.\n      throw new Error(hmrUnavailableReason);\n    }\n\n    assert(hmrClient, \"Expected HMRClient.setup() call at startup.\");\n\n    // We use this for internal logging only.\n    // It doesn't affect the logic.\n    hmrClient.send(JSON.stringify({ type: \"log-opt-in\" }));\n\n    // When toggling Fast Refresh on, we might already have some stashed updates.\n    // Since they'll get applied now, we'll show a banner.\n    const hasUpdates = hmrClient!.hasPendingUpdates();\n\n    if (hasUpdates) {\n      LoadingView.showMessage(\"Refreshing...\", \"refresh\");\n    }\n    try {\n      hmrClient.enable();\n    } finally {\n      if (hasUpdates) {\n        LoadingView.hide();\n      }\n    }\n\n    // There could be a compile error while Fast Refresh was off,\n    // but we ignored it at the time. Show it now.\n    showCompileError();\n  },\n\n  disable() {\n    assert(hmrClient, \"Expected HMRClient.setup() call at startup.\");\n    hmrClient.disable();\n  },\n\n  registerBundle(requestUrl: string) {\n    assert(hmrClient, \"Expected HMRClient.setup() call at startup.\");\n    pendingEntryPoints.push(requestUrl);\n    registerBundleEntryPoints(hmrClient);\n  },\n\n  log(level: LogLevel, data: any[]) {\n    if (!hmrClient) {\n      // Catch a reasonable number of early logs\n      // in case hmrClient gets initialized later.\n      pendingLogs.push([level, data]);\n      if (pendingLogs.length > 100) {\n        pendingLogs.shift();\n      }\n      return;\n    }\n    try {\n      hmrClient.send(\n        JSON.stringify({\n          type: \"log\",\n          level,\n          mode: \"BRIDGE\",\n          data: data.map((item) =>\n            typeof item === \"string\"\n              ? item\n              : prettyFormat(item, {\n                  escapeString: true,\n                  highlight: true,\n                  maxDepth: 3,\n                  min: true,\n                  plugins: [plugins.ReactElement],\n                })\n          ),\n        })\n      );\n    } catch {\n      // If sending logs causes any failures we want to silently ignore them\n      // to ensure we do not cause infinite-logging loops.\n    }\n  },\n\n  // Called once by the bridge on startup, even if Fast Refresh is off.\n  // It creates the HMR client but doesn't actually set up the socket yet.\n  setup({ isEnabled }: { isEnabled: boolean }) {\n    assert(!hmrClient, \"Cannot initialize hmrClient twice\");\n\n    const serverScheme = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const client = new MetroHMRClient(\n      `${serverScheme}://${window.location.host}/hot`\n    );\n    hmrClient = client;\n\n    const { fullBundleUrl } = getDevServer();\n    pendingEntryPoints.push(\n      // HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl\n    );\n\n    client.on(\"connection-error\", (e: Error) => {\n      let error = `Cannot connect to Metro.\n \n Try the following to fix the issue:\n - Ensure the Metro dev server is running and available on the same network as this device`;\n      error += `\n \n URL: ${window.location.host}\n \n Error: ${e.message}`;\n\n      setHMRUnavailableReason(error);\n    });\n\n    client.on(\n      \"update-start\",\n      ({ isInitialUpdate }: { isInitialUpdate?: boolean }) => {\n        currentCompileErrorMessage = null;\n        didConnect = true;\n\n        if (client.isEnabled() && !isInitialUpdate) {\n          LoadingView.showMessage(\"Refreshing...\", \"refresh\");\n        }\n      }\n    );\n\n    client.on(\n      \"update\",\n      ({ isInitialUpdate }: { isInitialUpdate?: boolean }) => {\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          LogBox.clearAllLogs();\n        }\n      }\n    );\n\n    client.on(\"update-done\", () => {\n      LoadingView.hide();\n    });\n\n    client.on(\"error\", (data: { type: string; message: string }) => {\n      LoadingView.hide();\n\n      if (data.type === \"GraphNotFoundError\") {\n        client.close();\n        setHMRUnavailableReason(\n          \"Metro has restarted since the last edit. Reload to reconnect.\"\n        );\n      } else if (data.type === \"RevisionNotFoundError\") {\n        client.close();\n        setHMRUnavailableReason(\n          \"Metro and the client are out of sync. Reload to reconnect.\"\n        );\n      } else {\n        currentCompileErrorMessage = `${data.type} ${data.message}`;\n        if (client.isEnabled()) {\n          showCompileError();\n        }\n      }\n    });\n\n    client.on(\"close\", (closeEvent: { code: number; reason: string }) => {\n      LoadingView.hide();\n\n      // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n      // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n      const isNormalOrUnsetCloseReason =\n        closeEvent == null ||\n        closeEvent.code === 1000 ||\n        closeEvent.code === 1005 ||\n        closeEvent.code == null;\n\n      setHMRUnavailableReason(\n        `${\n          isNormalOrUnsetCloseReason\n            ? \"Disconnected from Metro.\"\n            : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`\n        }\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `\n      );\n    });\n\n    if (isEnabled) {\n      HMRClient.enable();\n    } else {\n      HMRClient.disable();\n    }\n\n    registerBundleEntryPoints(hmrClient);\n    flushEarlyLogs();\n  },\n};\n\nfunction setHMRUnavailableReason(reason: string) {\n  assert(hmrClient, \"Expected HMRClient.setup() call at startup.\");\n  if (hmrUnavailableReason !== null) {\n    // Don't show more than one warning.\n    return;\n  }\n  hmrUnavailableReason = reason;\n\n  // We only want to show a warning if Fast Refresh is on *and* if we ever\n  // previously managed to connect successfully. We don't want to show\n  // the warning to native engineers who use cached bundles without Metro.\n  if (hmrClient.isEnabled() && didConnect) {\n    console.warn(reason);\n    // (Not using the `warning` module to prevent a Buck cycle.)\n  }\n}\n\nfunction registerBundleEntryPoints(client: HMRClientType | null) {\n  if (hmrUnavailableReason != null) {\n    // \"Bundle Splitting – Metro disconnected\"\n    window.location.reload();\n    return;\n  }\n\n  if (pendingEntryPoints.length > 0) {\n    client?.send(\n      JSON.stringify({\n        type: \"register-entrypoints\",\n        entryPoints: pendingEntryPoints,\n      })\n    );\n    pendingEntryPoints.length = 0;\n  }\n}\n\nfunction flushEarlyLogs() {\n  try {\n    pendingLogs.forEach(([level, data]) => {\n      HMRClient.log(level, data);\n    });\n  } finally {\n    pendingLogs.length = 0;\n  }\n}\n\nfunction dismissRedbox() {\n  // TODO(EvanBacon): Error overlay for web.\n}\n\nfunction showCompileError() {\n  if (currentCompileErrorMessage === null) {\n    return;\n  }\n\n  // Even if there is already a redbox, syntax errors are more important.\n  // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n  dismissRedbox();\n\n  const message = currentCompileErrorMessage;\n  currentCompileErrorMessage = null;\n\n  const error = new Error(message);\n  // Symbolicating compile errors is wasted effort\n  // because the stack trace is meaningless:\n  // @ts-expect-error\n  error.preventSymbolication = true;\n  throw error;\n}\n\nexport default HMRClient;\n"]}
\ No newline at end of file
+{"version":3,"file":"HMRClient.js","sourceRoot":"","sources":["../src/HMRClient.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on this but with web support:\n * https://github.com/facebook/react-native/blob/086714b02b0fb838dee5a66c5bcefe73b53cf3df/Libraries/Utilities/HMRClient.js\n */\nimport prettyFormat, { plugins } from 'pretty-format';\n\nimport LoadingView from './LoadingView';\nimport LogBox from './error-overlay/LogBox';\nimport getDevServer from './getDevServer';\n\nconst MetroHMRClient = require('metro-runtime/src/modules/HMRClient');\nconst pendingEntryPoints: string[] = [];\n\ntype HMRClientType = {\n  send: (msg: string) => void;\n  isEnabled: () => boolean;\n  disable: () => void;\n  enable: () => void;\n  hasPendingUpdates: () => boolean;\n};\n\nlet hmrClient: HMRClientType | null = null;\nlet hmrUnavailableReason: string | null = null;\nlet currentCompileErrorMessage: string | null = null;\nlet didConnect: boolean = false;\nconst pendingLogs: [LogLevel, any[]][] = [];\n\ntype LogLevel =\n  | 'trace'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'log'\n  | 'group'\n  | 'groupCollapsed'\n  | 'groupEnd'\n  | 'debug';\n\nexport type HMRClientNativeInterface = {\n  enable(): void;\n  disable(): void;\n  registerBundle(requestUrl: string): void;\n  log(level: LogLevel, data: any[]): void;\n  setup(props: { isEnabled: boolean }): void;\n};\n\nfunction assert(foo: any, msg: string): asserts foo {\n  if (!foo) throw new Error(msg);\n}\n\n/**\n * HMR Client that receives from the server HMR updates and propagates them\n * runtime to reflects those changes.\n */\nconst HMRClient: HMRClientNativeInterface = {\n  enable() {\n    if (hmrUnavailableReason !== null) {\n      // If HMR became unavailable while you weren't using it,\n      // explain why when you try to turn it on.\n      // This is an error (and not a warning) because it is shown\n      // in response to a direct user action.\n      throw new Error(hmrUnavailableReason);\n    }\n\n    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n    // We use this for internal logging only.\n    // It doesn't affect the logic.\n    hmrClient.send(JSON.stringify({ type: 'log-opt-in' }));\n\n    // When toggling Fast Refresh on, we might already have some stashed updates.\n    // Since they'll get applied now, we'll show a banner.\n    const hasUpdates = hmrClient!.hasPendingUpdates();\n\n    if (hasUpdates) {\n      LoadingView.showMessage('Refreshing...', 'refresh');\n    }\n    try {\n      hmrClient.enable();\n    } finally {\n      if (hasUpdates) {\n        LoadingView.hide();\n      }\n    }\n\n    // There could be a compile error while Fast Refresh was off,\n    // but we ignored it at the time. Show it now.\n    showCompileError();\n  },\n\n  disable() {\n    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    hmrClient.disable();\n  },\n\n  registerBundle(requestUrl: string) {\n    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    pendingEntryPoints.push(requestUrl);\n    registerBundleEntryPoints(hmrClient);\n  },\n\n  log(level: LogLevel, data: any[]) {\n    if (!hmrClient) {\n      // Catch a reasonable number of early logs\n      // in case hmrClient gets initialized later.\n      pendingLogs.push([level, data]);\n      if (pendingLogs.length > 100) {\n        pendingLogs.shift();\n      }\n      return;\n    }\n    try {\n      hmrClient.send(\n        JSON.stringify({\n          type: 'log',\n          level,\n          mode: 'BRIDGE',\n          data: data.map((item) =>\n            typeof item === 'string'\n              ? item\n              : prettyFormat(item, {\n                  escapeString: true,\n                  highlight: true,\n                  maxDepth: 3,\n                  min: true,\n                  plugins: [plugins.ReactElement],\n                })\n          ),\n        })\n      );\n    } catch {\n      // If sending logs causes any failures we want to silently ignore them\n      // to ensure we do not cause infinite-logging loops.\n    }\n  },\n\n  // Called once by the bridge on startup, even if Fast Refresh is off.\n  // It creates the HMR client but doesn't actually set up the socket yet.\n  setup({ isEnabled }: { isEnabled: boolean }) {\n    assert(!hmrClient, 'Cannot initialize hmrClient twice');\n\n    const serverScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n    const client = new MetroHMRClient(`${serverScheme}://${window.location.host}/hot`);\n    hmrClient = client;\n\n    const { fullBundleUrl } = getDevServer();\n    pendingEntryPoints.push(\n      // HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl\n    );\n\n    client.on('connection-error', (e: Error) => {\n      let error = `Cannot connect to Metro.\n \n Try the following to fix the issue:\n - Ensure the Metro dev server is running and available on the same network as this device`;\n      error += `\n \n URL: ${window.location.host}\n \n Error: ${e.message}`;\n\n      setHMRUnavailableReason(error);\n    });\n\n    client.on('update-start', ({ isInitialUpdate }: { isInitialUpdate?: boolean }) => {\n      currentCompileErrorMessage = null;\n      didConnect = true;\n\n      if (client.isEnabled() && !isInitialUpdate) {\n        LoadingView.showMessage('Refreshing...', 'refresh');\n      }\n    });\n\n    client.on('update', ({ isInitialUpdate }: { isInitialUpdate?: boolean }) => {\n      if (client.isEnabled() && !isInitialUpdate) {\n        dismissRedbox();\n        LogBox.clearAllLogs();\n      }\n    });\n\n    client.on('update-done', () => {\n      LoadingView.hide();\n    });\n\n    client.on('error', (data: { type: string; message: string }) => {\n      LoadingView.hide();\n\n      if (data.type === 'GraphNotFoundError') {\n        client.close();\n        setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n      } else if (data.type === 'RevisionNotFoundError') {\n        client.close();\n        setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n      } else {\n        currentCompileErrorMessage = `${data.type} ${data.message}`;\n        if (client.isEnabled()) {\n          showCompileError();\n        }\n      }\n    });\n\n    client.on('close', (closeEvent: { code: number; reason: string }) => {\n      LoadingView.hide();\n\n      // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n      // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n      const isNormalOrUnsetCloseReason =\n        closeEvent == null ||\n        closeEvent.code === 1000 ||\n        closeEvent.code === 1005 ||\n        closeEvent.code == null;\n\n      setHMRUnavailableReason(\n        `${\n          isNormalOrUnsetCloseReason\n            ? 'Disconnected from Metro.'\n            : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`\n        }\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `\n      );\n    });\n\n    if (isEnabled) {\n      HMRClient.enable();\n    } else {\n      HMRClient.disable();\n    }\n\n    registerBundleEntryPoints(hmrClient);\n    flushEarlyLogs();\n  },\n};\n\nfunction setHMRUnavailableReason(reason: string) {\n  assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n  if (hmrUnavailableReason !== null) {\n    // Don't show more than one warning.\n    return;\n  }\n  hmrUnavailableReason = reason;\n\n  // We only want to show a warning if Fast Refresh is on *and* if we ever\n  // previously managed to connect successfully. We don't want to show\n  // the warning to native engineers who use cached bundles without Metro.\n  if (hmrClient.isEnabled() && didConnect) {\n    console.warn(reason);\n    // (Not using the `warning` module to prevent a Buck cycle.)\n  }\n}\n\nfunction registerBundleEntryPoints(client: HMRClientType | null) {\n  if (hmrUnavailableReason != null) {\n    // \"Bundle Splitting – Metro disconnected\"\n    window.location.reload();\n    return;\n  }\n\n  if (pendingEntryPoints.length > 0) {\n    client?.send(\n      JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints,\n      })\n    );\n    pendingEntryPoints.length = 0;\n  }\n}\n\nfunction flushEarlyLogs() {\n  try {\n    pendingLogs.forEach(([level, data]) => {\n      HMRClient.log(level, data);\n    });\n  } finally {\n    pendingLogs.length = 0;\n  }\n}\n\nfunction dismissRedbox() {\n  // TODO(EvanBacon): Error overlay for web.\n}\n\nfunction showCompileError() {\n  if (currentCompileErrorMessage === null) {\n    return;\n  }\n\n  // Even if there is already a redbox, syntax errors are more important.\n  // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n  dismissRedbox();\n\n  const message = currentCompileErrorMessage;\n  currentCompileErrorMessage = null;\n\n  const error = new Error(message);\n  // Symbolicating compile errors is wasted effort\n  // because the stack trace is meaningless:\n  // @ts-expect-error\n  error.preventSymbolication = true;\n  throw error;\n}\n\nexport default HMRClient;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/HMRClient.native.js b/node_modules/@expo/metro-runtime/build/HMRClient.native.js
index 8bbeae6..06788cc 100644
--- a/node_modules/@expo/metro-runtime/build/HMRClient.native.js
+++ b/node_modules/@expo/metro-runtime/build/HMRClient.native.js
@@ -1,5 +1,5 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-const HMRClient = require("react-native/Libraries/Utilities/HMRClient");
+const HMRClient = require('react-native/Libraries/Utilities/HMRClient');
 exports.default = HMRClient;
 //# sourceMappingURL=HMRClient.native.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/HMRClient.native.js.map b/node_modules/@expo/metro-runtime/build/HMRClient.native.js.map
index 60853bd..e20278d 100644
--- a/node_modules/@expo/metro-runtime/build/HMRClient.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/HMRClient.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"HMRClient.native.js","sourceRoot":"","sources":["../src/HMRClient.native.ts"],"names":[],"mappings":";;AAAA,MAAM,SAAS,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAExE,kBAAe,SAAS,CAAC","sourcesContent":["const HMRClient = require(\"react-native/Libraries/Utilities/HMRClient\");\n\nexport default HMRClient;\n"]}
\ No newline at end of file
+{"version":3,"file":"HMRClient.native.js","sourceRoot":"","sources":["../src/HMRClient.native.ts"],"names":[],"mappings":";;AAAA,MAAM,SAAS,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAExE,kBAAe,SAAS,CAAC","sourcesContent":["const HMRClient = require('react-native/Libraries/Utilities/HMRClient');\n\nexport default HMRClient;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/LoadingView.d.ts b/node_modules/@expo/metro-runtime/build/LoadingView.d.ts
index 5b5a010..005af54 100644
--- a/node_modules/@expo/metro-runtime/build/LoadingView.d.ts
+++ b/node_modules/@expo/metro-runtime/build/LoadingView.d.ts
@@ -1,4 +1,4 @@
-declare function showMessage(message: string, type: "load" | "refresh"): void;
+declare function showMessage(message: string, type: 'load' | 'refresh'): void;
 declare function hide(): void;
 declare const _default: {
     showMessage: typeof showMessage;
diff --git a/node_modules/@expo/metro-runtime/build/LoadingView.d.ts.map b/node_modules/@expo/metro-runtime/build/LoadingView.d.ts.map
index c82d841..0419ecc 100644
--- a/node_modules/@expo/metro-runtime/build/LoadingView.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/LoadingView.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LoadingView.d.ts","sourceRoot":"","sources":["../src/LoadingView.ts"],"names":[],"mappings":"AAGA,iBAAS,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,SAAS,QAI7D;AAED,iBAAS,IAAI,SAEZ;;;;;AAOD,wBAGE"}
\ No newline at end of file
+{"version":3,"file":"LoadingView.d.ts","sourceRoot":"","sources":["../src/LoadingView.ts"],"names":[],"mappings":"AAGA,iBAAS,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,SAAS,QAI7D;AAED,iBAAS,IAAI,SAEZ;;;;;AAED,wBAGE"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/LoadingView.js b/node_modules/@expo/metro-runtime/build/LoadingView.js
index 5241b9e..37399dd 100644
--- a/node_modules/@expo/metro-runtime/build/LoadingView.js
+++ b/node_modules/@expo/metro-runtime/build/LoadingView.js
@@ -3,17 +3,13 @@ Object.defineProperty(exports, "__esModule", { value: true });
 const expo_modules_core_1 = require("expo-modules-core");
 // Ensure events are sent so custom Fast Refresh views are shown.
 function showMessage(message, type) {
-    expo_modules_core_1.SyntheticPlatformEmitter.emit("devLoadingView:showMessage", {
+    expo_modules_core_1.SyntheticPlatformEmitter.emit('devLoadingView:showMessage', {
         message,
     });
 }
 function hide() {
-    expo_modules_core_1.SyntheticPlatformEmitter.emit("devLoadingView:hide", {});
+    expo_modules_core_1.SyntheticPlatformEmitter.emit('devLoadingView:hide', {});
 }
-module.exports = {
-    showMessage,
-    hide,
-};
 exports.default = {
     showMessage,
     hide,
diff --git a/node_modules/@expo/metro-runtime/build/LoadingView.js.map b/node_modules/@expo/metro-runtime/build/LoadingView.js.map
index 57c73cf..bee9cd1 100644
--- a/node_modules/@expo/metro-runtime/build/LoadingView.js.map
+++ b/node_modules/@expo/metro-runtime/build/LoadingView.js.map
@@ -1 +1 @@
-{"version":3,"file":"LoadingView.js","sourceRoot":"","sources":["../src/LoadingView.ts"],"names":[],"mappings":";;AAAA,yDAA6D;AAE7D,iEAAiE;AACjE,SAAS,WAAW,CAAC,OAAe,EAAE,IAAwB;IAC5D,4CAAwB,CAAC,IAAI,CAAC,4BAA4B,EAAE;QAC1D,OAAO;KACR,CAAC,CAAC;AACL,CAAC;AAED,SAAS,IAAI;IACX,4CAAwB,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;AAC3D,CAAC;AAED,MAAM,CAAC,OAAO,GAAG;IACf,WAAW;IACX,IAAI;CACL,CAAC;AAEF,kBAAe;IACb,WAAW;IACX,IAAI;CACL,CAAC","sourcesContent":["import { SyntheticPlatformEmitter } from \"expo-modules-core\";\n\n// Ensure events are sent so custom Fast Refresh views are shown.\nfunction showMessage(message: string, type: \"load\" | \"refresh\") {\n  SyntheticPlatformEmitter.emit(\"devLoadingView:showMessage\", {\n    message,\n  });\n}\n\nfunction hide() {\n  SyntheticPlatformEmitter.emit(\"devLoadingView:hide\", {});\n}\n\nmodule.exports = {\n  showMessage,\n  hide,\n};\n\nexport default {\n  showMessage,\n  hide,\n};\n"]}
\ No newline at end of file
+{"version":3,"file":"LoadingView.js","sourceRoot":"","sources":["../src/LoadingView.ts"],"names":[],"mappings":";;AAAA,yDAA6D;AAE7D,iEAAiE;AACjE,SAAS,WAAW,CAAC,OAAe,EAAE,IAAwB;IAC5D,4CAAwB,CAAC,IAAI,CAAC,4BAA4B,EAAE;QAC1D,OAAO;KACR,CAAC,CAAC;AACL,CAAC;AAED,SAAS,IAAI;IACX,4CAAwB,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;AAC3D,CAAC;AAED,kBAAe;IACb,WAAW;IACX,IAAI;CACL,CAAC","sourcesContent":["import { SyntheticPlatformEmitter } from 'expo-modules-core';\n\n// Ensure events are sent so custom Fast Refresh views are shown.\nfunction showMessage(message: string, type: 'load' | 'refresh') {\n  SyntheticPlatformEmitter.emit('devLoadingView:showMessage', {\n    message,\n  });\n}\n\nfunction hide() {\n  SyntheticPlatformEmitter.emit('devLoadingView:hide', {});\n}\n\nexport default {\n  showMessage,\n  hide,\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/LoadingView.native.d.ts b/node_modules/@expo/metro-runtime/build/LoadingView.native.d.ts
index a411e36..1fcf5d9 100644
--- a/node_modules/@expo/metro-runtime/build/LoadingView.native.d.ts
+++ b/node_modules/@expo/metro-runtime/build/LoadingView.native.d.ts
@@ -1 +1,3 @@
+import LoadingView from 'react-native/Libraries/Utilities/LoadingView';
+export default LoadingView;
 //# sourceMappingURL=LoadingView.native.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/LoadingView.native.d.ts.map b/node_modules/@expo/metro-runtime/build/LoadingView.native.d.ts.map
index 6086fca..2c0f1cc 100644
--- a/node_modules/@expo/metro-runtime/build/LoadingView.native.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/LoadingView.native.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LoadingView.native.d.ts","sourceRoot":"","sources":["../src/LoadingView.native.ts"],"names":[],"mappings":""}
\ No newline at end of file
+{"version":3,"file":"LoadingView.native.d.ts","sourceRoot":"","sources":["../src/LoadingView.native.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,8CAA8C,CAAC;AAEvE,eAAe,WAAW,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/LoadingView.native.js b/node_modules/@expo/metro-runtime/build/LoadingView.native.js
index 357ff1c..b9f4ae9 100644
--- a/node_modules/@expo/metro-runtime/build/LoadingView.native.js
+++ b/node_modules/@expo/metro-runtime/build/LoadingView.native.js
@@ -1,3 +1,8 @@
 "use strict";
-module.exports = require("react-native/Libraries/Utilities/LoadingView");
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+const LoadingView_1 = __importDefault(require("react-native/Libraries/Utilities/LoadingView"));
+exports.default = LoadingView_1.default;
 //# sourceMappingURL=LoadingView.native.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/LoadingView.native.js.map b/node_modules/@expo/metro-runtime/build/LoadingView.native.js.map
index 72dd5de..444c2cb 100644
--- a/node_modules/@expo/metro-runtime/build/LoadingView.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/LoadingView.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"LoadingView.native.js","sourceRoot":"","sources":["../src/LoadingView.native.ts"],"names":[],"mappings":";AAAA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,8CAA8C,CAAC,CAAC","sourcesContent":["module.exports = require(\"react-native/Libraries/Utilities/LoadingView\");\n"]}
\ No newline at end of file
+{"version":3,"file":"LoadingView.native.js","sourceRoot":"","sources":["../src/LoadingView.native.ts"],"names":[],"mappings":";;;;;AAAA,+FAAuE;AAEvE,kBAAe,qBAAW,CAAC","sourcesContent":["import LoadingView from 'react-native/Libraries/Utilities/LoadingView';\n\nexport default LoadingView;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/buildAsyncRequire.js.map b/node_modules/@expo/metro-runtime/build/async-require/buildAsyncRequire.js.map
index fd0eb56..18ca795 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/buildAsyncRequire.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/buildAsyncRequire.js.map
@@ -1 +1 @@
-{"version":3,"file":"buildAsyncRequire.js","sourceRoot":"","sources":["../../src/async-require/buildAsyncRequire.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;AAEH,6CAA+C;AAQ/C,oFAAoF;AACpF,SAAgB,iBAAiB;IAC/B,MAAM,KAAK,GAAG,IAAI,GAAG,EAAyB,CAAC;IAE/C,OAAO,KAAK,UAAU,yBAAyB,CAAC,IAAY;QAC1D,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnB,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;SACzB;QAED,MAAM,OAAO,GAAG,IAAA,4BAAe,EAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACpD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAEzB,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;AACJ,CAAC;AAjBD,8CAiBC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadBundleAsync } from \"./loadBundle\";\n\n/**\n * Must satisfy the requirements of the Metro bundler.\n * https://github.com/react-native-community/discussions-and-proposals/blob/main/proposals/0605-lazy-bundling.md#__loadbundleasync-in-metro\n */\ntype AsyncRequire = (path: string) => Promise<void>;\n\n/** Create an `loadBundleAsync` function in the expected shape for Metro bundler. */\nexport function buildAsyncRequire(): AsyncRequire {\n  const cache = new Map<string, Promise<void>>();\n\n  return async function universal_loadBundleAsync(path: string): Promise<void> {\n    if (cache.has(path)) {\n      return cache.get(path)!;\n    }\n\n    const promise = loadBundleAsync(path).catch((error) => {\n      cache.delete(path);\n      throw error;\n    });\n\n    cache.set(path, promise);\n\n    return promise;\n  };\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"buildAsyncRequire.js","sourceRoot":"","sources":["../../src/async-require/buildAsyncRequire.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;AAEH,6CAA+C;AAQ/C,oFAAoF;AACpF,SAAgB,iBAAiB;IAC/B,MAAM,KAAK,GAAG,IAAI,GAAG,EAAyB,CAAC;IAE/C,OAAO,KAAK,UAAU,yBAAyB,CAAC,IAAY;QAC1D,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnB,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;SACzB;QAED,MAAM,OAAO,GAAG,IAAA,4BAAe,EAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACpD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAEzB,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;AACJ,CAAC;AAjBD,8CAiBC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadBundleAsync } from './loadBundle';\n\n/**\n * Must satisfy the requirements of the Metro bundler.\n * https://github.com/react-native-community/discussions-and-proposals/blob/main/proposals/0605-lazy-bundling.md#__loadbundleasync-in-metro\n */\ntype AsyncRequire = (path: string) => Promise<void>;\n\n/** Create an `loadBundleAsync` function in the expected shape for Metro bundler. */\nexport function buildAsyncRequire(): AsyncRequire {\n  const cache = new Map<string, Promise<void>>();\n\n  return async function universal_loadBundleAsync(path: string): Promise<void> {\n    if (cache.has(path)) {\n      return cache.get(path)!;\n    }\n\n    const promise = loadBundleAsync(path).catch((error) => {\n      cache.delete(path);\n      throw error;\n    });\n\n    cache.set(path, promise);\n\n    return promise;\n  };\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.js b/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.js
index 70a2f6e..7313689 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.js
+++ b/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.js
@@ -16,7 +16,7 @@ exports.buildUrlForBundle = void 0;
 function buildUrlForBundle(bundlePath) {
     // NOTE(EvanBacon): This must come from the window origin (at least in dev mode).
     // Otherwise Metro will crash from attempting to load a bundle that doesn't exist.
-    return "/" + bundlePath.replace(/^\/+/, "");
+    return '/' + bundlePath.replace(/^\/+/, '');
 }
 exports.buildUrlForBundle = buildUrlForBundle;
 //# sourceMappingURL=buildUrlForBundle.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.js.map b/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.js.map
index a1d2990..25d2abf 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.js.map
@@ -1 +1 @@
-{"version":3,"file":"buildUrlForBundle.js","sourceRoot":"","sources":["../../src/async-require/buildUrlForBundle.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;AAEH;;;;;GAKG;AACH,SAAgB,iBAAiB,CAAC,UAAkB;IAClD,iFAAiF;IACjF,kFAAkF;IAClF,OAAO,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC9C,CAAC;AAJD,8CAIC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Given a path and some optional additional query parameters, create the dev server bundle URL.\n * @param bundlePath like `/foobar`\n * @param params like `{ platform: \"web\" }`\n * @returns a URL like \"/foobar.bundle?platform=android&modulesOnly=true&runModule=false&runtimeBytecodeVersion=null\"\n */\nexport function buildUrlForBundle(bundlePath: string): string {\n  // NOTE(EvanBacon): This must come from the window origin (at least in dev mode).\n  // Otherwise Metro will crash from attempting to load a bundle that doesn't exist.\n  return \"/\" + bundlePath.replace(/^\\/+/, \"\");\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"buildUrlForBundle.js","sourceRoot":"","sources":["../../src/async-require/buildUrlForBundle.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;AAEH;;;;;GAKG;AACH,SAAgB,iBAAiB,CAAC,UAAkB;IAClD,iFAAiF;IACjF,kFAAkF;IAClF,OAAO,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC9C,CAAC;AAJD,8CAIC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Given a path and some optional additional query parameters, create the dev server bundle URL.\n * @param bundlePath like `/foobar`\n * @param params like `{ platform: \"web\" }`\n * @returns a URL like \"/foobar.bundle?platform=android&modulesOnly=true&runModule=false&runtimeBytecodeVersion=null\"\n */\nexport function buildUrlForBundle(bundlePath: string): string {\n  // NOTE(EvanBacon): This must come from the window origin (at least in dev mode).\n  // Otherwise Metro will crash from attempting to load a bundle that doesn't exist.\n  return '/' + bundlePath.replace(/^\\/+/, '');\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.native.js b/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.native.js
index 545fdf6..a611dac 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.native.js
+++ b/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.native.js
@@ -8,20 +8,21 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.buildUrlForBundle = void 0;
 function buildUrlForBundle(bundlePath) {
-    if (process.env.NODE_ENV === "production") {
-        if (typeof location !== "undefined") {
+    if (process.env.NODE_ENV === 'production') {
+        if (typeof location !== 'undefined') {
             return joinComponents(location.origin, bundlePath);
         }
         throw new Error('Unable to determine the production URL where additional JavaScript chunks are hosted because the global "location" variable is not defined.');
     }
     else {
-        const getDevServer = require("../getDevServer");
+        const getDevServer = require('../getDevServer')
+            .default;
         const { url: serverUrl } = getDevServer();
         return joinComponents(serverUrl, bundlePath);
     }
 }
 exports.buildUrlForBundle = buildUrlForBundle;
 function joinComponents(prefix, suffix) {
-    return prefix.replace(/\/+$/, "") + "/" + suffix.replace(/^\/+/, "");
+    return prefix.replace(/\/+$/, '') + '/' + suffix.replace(/^\/+/, '');
 }
 //# sourceMappingURL=buildUrlForBundle.native.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.native.js.map b/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.native.js.map
index 5211767..0d26855 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/buildUrlForBundle.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"buildUrlForBundle.native.js","sourceRoot":"","sources":["../../src/async-require/buildUrlForBundle.native.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;AAEH,SAAgB,iBAAiB,CAAC,UAAkB;IAClD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACnC,OAAO,cAAc,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SACpD;QACD,MAAM,IAAI,KAAK,CACb,6IAA6I,CAC9I,CAAC;KACH;SAAM;QACL,MAAM,YAAY,GAChB,OAAO,CAAC,iBAAiB,CAA6C,CAAC;QAEzE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,YAAY,EAAE,CAAC;QAE1C,OAAO,cAAc,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;KAC9C;AACH,CAAC;AAhBD,8CAgBC;AAED,SAAS,cAAc,CAAC,MAAc,EAAE,MAAc;IACpD,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACvE,CAAC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function buildUrlForBundle(bundlePath: string): string {\n  if (process.env.NODE_ENV === \"production\") {\n    if (typeof location !== \"undefined\") {\n      return joinComponents(location.origin, bundlePath);\n    }\n    throw new Error(\n      'Unable to determine the production URL where additional JavaScript chunks are hosted because the global \"location\" variable is not defined.'\n    );\n  } else {\n    const getDevServer =\n      require(\"../getDevServer\") as typeof import(\"../getDevServer\").default;\n\n    const { url: serverUrl } = getDevServer();\n\n    return joinComponents(serverUrl, bundlePath);\n  }\n}\n\nfunction joinComponents(prefix: string, suffix: string): string {\n  return prefix.replace(/\\/+$/, \"\") + \"/\" + suffix.replace(/^\\/+/, \"\");\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"buildUrlForBundle.native.js","sourceRoot":"","sources":["../../src/async-require/buildUrlForBundle.native.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;AAEH,SAAgB,iBAAiB,CAAC,UAAkB;IAClD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACnC,OAAO,cAAc,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SACpD;QACD,MAAM,IAAI,KAAK,CACb,6IAA6I,CAC9I,CAAC;KACH;SAAM;QACL,MAAM,YAAY,GAAG,OAAO,CAAC,iBAAiB,CAAC;aAC5C,OAAmD,CAAC;QAEvD,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,YAAY,EAAE,CAAC;QAE1C,OAAO,cAAc,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;KAC9C;AACH,CAAC;AAhBD,8CAgBC;AAED,SAAS,cAAc,CAAC,MAAc,EAAE,MAAc;IACpD,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACvE,CAAC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function buildUrlForBundle(bundlePath: string): string {\n  if (process.env.NODE_ENV === 'production') {\n    if (typeof location !== 'undefined') {\n      return joinComponents(location.origin, bundlePath);\n    }\n    throw new Error(\n      'Unable to determine the production URL where additional JavaScript chunks are hosted because the global \"location\" variable is not defined.'\n    );\n  } else {\n    const getDevServer = require('../getDevServer')\n      .default as typeof import('../getDevServer').default;\n\n    const { url: serverUrl } = getDevServer();\n\n    return joinComponents(serverUrl, bundlePath);\n  }\n}\n\nfunction joinComponents(prefix: string, suffix: string): string {\n  return prefix.replace(/\\/+$/, '') + '/' + suffix.replace(/^\\/+/, '');\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.d.ts.map b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.d.ts.map
index fc81585..69e2cde 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"fetchAsync.d.ts","sourceRoot":"","sources":["../../src/async-require/fetchAsync.ts"],"names":[],"mappings":"AAQA,wBAAsB,UAAU,CAC9B,GAAG,EAAE,MAAM,GACV,OAAO,CAAC;IAAE,IAAI,EAAE,MAAM,CAAC;IAAC,OAAO,EAAE,OAAO,CAAA;CAAE,CAAC,CAY7C"}
\ No newline at end of file
+{"version":3,"file":"fetchAsync.d.ts","sourceRoot":"","sources":["../../src/async-require/fetchAsync.ts"],"names":[],"mappings":"AAQA,wBAAsB,UAAU,CAAC,GAAG,EAAE,MAAM,GAAG,OAAO,CAAC;IAAE,IAAI,EAAE,MAAM,CAAC;IAAC,OAAO,EAAE,OAAO,CAAA;CAAE,CAAC,CAYzF"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.js b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.js
index 1b9ac21..59c5889 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.js
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.js
@@ -10,10 +10,10 @@ exports.fetchAsync = void 0;
 const react_native_1 = require("react-native");
 async function fetchAsync(url) {
     const response = await fetch(url, {
-        method: "GET",
+        method: 'GET',
         headers: {
             // No real reason for this but we try to use this format for everything.
-            "expo-platform": react_native_1.Platform.OS,
+            'expo-platform': react_native_1.Platform.OS,
         },
     });
     return {
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.js.map b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.js.map
index a45baa3..129b972 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.js.map
@@ -1 +1 @@
-{"version":3,"file":"fetchAsync.js","sourceRoot":"","sources":["../../src/async-require/fetchAsync.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,+CAAwC;AAEjC,KAAK,UAAU,UAAU,CAC9B,GAAW;IAEX,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;QAChC,MAAM,EAAE,KAAK;QACb,OAAO,EAAE;YACP,wEAAwE;YACxE,eAAe,EAAE,uBAAQ,CAAC,EAAE;SAC7B;KACF,CAAC,CAAC;IACH,OAAO;QACL,IAAI,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE;QAC3B,OAAO,EAAE,QAAQ,CAAC,OAAO;KAC1B,CAAC;AACJ,CAAC;AAdD,gCAcC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Platform } from \"react-native\";\n\nexport async function fetchAsync(\n  url: string\n): Promise<{ body: string; headers: Headers }> {\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      // No real reason for this but we try to use this format for everything.\n      \"expo-platform\": Platform.OS,\n    },\n  });\n  return {\n    body: await response.text(),\n    headers: response.headers,\n  };\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"fetchAsync.js","sourceRoot":"","sources":["../../src/async-require/fetchAsync.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,+CAAwC;AAEjC,KAAK,UAAU,UAAU,CAAC,GAAW;IAC1C,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;QAChC,MAAM,EAAE,KAAK;QACb,OAAO,EAAE;YACP,wEAAwE;YACxE,eAAe,EAAE,uBAAQ,CAAC,EAAE;SAC7B;KACF,CAAC,CAAC;IACH,OAAO;QACL,IAAI,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE;QAC3B,OAAO,EAAE,QAAQ,CAAC,OAAO;KAC1B,CAAC;AACJ,CAAC;AAZD,gCAYC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Platform } from 'react-native';\n\nexport async function fetchAsync(url: string): Promise<{ body: string; headers: Headers }> {\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      // No real reason for this but we try to use this format for everything.\n      'expo-platform': Platform.OS,\n    },\n  });\n  return {\n    body: await response.text(),\n    headers: response.headers,\n  };\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.d.ts b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.d.ts
index fdc7ac7..3af981f 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.d.ts
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.d.ts
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.d.ts.map b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.d.ts.map
index 5a978bf..991bc89 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"fetchAsync.native.d.ts","sourceRoot":"","sources":["../../src/async-require/fetchAsync.native.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAQH,wBAAgB,UAAU,CACxB,GAAG,EAAE,MAAM,GACV,OAAO,CAAC;IAAE,IAAI,EAAE,MAAM,CAAC;IAAC,OAAO,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;CAAE,CAAC,CA+D5D"}
\ No newline at end of file
+{"version":3,"file":"fetchAsync.native.d.ts","sourceRoot":"","sources":["../../src/async-require/fetchAsync.native.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAQH,wBAAgB,UAAU,CACxB,GAAG,EAAE,MAAM,GACV,OAAO,CAAC;IAAE,IAAI,EAAE,MAAM,CAAC;IAAC,OAAO,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;CAAE,CAAC,CAuD5D"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.js b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.js
index e52fcdc..4bc3f33 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.js
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -23,17 +23,17 @@ function fetchAsync(url) {
     let responseListener = null;
     return new Promise((resolve, reject) => {
         const addListener = RCTNetworking_1.default.addListener;
-        dataListener = addListener("didReceiveNetworkData", ([requestId, response]) => {
+        dataListener = addListener('didReceiveNetworkData', ([requestId, response]) => {
             if (requestId === id) {
                 responseText = response;
             }
         });
-        responseListener = addListener("didReceiveNetworkResponse", ([requestId, status, responseHeaders]) => {
+        responseListener = addListener('didReceiveNetworkResponse', ([requestId, status, responseHeaders]) => {
             if (requestId === id) {
                 headers = responseHeaders;
             }
         });
-        completeListener = addListener("didCompleteNetworkResponse", ([requestId, error]) => {
+        completeListener = addListener('didCompleteNetworkResponse', ([requestId, error]) => {
             if (requestId === id) {
                 if (error) {
                     reject(error);
@@ -43,15 +43,15 @@ function fetchAsync(url) {
                 }
             }
         });
-        RCTNetworking_1.default.sendRequest("GET", "asyncRequest", url, {
-            "expo-platform": react_native_1.Platform.OS,
-        }, "", "text", false, 0, (requestId) => {
+        RCTNetworking_1.default.sendRequest('GET', 'asyncRequest', url, {
+            'expo-platform': react_native_1.Platform.OS,
+        }, '', 'text', false, 0, (requestId) => {
             id = requestId;
         }, true);
     }).finally(() => {
-        dataListener === null || dataListener === void 0 ? void 0 : dataListener.remove();
-        completeListener === null || completeListener === void 0 ? void 0 : completeListener.remove();
-        responseListener === null || responseListener === void 0 ? void 0 : responseListener.remove();
+        dataListener?.remove();
+        completeListener?.remove();
+        responseListener?.remove();
     });
 }
 exports.fetchAsync = fetchAsync;
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.js.map b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.js.map
index 0feaa64..16186d0 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchAsync.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"fetchAsync.native.js","sourceRoot":"","sources":["../../src/async-require/fetchAsync.native.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;AAEH,+CAAwC;AACxC,mBAAmB;AACnB,iGAAsE;AAItE,SAAgB,UAAU,CACxB,GAAW;IAEX,IAAI,EAAE,GAAkB,IAAI,CAAC;IAC7B,IAAI,YAAY,GAAkB,IAAI,CAAC;IACvC,IAAI,OAAO,GAA2B,EAAE,CAAC;IACzC,IAAI,YAAY,GAAsB,IAAI,CAAC;IAC3C,IAAI,gBAAgB,GAAsB,IAAI,CAAC;IAC/C,IAAI,gBAAgB,GAAsB,IAAI,CAAC;IAC/C,OAAO,IAAI,OAAO,CAChB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAClB,MAAM,WAAW,GAAG,uBAAU,CAAC,WAGhB,CAAC;QAChB,YAAY,GAAG,WAAW,CACxB,uBAAuB,EACvB,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE;YACxB,IAAI,SAAS,KAAK,EAAE,EAAE;gBACpB,YAAY,GAAG,QAAQ,CAAC;aACzB;QACH,CAAC,CACF,CAAC;QACF,gBAAgB,GAAG,WAAW,CAC5B,2BAA2B,EAC3B,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,eAAe,CAAC,EAAE,EAAE;YACvC,IAAI,SAAS,KAAK,EAAE,EAAE;gBACpB,OAAO,GAAG,eAAe,CAAC;aAC3B;QACH,CAAC,CACF,CAAC;QACF,gBAAgB,GAAG,WAAW,CAC5B,4BAA4B,EAC5B,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE;YACrB,IAAI,SAAS,KAAK,EAAE,EAAE;gBACpB,IAAI,KAAK,EAAE;oBACT,MAAM,CAAC,KAAK,CAAC,CAAC;iBACf;qBAAM;oBACL,OAAO,CAAC,EAAE,IAAI,EAAE,YAAa,EAAE,OAAO,EAAE,CAAC,CAAC;iBAC3C;aACF;QACH,CAAC,CACF,CAAC;QACD,uBAAU,CAAC,WAAmB,CAC7B,KAAK,EACL,cAAc,EACd,GAAG,EACH;YACE,eAAe,EAAE,uBAAQ,CAAC,EAAE;SAC7B,EACD,EAAE,EACF,MAAM,EACN,KAAK,EACL,CAAC,EACD,CAAC,SAAiB,EAAE,EAAE;YACpB,EAAE,GAAG,SAAS,CAAC;QACjB,CAAC,EACD,IAAI,CACL,CAAC;IACJ,CAAC,CACF,CAAC,OAAO,CAAC,GAAG,EAAE;QACb,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,EAAE,CAAC;QACvB,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,MAAM,EAAE,CAAC;QAC3B,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,MAAM,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC;AAjED,gCAiEC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Platform } from \"react-native\";\n// @ts-expect-error\nimport Networking from \"react-native/Libraries/Network/RCTNetworking\";\n\ntype Subscriber = { remove: () => void };\n\nexport function fetchAsync(\n  url: string\n): Promise<{ body: string; headers: Record<string, string> }> {\n  let id: string | null = null;\n  let responseText: string | null = null;\n  let headers: Record<string, string> = {};\n  let dataListener: Subscriber | null = null;\n  let completeListener: Subscriber | null = null;\n  let responseListener: Subscriber | null = null;\n  return new Promise<{ body: string; headers: Record<string, string> }>(\n    (resolve, reject) => {\n      const addListener = Networking.addListener as (\n        event: string,\n        callback: (props: [string, any, any]) => any\n      ) => Subscriber;\n      dataListener = addListener(\n        \"didReceiveNetworkData\",\n        ([requestId, response]) => {\n          if (requestId === id) {\n            responseText = response;\n          }\n        }\n      );\n      responseListener = addListener(\n        \"didReceiveNetworkResponse\",\n        ([requestId, status, responseHeaders]) => {\n          if (requestId === id) {\n            headers = responseHeaders;\n          }\n        }\n      );\n      completeListener = addListener(\n        \"didCompleteNetworkResponse\",\n        ([requestId, error]) => {\n          if (requestId === id) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve({ body: responseText!, headers });\n            }\n          }\n        }\n      );\n      (Networking.sendRequest as any)(\n        \"GET\",\n        \"asyncRequest\",\n        url,\n        {\n          \"expo-platform\": Platform.OS,\n        },\n        \"\",\n        \"text\",\n        false,\n        0,\n        (requestId: string) => {\n          id = requestId;\n        },\n        true\n      );\n    }\n  ).finally(() => {\n    dataListener?.remove();\n    completeListener?.remove();\n    responseListener?.remove();\n  });\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"fetchAsync.native.js","sourceRoot":"","sources":["../../src/async-require/fetchAsync.native.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;AAEH,+CAAwC;AACxC,mBAAmB;AACnB,iGAAsE;AAItE,SAAgB,UAAU,CACxB,GAAW;IAEX,IAAI,EAAE,GAAkB,IAAI,CAAC;IAC7B,IAAI,YAAY,GAAkB,IAAI,CAAC;IACvC,IAAI,OAAO,GAA2B,EAAE,CAAC;IACzC,IAAI,YAAY,GAAsB,IAAI,CAAC;IAC3C,IAAI,gBAAgB,GAAsB,IAAI,CAAC;IAC/C,IAAI,gBAAgB,GAAsB,IAAI,CAAC;IAC/C,OAAO,IAAI,OAAO,CAAoD,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACxF,MAAM,WAAW,GAAG,uBAAU,CAAC,WAGhB,CAAC;QAChB,YAAY,GAAG,WAAW,CAAC,uBAAuB,EAAE,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE;YAC5E,IAAI,SAAS,KAAK,EAAE,EAAE;gBACpB,YAAY,GAAG,QAAQ,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,gBAAgB,GAAG,WAAW,CAC5B,2BAA2B,EAC3B,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,eAAe,CAAC,EAAE,EAAE;YACvC,IAAI,SAAS,KAAK,EAAE,EAAE;gBACpB,OAAO,GAAG,eAAe,CAAC;aAC3B;QACH,CAAC,CACF,CAAC;QACF,gBAAgB,GAAG,WAAW,CAAC,4BAA4B,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE;YAClF,IAAI,SAAS,KAAK,EAAE,EAAE;gBACpB,IAAI,KAAK,EAAE;oBACT,MAAM,CAAC,KAAK,CAAC,CAAC;iBACf;qBAAM;oBACL,OAAO,CAAC,EAAE,IAAI,EAAE,YAAa,EAAE,OAAO,EAAE,CAAC,CAAC;iBAC3C;aACF;QACH,CAAC,CAAC,CAAC;QACF,uBAAU,CAAC,WAAmB,CAC7B,KAAK,EACL,cAAc,EACd,GAAG,EACH;YACE,eAAe,EAAE,uBAAQ,CAAC,EAAE;SAC7B,EACD,EAAE,EACF,MAAM,EACN,KAAK,EACL,CAAC,EACD,CAAC,SAAiB,EAAE,EAAE;YACpB,EAAE,GAAG,SAAS,CAAC;QACjB,CAAC,EACD,IAAI,CACL,CAAC;IACJ,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE;QACd,YAAY,EAAE,MAAM,EAAE,CAAC;QACvB,gBAAgB,EAAE,MAAM,EAAE,CAAC;QAC3B,gBAAgB,EAAE,MAAM,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC;AAzDD,gCAyDC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Platform } from 'react-native';\n// @ts-expect-error\nimport Networking from 'react-native/Libraries/Network/RCTNetworking';\n\ntype Subscriber = { remove: () => void };\n\nexport function fetchAsync(\n  url: string\n): Promise<{ body: string; headers: Record<string, string> }> {\n  let id: string | null = null;\n  let responseText: string | null = null;\n  let headers: Record<string, string> = {};\n  let dataListener: Subscriber | null = null;\n  let completeListener: Subscriber | null = null;\n  let responseListener: Subscriber | null = null;\n  return new Promise<{ body: string; headers: Record<string, string> }>((resolve, reject) => {\n    const addListener = Networking.addListener as (\n      event: string,\n      callback: (props: [string, any, any]) => any\n    ) => Subscriber;\n    dataListener = addListener('didReceiveNetworkData', ([requestId, response]) => {\n      if (requestId === id) {\n        responseText = response;\n      }\n    });\n    responseListener = addListener(\n      'didReceiveNetworkResponse',\n      ([requestId, status, responseHeaders]) => {\n        if (requestId === id) {\n          headers = responseHeaders;\n        }\n      }\n    );\n    completeListener = addListener('didCompleteNetworkResponse', ([requestId, error]) => {\n      if (requestId === id) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve({ body: responseText!, headers });\n        }\n      }\n    });\n    (Networking.sendRequest as any)(\n      'GET',\n      'asyncRequest',\n      url,\n      {\n        'expo-platform': Platform.OS,\n      },\n      '',\n      'text',\n      false,\n      0,\n      (requestId: string) => {\n        id = requestId;\n      },\n      true\n    );\n  }).finally(() => {\n    dataListener?.remove();\n    completeListener?.remove();\n    responseListener?.remove();\n  });\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.d.ts.map b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.d.ts.map
index 706113c..505f747 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"fetchThenEval.d.ts","sourceRoot":"","sources":["../../src/async-require/fetchThenEval.ts"],"names":[],"mappings":"AAYA;;;;GAIG;AACH,wBAAgB,kBAAkB,CAAC,GAAG,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAuB7D"}
\ No newline at end of file
+{"version":3,"file":"fetchThenEval.d.ts","sourceRoot":"","sources":["../../src/async-require/fetchThenEval.ts"],"names":[],"mappings":"AAYA;;;;GAIG;AACH,wBAAgB,kBAAkB,CAAC,GAAG,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAqB7D"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.js b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.js
index 1d5d5a3..ca27c68 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.js
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.js
@@ -15,9 +15,8 @@ const fetchAsync_1 = require("./fetchAsync");
  */
 function fetchThenEvalAsync(url) {
     return (0, fetchAsync_1.fetchAsync)(url).then(({ body, headers }) => {
-        var _a;
-        if (((_a = headers === null || headers === void 0 ? void 0 : headers.has) === null || _a === void 0 ? void 0 : _a.call(headers, "Content-Type")) != null &&
-            headers.get("Content-Type").includes("application/json")) {
+        if (headers?.has?.('Content-Type') != null &&
+            headers.get('Content-Type').includes('application/json')) {
             // Errors are returned as JSON.
             throw new Error(JSON.parse(body).message || `Unknown error fetching '${url}'`);
         }
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.js.map b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.js.map
index f9906be..a9fa091 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.js.map
@@ -1 +1 @@
-{"version":3,"file":"fetchThenEval.js","sourceRoot":"","sources":["../../src/async-require/fetchThenEval.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,6CAA0C;AAM1C;;;;GAIG;AACH,SAAgB,kBAAkB,CAAC,GAAW;IAC5C,OAAO,IAAA,uBAAU,EAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;;QAChD,IACE,CAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,GAAG,wDAAG,cAAc,CAAC,KAAI,IAAI;YACtC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAE,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EACzD;YACA,+BAA+B;YAC/B,MAAM,IAAI,KAAK,CACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,2BAA2B,GAAG,GAAG,CAC9D,CAAC;SACH;QAED,gFAAgF;QAEhF,oEAAoE;QACpE,qEAAqE;QACrE,IAAI,MAAM,CAAC,uBAAuB,EAAE;YAClC,MAAM,CAAC,uBAAuB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC3C;aAAM;YACL,mCAAmC;YACnC,IAAI,CAAC,IAAI,CAAC,CAAC;SACZ;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAvBD,gDAuBC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { fetchAsync } from \"./fetchAsync\";\n\ndeclare let global: {\n  globalEvalWithSourceUrl?: any;\n};\n\n/**\n * Load a bundle for a URL using fetch + eval on native and script tag injection on web.\n *\n * @param bundlePath Given a statement like `import('./Bacon')` `bundlePath` would be `Bacon`.\n */\nexport function fetchThenEvalAsync(url: string): Promise<void> {\n  return fetchAsync(url).then(({ body, headers }) => {\n    if (\n      headers?.has?.(\"Content-Type\") != null &&\n      headers.get(\"Content-Type\")!.includes(\"application/json\")\n    ) {\n      // Errors are returned as JSON.\n      throw new Error(\n        JSON.parse(body).message || `Unknown error fetching '${url}'`\n      );\n    }\n\n    // NOTE(EvanBacon): All of this code is ignored in development mode at the root.\n\n    // Some engines do not support `sourceURL` as a comment. We expose a\n    // `globalEvalWithSourceUrl` function to handle updates in that case.\n    if (global.globalEvalWithSourceUrl) {\n      global.globalEvalWithSourceUrl(body, url);\n    } else {\n      // eslint-disable-next-line no-eval\n      eval(body);\n    }\n  });\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"fetchThenEval.js","sourceRoot":"","sources":["../../src/async-require/fetchThenEval.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,6CAA0C;AAM1C;;;;GAIG;AACH,SAAgB,kBAAkB,CAAC,GAAW;IAC5C,OAAO,IAAA,uBAAU,EAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;QAChD,IACE,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,IAAI;YACtC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAE,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EACzD;YACA,+BAA+B;YAC/B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,2BAA2B,GAAG,GAAG,CAAC,CAAC;SAChF;QAED,gFAAgF;QAEhF,oEAAoE;QACpE,qEAAqE;QACrE,IAAI,MAAM,CAAC,uBAAuB,EAAE;YAClC,MAAM,CAAC,uBAAuB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC3C;aAAM;YACL,mCAAmC;YACnC,IAAI,CAAC,IAAI,CAAC,CAAC;SACZ;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AArBD,gDAqBC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { fetchAsync } from './fetchAsync';\n\ndeclare let global: {\n  globalEvalWithSourceUrl?: any;\n};\n\n/**\n * Load a bundle for a URL using fetch + eval on native and script tag injection on web.\n *\n * @param bundlePath Given a statement like `import('./Bacon')` `bundlePath` would be `Bacon`.\n */\nexport function fetchThenEvalAsync(url: string): Promise<void> {\n  return fetchAsync(url).then(({ body, headers }) => {\n    if (\n      headers?.has?.('Content-Type') != null &&\n      headers.get('Content-Type')!.includes('application/json')\n    ) {\n      // Errors are returned as JSON.\n      throw new Error(JSON.parse(body).message || `Unknown error fetching '${url}'`);\n    }\n\n    // NOTE(EvanBacon): All of this code is ignored in development mode at the root.\n\n    // Some engines do not support `sourceURL` as a comment. We expose a\n    // `globalEvalWithSourceUrl` function to handle updates in that case.\n    if (global.globalEvalWithSourceUrl) {\n      global.globalEvalWithSourceUrl(body, url);\n    } else {\n      // eslint-disable-next-line no-eval\n      eval(body);\n    }\n  });\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.d.ts.map b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.d.ts.map
index aa711bd..946de7b 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"fetchThenEval.web.d.ts","sourceRoot":"","sources":["../../src/async-require/fetchThenEval.web.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,wBAAgB,kBAAkB,CAChC,GAAG,EAAE,MAAM,EACX,EACE,UAAU,EACV,KAAK,EACL,WAAW,GACZ,GAAE;IAAE,UAAU,CAAC,EAAE,MAAM,CAAC;IAAC,KAAK,CAAC,EAAE,MAAM,CAAC;IAAC,WAAW,CAAC,EAAE,MAAM,CAAA;CAAO,GACpE,OAAO,CAAC,IAAI,CAAC,CA2Df"}
\ No newline at end of file
+{"version":3,"file":"fetchThenEval.web.d.ts","sourceRoot":"","sources":["../../src/async-require/fetchThenEval.web.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,wBAAgB,kBAAkB,CAChC,GAAG,EAAE,MAAM,EACX,EACE,UAAU,EACV,KAAK,EACL,WAAW,GACZ,GAAE;IAAE,UAAU,CAAC,EAAE,MAAM,CAAC;IAAC,KAAK,CAAC,EAAE,MAAM,CAAC;IAAC,WAAW,CAAC,EAAE,MAAM,CAAA;CAAO,GACpE,OAAO,CAAC,IAAI,CAAC,CAiDf"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.js b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.js
index f1e65f1..e1bb560 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.js
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.js
@@ -9,18 +9,18 @@ exports.fetchThenEvalAsync = void 0;
  */
 // Basically `__webpack_require__.l`.
 function fetchThenEvalAsync(url, { scriptType, nonce, crossOrigin, } = {}) {
-    if (typeof document === "undefined") {
-        throw new Error("Cannot use fetchThenEvalAsync in a non-browser environment.");
+    if (typeof document === 'undefined') {
+        throw new Error('Cannot use fetchThenEvalAsync in a non-browser environment.');
     }
     return new Promise((resolve, reject) => {
-        const script = document.createElement("script");
+        const script = document.createElement('script');
         if (scriptType)
             script.type = scriptType;
         if (nonce)
-            script.setAttribute("nonce", nonce);
+            script.setAttribute('nonce', nonce);
         // script.setAttribute('data-expo-metro', ...);
         script.src = url;
-        if (crossOrigin && script.src.indexOf(window.location.origin + "/") !== 0) {
+        if (crossOrigin && script.src.indexOf(window.location.origin + '/') !== 0) {
             script.crossOrigin = crossOrigin;
         }
         script.onload = () => {
@@ -31,11 +31,10 @@ function fetchThenEvalAsync(url, { scriptType, nonce, crossOrigin, } = {}) {
         const error = new AsyncRequireError();
         // Server error or network error.
         script.onerror = (ev) => {
-            var _a;
             let event;
-            if (typeof ev === "string") {
+            if (typeof ev === 'string') {
                 event = {
-                    type: "error",
+                    type: 'error',
                     target: {
                         // @ts-expect-error
                         src: event,
@@ -45,17 +44,10 @@ function fetchThenEvalAsync(url, { scriptType, nonce, crossOrigin, } = {}) {
             else {
                 event = ev;
             }
-            const errorType = event && (event.type === "load" ? "missing" : event.type);
+            const errorType = event && (event.type === 'load' ? 'missing' : event.type);
             // @ts-expect-error
-            const realSrc = (_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.src;
-            error.message =
-                "Loading module " +
-                    url +
-                    " failed.\n(" +
-                    errorType +
-                    ": " +
-                    realSrc +
-                    ")";
+            const realSrc = event?.target?.src;
+            error.message = 'Loading module ' + url + ' failed.\n(' + errorType + ': ' + realSrc + ')';
             error.type = errorType;
             error.request = realSrc;
             script.parentNode && script.parentNode.removeChild(script);
@@ -66,9 +58,8 @@ function fetchThenEvalAsync(url, { scriptType, nonce, crossOrigin, } = {}) {
 }
 exports.fetchThenEvalAsync = fetchThenEvalAsync;
 class AsyncRequireError extends Error {
-    constructor() {
-        super(...arguments);
-        this.name = "AsyncRequireError";
-    }
+    name = 'AsyncRequireError';
+    type;
+    request;
 }
 //# sourceMappingURL=fetchThenEval.web.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.js.map b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.js.map
index 6e65a93..1a67cdc 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/fetchThenEval.web.js.map
@@ -1 +1 @@
-{"version":3,"file":"fetchThenEval.web.js","sourceRoot":"","sources":["../../src/async-require/fetchThenEval.web.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,qCAAqC;AACrC,SAAgB,kBAAkB,CAChC,GAAW,EACX,EACE,UAAU,EACV,KAAK,EACL,WAAW,MACsD,EAAE;IAErE,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;QACnC,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;KACH;IACD,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC3C,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,UAAU;YAAE,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC;QACzC,IAAI,KAAK;YAAE,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC/C,+CAA+C;QAC/C,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;QAEjB,IAAI,WAAW,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;YACzE,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;SAClC;QAED,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;QACF,kEAAkE;QAClE,MAAM,KAAK,GAAG,IAAI,iBAAiB,EAAE,CAAC;QAEtC,iCAAiC;QACjC,MAAM,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE;;YACtB,IAAI,KAAY,CAAC;YACjB,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;gBAC1B,KAAK,GAAG;oBACN,IAAI,EAAE,OAAO;oBACb,MAAM,EAAE;wBACN,mBAAmB;wBACnB,GAAG,EAAE,KAAK;qBACX;iBACF,CAAC;aACH;iBAAM;gBACL,KAAK,GAAG,EAAE,CAAC;aACZ;YAED,MAAM,SAAS,GACb,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5D,mBAAmB;YACnB,MAAM,OAAO,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,0CAAE,GAAG,CAAC;YACnC,KAAK,CAAC,OAAO;gBACX,iBAAiB;oBACjB,GAAG;oBACH,aAAa;oBACb,SAAS;oBACT,IAAI;oBACJ,OAAO;oBACP,GAAG,CAAC;YACN,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;YACvB,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YAExB,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC;QACF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC;AAlED,gDAkEC;AAED,MAAM,iBAAkB,SAAQ,KAAK;IAArC;;QACW,SAAI,GAAG,mBAAmB,CAAC;IAGtC,CAAC;CAAA","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Basically `__webpack_require__.l`.\nexport function fetchThenEvalAsync(\n  url: string,\n  {\n    scriptType,\n    nonce,\n    crossOrigin,\n  }: { scriptType?: string; nonce?: string; crossOrigin?: string } = {}\n): Promise<void> {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"Cannot use fetchThenEvalAsync in a non-browser environment.\"\n    );\n  }\n  return new Promise<void>((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    if (scriptType) script.type = scriptType;\n    if (nonce) script.setAttribute(\"nonce\", nonce);\n    // script.setAttribute('data-expo-metro', ...);\n    script.src = url;\n\n    if (crossOrigin && script.src.indexOf(window.location.origin + \"/\") !== 0) {\n      script.crossOrigin = crossOrigin;\n    }\n\n    script.onload = () => {\n      script.parentNode && script.parentNode.removeChild(script);\n      resolve();\n    };\n    // Create a new error object to preserve the original stack trace.\n    const error = new AsyncRequireError();\n\n    // Server error or network error.\n    script.onerror = (ev) => {\n      let event: Event;\n      if (typeof ev === \"string\") {\n        event = {\n          type: \"error\",\n          target: {\n            // @ts-expect-error\n            src: event,\n          },\n        };\n      } else {\n        event = ev;\n      }\n\n      const errorType =\n        event && (event.type === \"load\" ? \"missing\" : event.type);\n      // @ts-expect-error\n      const realSrc = event?.target?.src;\n      error.message =\n        \"Loading module \" +\n        url +\n        \" failed.\\n(\" +\n        errorType +\n        \": \" +\n        realSrc +\n        \")\";\n      error.type = errorType;\n      error.request = realSrc;\n\n      script.parentNode && script.parentNode.removeChild(script);\n      reject(error);\n    };\n    document.head.appendChild(script);\n  });\n}\n\nclass AsyncRequireError extends Error {\n  readonly name = \"AsyncRequireError\";\n  type?: string;\n  request?: string;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"fetchThenEval.web.js","sourceRoot":"","sources":["../../src/async-require/fetchThenEval.web.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,qCAAqC;AACrC,SAAgB,kBAAkB,CAChC,GAAW,EACX,EACE,UAAU,EACV,KAAK,EACL,WAAW,MACsD,EAAE;IAErE,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;QACnC,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;KAChF;IACD,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC3C,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,UAAU;YAAE,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC;QACzC,IAAI,KAAK;YAAE,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC/C,+CAA+C;QAC/C,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;QAEjB,IAAI,WAAW,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;YACzE,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;SAClC;QAED,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;QACF,kEAAkE;QAClE,MAAM,KAAK,GAAG,IAAI,iBAAiB,EAAE,CAAC;QAEtC,iCAAiC;QACjC,MAAM,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE;YACtB,IAAI,KAAY,CAAC;YACjB,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;gBAC1B,KAAK,GAAG;oBACN,IAAI,EAAE,OAAO;oBACb,MAAM,EAAE;wBACN,mBAAmB;wBACnB,GAAG,EAAE,KAAK;qBACX;iBACF,CAAC;aACH;iBAAM;gBACL,KAAK,GAAG,EAAE,CAAC;aACZ;YAED,MAAM,SAAS,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5E,mBAAmB;YACnB,MAAM,OAAO,GAAG,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC;YACnC,KAAK,CAAC,OAAO,GAAG,iBAAiB,GAAG,GAAG,GAAG,aAAa,GAAG,SAAS,GAAG,IAAI,GAAG,OAAO,GAAG,GAAG,CAAC;YAC3F,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;YACvB,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YAExB,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC;QACF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC;AAxDD,gDAwDC;AAED,MAAM,iBAAkB,SAAQ,KAAK;IAC1B,IAAI,GAAG,mBAAmB,CAAC;IACpC,IAAI,CAAU;IACd,OAAO,CAAU;CAClB","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Basically `__webpack_require__.l`.\nexport function fetchThenEvalAsync(\n  url: string,\n  {\n    scriptType,\n    nonce,\n    crossOrigin,\n  }: { scriptType?: string; nonce?: string; crossOrigin?: string } = {}\n): Promise<void> {\n  if (typeof document === 'undefined') {\n    throw new Error('Cannot use fetchThenEvalAsync in a non-browser environment.');\n  }\n  return new Promise<void>((resolve, reject) => {\n    const script = document.createElement('script');\n    if (scriptType) script.type = scriptType;\n    if (nonce) script.setAttribute('nonce', nonce);\n    // script.setAttribute('data-expo-metro', ...);\n    script.src = url;\n\n    if (crossOrigin && script.src.indexOf(window.location.origin + '/') !== 0) {\n      script.crossOrigin = crossOrigin;\n    }\n\n    script.onload = () => {\n      script.parentNode && script.parentNode.removeChild(script);\n      resolve();\n    };\n    // Create a new error object to preserve the original stack trace.\n    const error = new AsyncRequireError();\n\n    // Server error or network error.\n    script.onerror = (ev) => {\n      let event: Event;\n      if (typeof ev === 'string') {\n        event = {\n          type: 'error',\n          target: {\n            // @ts-expect-error\n            src: event,\n          },\n        };\n      } else {\n        event = ev;\n      }\n\n      const errorType = event && (event.type === 'load' ? 'missing' : event.type);\n      // @ts-expect-error\n      const realSrc = event?.target?.src;\n      error.message = 'Loading module ' + url + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n      error.type = errorType;\n      error.request = realSrc;\n\n      script.parentNode && script.parentNode.removeChild(script);\n      reject(error);\n    };\n    document.head.appendChild(script);\n  });\n}\n\nclass AsyncRequireError extends Error {\n  readonly name = 'AsyncRequireError';\n  type?: string;\n  request?: string;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/index.js b/node_modules/@expo/metro-runtime/build/async-require/index.js
index dd54843..04cf22e 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/index.js
+++ b/node_modules/@expo/metro-runtime/build/async-require/index.js
@@ -1,5 +1,4 @@
 "use strict";
-var _a;
 Object.defineProperty(exports, "__esModule", { value: true });
 /**
  * Copyright © 2022 650 Industries.
@@ -9,6 +8,5 @@ Object.defineProperty(exports, "__esModule", { value: true });
  */
 const buildAsyncRequire_1 = require("./buildAsyncRequire");
 // @ts-ignore
-global[`${(_a = global.__METRO_GLOBAL_PREFIX__) !== null && _a !== void 0 ? _a : ""}__loadBundleAsync`] =
-    (0, buildAsyncRequire_1.buildAsyncRequire)();
+global[`${global.__METRO_GLOBAL_PREFIX__ ?? ''}__loadBundleAsync`] = (0, buildAsyncRequire_1.buildAsyncRequire)();
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/index.js.map b/node_modules/@expo/metro-runtime/build/async-require/index.js.map
index a25b837..06d3d75 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/async-require/index.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,2DAAwD;AAExD,aAAa;AACb,MAAM,CAAC,GAAG,MAAA,MAAM,CAAC,uBAAuB,mCAAI,EAAE,mBAAmB,CAAC;IAChE,IAAA,qCAAiB,GAAE,CAAC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { buildAsyncRequire } from \"./buildAsyncRequire\";\n\n// @ts-ignore\nglobal[`${global.__METRO_GLOBAL_PREFIX__ ?? \"\"}__loadBundleAsync`] =\n  buildAsyncRequire();\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/async-require/index.ts"],"names":[],"mappings":";;AAAA;;;;;GAKG;AACH,2DAAwD;AAExD,aAAa;AACb,MAAM,CAAC,GAAG,MAAM,CAAC,uBAAuB,IAAI,EAAE,mBAAmB,CAAC,GAAG,IAAA,qCAAiB,GAAE,CAAC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { buildAsyncRequire } from './buildAsyncRequire';\n\n// @ts-ignore\nglobal[`${global.__METRO_GLOBAL_PREFIX__ ?? ''}__loadBundleAsync`] = buildAsyncRequire();\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/loadBundle.d.ts.map b/node_modules/@expo/metro-runtime/build/async-require/loadBundle.d.ts.map
index b1822c7..272974f 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/loadBundle.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/loadBundle.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"loadBundle.d.ts","sourceRoot":"","sources":["../../src/async-require/loadBundle.ts"],"names":[],"mappings":"AAWA;;;;GAIG;AACH,wBAAsB,eAAe,CAAC,UAAU,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CA6BvE"}
\ No newline at end of file
+{"version":3,"file":"loadBundle.d.ts","sourceRoot":"","sources":["../../src/async-require/loadBundle.ts"],"names":[],"mappings":"AAYA;;;;GAIG;AACH,wBAAsB,eAAe,CAAC,UAAU,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CA4BvE"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/async-require/loadBundle.js b/node_modules/@expo/metro-runtime/build/async-require/loadBundle.js
index b3023eb..0b9407c 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/loadBundle.js
+++ b/node_modules/@expo/metro-runtime/build/async-require/loadBundle.js
@@ -9,6 +9,7 @@ exports.loadBundleAsync = void 0;
  */
 const buildUrlForBundle_1 = require("./buildUrlForBundle");
 const fetchThenEval_1 = require("./fetchThenEval");
+// import LoadingView from '../LoadingView';
 let pendingRequests = 0;
 /**
  * Load a bundle for a URL using fetch + eval on native and script tag injection on web.
@@ -17,20 +18,19 @@ let pendingRequests = 0;
  */
 async function loadBundleAsync(bundlePath) {
     const requestUrl = (0, buildUrlForBundle_1.buildUrlForBundle)(bundlePath);
-    if (process.env.NODE_ENV === "production") {
+    if (process.env.NODE_ENV === 'production') {
         return (0, fetchThenEval_1.fetchThenEvalAsync)(requestUrl);
     }
     else {
-        const LoadingView = require("../LoadingView");
-        if (process.env.NODE_ENV !== "production") {
-            // Send a signal to the `expo` package to show the loading indicator.
-            LoadingView.showMessage("Downloading...", "load");
-        }
+        const LoadingView = require('../LoadingView')
+            .default;
+        // Send a signal to the `expo` package to show the loading indicator.
+        LoadingView.showMessage('Downloading...', 'load');
         pendingRequests++;
         return (0, fetchThenEval_1.fetchThenEvalAsync)(requestUrl)
             .then(() => {
-            if (process.env.NODE_ENV !== "production") {
-                const HMRClient = require("../HMRClient")
+            if (process.env.NODE_ENV !== 'production') {
+                const HMRClient = require('../HMRClient')
                     .default;
                 HMRClient.registerBundle(requestUrl);
             }
diff --git a/node_modules/@expo/metro-runtime/build/async-require/loadBundle.js.map b/node_modules/@expo/metro-runtime/build/async-require/loadBundle.js.map
index 8a0aed9..8c6abed 100644
--- a/node_modules/@expo/metro-runtime/build/async-require/loadBundle.js.map
+++ b/node_modules/@expo/metro-runtime/build/async-require/loadBundle.js.map
@@ -1 +1 @@
-{"version":3,"file":"loadBundle.js","sourceRoot":"","sources":["../../src/async-require/loadBundle.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,2DAAwD;AACxD,mDAAqD;AAErD,IAAI,eAAe,GAAG,CAAC,CAAC;AAExB;;;;GAIG;AACI,KAAK,UAAU,eAAe,CAAC,UAAkB;IACtD,MAAM,UAAU,GAAG,IAAA,qCAAiB,EAAC,UAAU,CAAC,CAAC;IAEjD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,OAAO,IAAA,kCAAkB,EAAC,UAAU,CAAC,CAAC;KACvC;SAAM;QACL,MAAM,WAAW,GACf,OAAO,CAAC,gBAAgB,CAA4C,CAAC;QAEvE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;YACzC,qEAAqE;YACrE,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;SACnD;QACD,eAAe,EAAE,CAAC;QAElB,OAAO,IAAA,kCAAkB,EAAC,UAAU,CAAC;aAClC,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;gBACzC,MAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC;qBACtC,OAAgD,CAAC;gBACpD,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;aACtC;QACH,CAAC,CAAC;aACD,OAAO,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,EAAE,eAAe,EAAE;gBACtB,WAAW,CAAC,IAAI,EAAE,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;KACN;AACH,CAAC;AA7BD,0CA6BC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { buildUrlForBundle } from \"./buildUrlForBundle\";\nimport { fetchThenEvalAsync } from \"./fetchThenEval\";\n\nlet pendingRequests = 0;\n\n/**\n * Load a bundle for a URL using fetch + eval on native and script tag injection on web.\n *\n * @param bundlePath Given a statement like `import('./Bacon')` `bundlePath` would be `Bacon.bundle?params=from-metro`.\n */\nexport async function loadBundleAsync(bundlePath: string): Promise<void> {\n  const requestUrl = buildUrlForBundle(bundlePath);\n\n  if (process.env.NODE_ENV === \"production\") {\n    return fetchThenEvalAsync(requestUrl);\n  } else {\n    const LoadingView =\n      require(\"../LoadingView\") as typeof import(\"../LoadingView\").default;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      // Send a signal to the `expo` package to show the loading indicator.\n      LoadingView.showMessage(\"Downloading...\", \"load\");\n    }\n    pendingRequests++;\n\n    return fetchThenEvalAsync(requestUrl)\n      .then(() => {\n        if (process.env.NODE_ENV !== \"production\") {\n          const HMRClient = require(\"../HMRClient\")\n            .default as typeof import(\"../HMRClient\").default;\n          HMRClient.registerBundle(requestUrl);\n        }\n      })\n      .finally(() => {\n        if (!--pendingRequests) {\n          LoadingView.hide();\n        }\n      });\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"loadBundle.js","sourceRoot":"","sources":["../../src/async-require/loadBundle.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,2DAAwD;AACxD,mDAAqD;AACrD,4CAA4C;AAE5C,IAAI,eAAe,GAAG,CAAC,CAAC;AAExB;;;;GAIG;AACI,KAAK,UAAU,eAAe,CAAC,UAAkB;IACtD,MAAM,UAAU,GAAG,IAAA,qCAAiB,EAAC,UAAU,CAAC,CAAC;IAEjD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,OAAO,IAAA,kCAAkB,EAAC,UAAU,CAAC,CAAC;KACvC;SAAM;QACL,MAAM,WAAW,GAAG,OAAO,CAAC,gBAAgB,CAAC;aAC1C,OAAkD,CAAC;QAEtD,qEAAqE;QACrE,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAElD,eAAe,EAAE,CAAC;QAElB,OAAO,IAAA,kCAAkB,EAAC,UAAU,CAAC;aAClC,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;gBACzC,MAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC;qBACtC,OAAgD,CAAC;gBACpD,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;aACtC;QACH,CAAC,CAAC;aACD,OAAO,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,EAAE,eAAe,EAAE;gBACtB,WAAW,CAAC,IAAI,EAAE,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;KACN;AACH,CAAC;AA5BD,0CA4BC","sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { buildUrlForBundle } from './buildUrlForBundle';\nimport { fetchThenEvalAsync } from './fetchThenEval';\n// import LoadingView from '../LoadingView';\n\nlet pendingRequests = 0;\n\n/**\n * Load a bundle for a URL using fetch + eval on native and script tag injection on web.\n *\n * @param bundlePath Given a statement like `import('./Bacon')` `bundlePath` would be `Bacon.bundle?params=from-metro`.\n */\nexport async function loadBundleAsync(bundlePath: string): Promise<void> {\n  const requestUrl = buildUrlForBundle(bundlePath);\n\n  if (process.env.NODE_ENV === 'production') {\n    return fetchThenEvalAsync(requestUrl);\n  } else {\n    const LoadingView = require('../LoadingView')\n      .default as typeof import('../LoadingView').default;\n\n    // Send a signal to the `expo` package to show the loading indicator.\n    LoadingView.showMessage('Downloading...', 'load');\n\n    pendingRequests++;\n\n    return fetchThenEvalAsync(requestUrl)\n      .then(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          const HMRClient = require('../HMRClient')\n            .default as typeof import('../HMRClient').default;\n          HMRClient.registerBundle(requestUrl);\n        }\n      })\n      .finally(() => {\n        if (!--pendingRequests) {\n          LoadingView.hide();\n        }\n      });\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/effects.js b/node_modules/@expo/metro-runtime/build/effects.js
index b12e6dc..110bf57 100644
--- a/node_modules/@expo/metro-runtime/build/effects.js
+++ b/node_modules/@expo/metro-runtime/build/effects.js
@@ -1,16 +1,16 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-const expo_modules_core_1 = require("expo-modules-core");
-if (
 // Only during development.
-global.__DEV__ &&
+if (process.env.NODE_ENV !== 'production') {
+    if (
     // Disable for SSR
-    expo_modules_core_1.Platform.isDOMAvailable &&
-    // Disable for non-metro runtimes
-    // NOTE(EvanBacon): This can probably be removed in favor of `expo/metro-config` injecting this file.
-    global.__METRO_GLOBAL_PREFIX__ != null) {
-    require("./setupFastRefresh");
-    require("./setupHMR");
-    require("./messageSocket");
+    typeof window !== 'undefined' &&
+        // Disable for non-metro runtimes
+        // NOTE(EvanBacon): This can probably be removed in favor of `expo/metro-config` injecting this file.
+        global.__METRO_GLOBAL_PREFIX__ != null) {
+        require('./setupFastRefresh');
+        require('./setupHMR');
+        require('./messageSocket');
+    }
 }
 //# sourceMappingURL=effects.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/effects.js.map b/node_modules/@expo/metro-runtime/build/effects.js.map
index 816ff34..3c17d08 100644
--- a/node_modules/@expo/metro-runtime/build/effects.js.map
+++ b/node_modules/@expo/metro-runtime/build/effects.js.map
@@ -1 +1 @@
-{"version":3,"file":"effects.js","sourceRoot":"","sources":["../src/effects.ts"],"names":[],"mappings":";;AAAA,yDAA6C;AAU7C;AACE,2BAA2B;AAC3B,MAAM,CAAC,OAAO;IACd,kBAAkB;IAClB,4BAAQ,CAAC,cAAc;IACvB,iCAAiC;IACjC,qGAAqG;IACrG,MAAM,CAAC,uBAAuB,IAAI,IAAI,EACtC;IACA,OAAO,CAAC,oBAAoB,CAAC,CAAC;IAC9B,OAAO,CAAC,YAAY,CAAC,CAAC;IACtB,OAAO,CAAC,iBAAiB,CAAC,CAAC;CAC5B","sourcesContent":["import { Platform } from \"expo-modules-core\";\n\ndeclare let global: {\n  __DEV__?: boolean;\n  RN$Bridgeless?: boolean;\n  __METRO_GLOBAL_PREFIX__?: string;\n  __RCTProfileIsProfiling?: boolean;\n  WebSocket: any;\n};\n\nif (\n  // Only during development.\n  global.__DEV__ &&\n  // Disable for SSR\n  Platform.isDOMAvailable &&\n  // Disable for non-metro runtimes\n  // NOTE(EvanBacon): This can probably be removed in favor of `expo/metro-config` injecting this file.\n  global.__METRO_GLOBAL_PREFIX__ != null\n) {\n  require(\"./setupFastRefresh\");\n  require(\"./setupHMR\");\n  require(\"./messageSocket\");\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"effects.js","sourceRoot":"","sources":["../src/effects.ts"],"names":[],"mappings":";;AAeA,2BAA2B;AAC3B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC;IACE,kBAAkB;IAClB,OAAO,MAAM,KAAK,WAAW;QAC7B,iCAAiC;QACjC,qGAAqG;QACrG,MAAM,CAAC,uBAAuB,IAAI,IAAI,EACtC;QACA,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC9B,OAAO,CAAC,YAAY,CAAC,CAAC;QACtB,OAAO,CAAC,iBAAiB,CAAC,CAAC;KAC5B;CACF","sourcesContent":["import type { NavigationContainerRef } from '@react-navigation/core';\nimport type { LinkingOptions } from '@react-navigation/native';\n\ndeclare let global: {\n  __DEV__?: boolean;\n  RN$Bridgeless?: boolean;\n  __METRO_GLOBAL_PREFIX__?: string;\n  __RCTProfileIsProfiling?: boolean;\n  WebSocket: any;\n  REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n};\n\n// Only during development.\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    // Disable for SSR\n    typeof window !== 'undefined' &&\n    // Disable for non-metro runtimes\n    // NOTE(EvanBacon): This can probably be removed in favor of `expo/metro-config` injecting this file.\n    global.__METRO_GLOBAL_PREFIX__ != null\n  ) {\n    require('./setupFastRefresh');\n    require('./setupHMR');\n    require('./messageSocket');\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/effects.native.js b/node_modules/@expo/metro-runtime/build/effects.native.js
index c613b85..3eafc00 100644
--- a/node_modules/@expo/metro-runtime/build/effects.native.js
+++ b/node_modules/@expo/metro-runtime/build/effects.native.js
@@ -1,2 +1 @@
-"use strict";
 //# sourceMappingURL=effects.native.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.d.ts
index a667afe..ce25aa9 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.d.ts
@@ -1,14 +1,14 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-import * as React from "react";
-import { LogBoxLog, StackType } from "./LogBoxLog";
-import type { LogLevel } from "./LogBoxLog";
-import type { Message, Category, ComponentStack, ExtendedExceptionData } from "./parseLogBoxLog";
+import * as React from 'react';
+import { LogBoxLog, StackType } from './LogBoxLog';
+import type { LogLevel } from './LogBoxLog';
+import type { Message, Category, ComponentStack, ExtendedExceptionData } from './parseLogBoxLog';
 export type LogBoxLogs = Set<LogBoxLog>;
 export type LogData = {
     level: LogLevel;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.d.ts.map
index 5341ba8..d34187b 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxData.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxData.tsx"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"LogBoxData.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxData.tsx"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.js b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.js
index b36eb3c..408bceb 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -35,18 +35,18 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.withSubscription = exports.observe = exports.isDisabled = exports.setDisabled = exports.addIgnorePatterns = exports.getIgnorePatterns = exports.dismiss = exports.clearErrors = exports.clearWarnings = exports.setSelectedLog = exports.clear = exports.symbolicateLogLazy = exports.retrySymbolicateLogNow = exports.symbolicateLogNow = exports.addException = exports.addLog = exports.isMessageIgnored = exports.isLogBoxErrorMessage = exports.reportUnexpectedLogBoxError = exports.reportLogBoxError = void 0;
 const React = __importStar(require("react"));
-const NativeLogBox_1 = __importDefault(require("../modules/NativeLogBox"));
-const parseErrorStack_1 = __importDefault(require("../modules/parseErrorStack"));
 const LogBoxLog_1 = require("./LogBoxLog");
 const LogContext_1 = require("./LogContext");
 const parseLogBoxLog_1 = require("./parseLogBoxLog");
+const NativeLogBox_1 = __importDefault(require("../modules/NativeLogBox"));
+const parseErrorStack_1 = __importDefault(require("../modules/parseErrorStack"));
 const observers = new Set();
 const ignorePatterns = new Set();
 let logs = new Set();
 let updateTimeout = null;
 let _isDisabled = false;
 let _selectedIndex = -1;
-const LOGBOX_ERROR_MESSAGE = "An error was thrown when attempting to render log messages via LogBox.";
+const LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';
 function getNextState() {
     return {
         logs,
@@ -55,7 +55,7 @@ function getNextState() {
     };
 }
 function reportLogBoxError(error, componentStack) {
-    const ExceptionsManager = require("../modules/ExceptionsManager");
+    const ExceptionsManager = require('../modules/ExceptionsManager').default;
     if (componentStack != null) {
         error.componentStack = componentStack;
     }
@@ -68,13 +68,13 @@ function reportUnexpectedLogBoxError(error, componentStack) {
 }
 exports.reportUnexpectedLogBoxError = reportUnexpectedLogBoxError;
 function isLogBoxErrorMessage(message) {
-    return typeof message === "string" && message.includes(LOGBOX_ERROR_MESSAGE);
+    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);
 }
 exports.isLogBoxErrorMessage = isLogBoxErrorMessage;
 function isMessageIgnored(message) {
     for (const pattern of ignorePatterns) {
         if ((pattern instanceof RegExp && pattern.test(message)) ||
-            (typeof pattern === "string" && message.includes(pattern))) {
+            (typeof pattern === 'string' && message.includes(pattern))) {
             return true;
         }
     }
@@ -111,7 +111,7 @@ function appendNewLog(newLog) {
         handleUpdate();
         return;
     }
-    if (newLog.level === "fatal") {
+    if (newLog.level === 'fatal') {
         // If possible, to avoid jank, we don't want to open the error before
         // it's symbolicated. To do that, we optimistically wait for
         // symbolication for up to a second before adding the log.
@@ -132,19 +132,19 @@ function appendNewLog(newLog) {
             }
         }, OPTIMISTIC_WAIT_TIME);
         // TODO: HANDLE THIS
-        newLog.symbolicate("component");
-        newLog.symbolicate("stack", (status) => {
-            if (addPendingLog && status !== "PENDING") {
+        newLog.symbolicate('component');
+        newLog.symbolicate('stack', (status) => {
+            if (addPendingLog && status !== 'PENDING') {
                 addPendingLog();
                 clearTimeout(optimisticTimeout);
             }
-            else if (status !== "PENDING") {
+            else if (status !== 'PENDING') {
                 // The log has already been added but we need to trigger a render.
                 handleUpdate();
             }
         });
     }
-    else if (newLog.level === "syntax") {
+    else if (newLog.level === 'syntax') {
         logs.add(newLog);
         setSelectedLog(logs.size - 1);
     }
@@ -159,7 +159,7 @@ function addLog(log) {
     // otherwise spammy logs would pause rendering.
     setImmediate(() => {
         try {
-            const stack = (0, parseErrorStack_1.default)(errorForStackTrace === null || errorForStackTrace === void 0 ? void 0 : errorForStackTrace.stack);
+            const stack = (0, parseErrorStack_1.default)(errorForStackTrace?.stack);
             appendNewLog(new LogBoxLog_1.LogBoxLog({
                 level: log.level,
                 message: log.message,
@@ -218,7 +218,7 @@ function setSelectedLog(proposedNewIndex) {
     let index = logArray.length - 1;
     while (index >= 0) {
         // The latest syntax error is selected and displayed before all other logs.
-        if (logArray[index].level === "syntax") {
+        if (logArray[index].level === 'syntax') {
             newIndex = index;
             break;
         }
@@ -239,7 +239,7 @@ function setSelectedLog(proposedNewIndex) {
 }
 exports.setSelectedLog = setSelectedLog;
 function clearWarnings() {
-    const newLogs = Array.from(logs).filter((log) => log.level !== "warn");
+    const newLogs = Array.from(logs).filter((log) => log.level !== 'warn');
     if (newLogs.length !== logs.size) {
         logs = new Set(newLogs);
         setSelectedLog(-1);
@@ -248,7 +248,7 @@ function clearWarnings() {
 }
 exports.clearWarnings = clearWarnings;
 function clearErrors() {
-    const newLogs = Array.from(logs).filter((log) => log.level !== "error" && log.level !== "fatal");
+    const newLogs = Array.from(logs).filter((log) => log.level !== 'error' && log.level !== 'fatal');
     if (newLogs.length !== logs.size) {
         logs = new Set(newLogs);
         setSelectedLog(-1);
@@ -318,37 +318,6 @@ function observe(observer) {
 exports.observe = observe;
 function withSubscription(WrappedComponent) {
     class LogBoxStateSubscription extends React.Component {
-        constructor() {
-            super(...arguments);
-            this.state = {
-                logs: new Set(),
-                isDisabled: false,
-                hasError: false,
-                selectedLogIndex: -1,
-            };
-            this._handleDismiss = () => {
-                // Here we handle the cases when the log is dismissed and it
-                // was either the last log, or when the current index
-                // is now outside the bounds of the log array.
-                const { selectedLogIndex, logs: stateLogs } = this.state;
-                const logsArray = Array.from(stateLogs);
-                if (selectedLogIndex != null) {
-                    if (logsArray.length - 1 <= 0) {
-                        setSelectedLog(-1);
-                    }
-                    else if (selectedLogIndex >= logsArray.length - 1) {
-                        setSelectedLog(selectedLogIndex - 1);
-                    }
-                    dismiss(logsArray[selectedLogIndex]);
-                }
-            };
-            this._handleMinimize = () => {
-                setSelectedLog(-1);
-            };
-            this._handleSetSelectedLog = (index) => {
-                setSelectedLog(index);
-            };
-        }
         static getDerivedStateFromError() {
             return { hasError: true };
         }
@@ -357,6 +326,13 @@ function withSubscription(WrappedComponent) {
              * this parameters */
             reportLogBoxError(err, errorInfo.componentStack);
         }
+        _subscription;
+        state = {
+            logs: new Set(),
+            isDisabled: false,
+            hasError: false,
+            selectedLogIndex: -1,
+        };
         render() {
             if (this.state.hasError) {
                 // This happens when the component failed to render, in which case we delegate to the native redbox.
@@ -381,6 +357,28 @@ function withSubscription(WrappedComponent) {
                 this._subscription.unsubscribe();
             }
         }
+        _handleDismiss = () => {
+            // Here we handle the cases when the log is dismissed and it
+            // was either the last log, or when the current index
+            // is now outside the bounds of the log array.
+            const { selectedLogIndex, logs: stateLogs } = this.state;
+            const logsArray = Array.from(stateLogs);
+            if (selectedLogIndex != null) {
+                if (logsArray.length - 1 <= 0) {
+                    setSelectedLog(-1);
+                }
+                else if (selectedLogIndex >= logsArray.length - 1) {
+                    setSelectedLog(selectedLogIndex - 1);
+                }
+                dismiss(logsArray[selectedLogIndex]);
+            }
+        };
+        _handleMinimize = () => {
+            setSelectedLog(-1);
+        };
+        _handleSetSelectedLog = (index) => {
+            setSelectedLog(index);
+        };
     }
     // @ts-expect-error
     return LogBoxStateSubscription;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.js.map
index 617307d..740e572 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxData.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxData.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxData.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\nimport NativeLogBox from \"../modules/NativeLogBox\";\nimport parseErrorStack from \"../modules/parseErrorStack\";\nimport { LogBoxLog, StackType } from \"./LogBoxLog\";\nimport type { LogLevel } from \"./LogBoxLog\";\nimport { LogContext } from \"./LogContext\";\nimport { parseLogBoxException } from \"./parseLogBoxLog\";\nimport type {\n  Message,\n  Category,\n  ComponentStack,\n  ExtendedExceptionData,\n} from \"./parseLogBoxLog\";\n\nexport type LogBoxLogs = Set<LogBoxLog>;\n\nexport type LogData = {\n  level: LogLevel;\n  message: Message;\n  category: Category;\n  componentStack: ComponentStack;\n};\n\ntype ExtendedError = any;\n\nexport type Observer = (options: {\n  logs: LogBoxLogs;\n  isDisabled: boolean;\n  selectedLogIndex: number;\n}) => void;\n\nexport type IgnorePattern = string | RegExp;\n\nexport type Subscription = {\n  unsubscribe: () => void;\n};\n\nexport type WarningInfo = {\n  finalFormat: string;\n  forceDialogImmediately: boolean;\n  suppressDialog_LEGACY: boolean;\n  suppressCompletely: boolean;\n  monitorEvent: string | null;\n  monitorListVersion: number;\n  monitorSampleRate: number;\n};\n\nexport type WarningFilter = (format: string) => WarningInfo;\n\ntype Props = object;\n\ntype State = {\n  logs: LogBoxLogs;\n  isDisabled: boolean;\n  hasError: boolean;\n  selectedLogIndex: number;\n};\n\nconst observers: Set<{ observer: Observer } & any> = new Set();\nconst ignorePatterns: Set<IgnorePattern> = new Set();\nlet logs: LogBoxLogs = new Set();\nlet updateTimeout:\n  | null\n  | ReturnType<typeof setImmediate>\n  | ReturnType<typeof setTimeout> = null;\nlet _isDisabled = false;\nlet _selectedIndex = -1;\n\nconst LOGBOX_ERROR_MESSAGE =\n  \"An error was thrown when attempting to render log messages via LogBox.\";\n\nfunction getNextState() {\n  return {\n    logs,\n    isDisabled: _isDisabled,\n    selectedLogIndex: _selectedIndex,\n  };\n}\n\nexport function reportLogBoxError(\n  error: ExtendedError,\n  componentStack?: string\n): void {\n  const ExceptionsManager = require(\"../modules/ExceptionsManager\");\n\n  if (componentStack != null) {\n    error.componentStack = componentStack;\n  }\n  ExceptionsManager.handleException(error);\n}\n\nexport function reportUnexpectedLogBoxError(\n  error: ExtendedError,\n  componentStack?: string\n): void {\n  error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n  return reportLogBoxError(error, componentStack);\n}\n\nexport function isLogBoxErrorMessage(message: string): boolean {\n  return typeof message === \"string\" && message.includes(LOGBOX_ERROR_MESSAGE);\n}\n\nexport function isMessageIgnored(message: string): boolean {\n  for (const pattern of ignorePatterns) {\n    if (\n      (pattern instanceof RegExp && pattern.test(message)) ||\n      (typeof pattern === \"string\" && message.includes(pattern))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction setImmediateShim(callback: () => void) {\n  if (!global.setImmediate) {\n    return setTimeout(callback, 0);\n  }\n  return global.setImmediate(callback);\n}\n\nfunction handleUpdate(): void {\n  if (updateTimeout == null) {\n    updateTimeout = setImmediateShim(() => {\n      updateTimeout = null;\n      const nextState = getNextState();\n      observers.forEach(({ observer }) => observer(nextState));\n    });\n  }\n}\n\nfunction appendNewLog(newLog: LogBoxLog): void {\n  // Don't want store these logs because they trigger a\n  // state update when we add them to the store.\n  if (isMessageIgnored(newLog.message.content)) {\n    return;\n  }\n\n  // If the next log has the same category as the previous one\n  // then roll it up into the last log in the list by incrementing\n  // the count (similar to how Chrome does it).\n  const lastLog = Array.from(logs).pop();\n  if (lastLog && lastLog.category === newLog.category) {\n    lastLog.incrementCount();\n    handleUpdate();\n    return;\n  }\n\n  if (newLog.level === \"fatal\") {\n    // If possible, to avoid jank, we don't want to open the error before\n    // it's symbolicated. To do that, we optimistically wait for\n    // symbolication for up to a second before adding the log.\n    const OPTIMISTIC_WAIT_TIME = 1000;\n\n    let addPendingLog: null | (() => void) = () => {\n      logs.add(newLog);\n      if (_selectedIndex < 0) {\n        setSelectedLog(logs.size - 1);\n      } else {\n        handleUpdate();\n      }\n      addPendingLog = null;\n    };\n\n    const optimisticTimeout = setTimeout(() => {\n      if (addPendingLog) {\n        addPendingLog();\n      }\n    }, OPTIMISTIC_WAIT_TIME);\n\n    // TODO: HANDLE THIS\n    newLog.symbolicate(\"component\");\n\n    newLog.symbolicate(\"stack\", (status) => {\n      if (addPendingLog && status !== \"PENDING\") {\n        addPendingLog();\n        clearTimeout(optimisticTimeout);\n      } else if (status !== \"PENDING\") {\n        // The log has already been added but we need to trigger a render.\n        handleUpdate();\n      }\n    });\n  } else if (newLog.level === \"syntax\") {\n    logs.add(newLog);\n    setSelectedLog(logs.size - 1);\n  } else {\n    logs.add(newLog);\n    handleUpdate();\n  }\n}\n\nexport function addLog(log: LogData): void {\n  const errorForStackTrace = new Error();\n\n  // Parsing logs are expensive so we schedule this\n  // otherwise spammy logs would pause rendering.\n  setImmediate(() => {\n    try {\n      const stack = parseErrorStack(errorForStackTrace?.stack);\n\n      appendNewLog(\n        new LogBoxLog({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack,\n        })\n      );\n    } catch (error) {\n      reportUnexpectedLogBoxError(error);\n    }\n  });\n}\n\nexport function addException(error: ExtendedExceptionData): void {\n  // Parsing logs are expensive so we schedule this\n  // otherwise spammy logs would pause rendering.\n  setImmediate(() => {\n    try {\n      appendNewLog(new LogBoxLog(parseLogBoxException(error)));\n    } catch (loggingError) {\n      reportUnexpectedLogBoxError(loggingError);\n    }\n  });\n}\n\nexport function symbolicateLogNow(type: StackType, log: LogBoxLog) {\n  log.symbolicate(type, () => {\n    handleUpdate();\n  });\n}\n\nexport function retrySymbolicateLogNow(type: StackType, log: LogBoxLog) {\n  log.retrySymbolicate(type, () => {\n    handleUpdate();\n  });\n}\n\nexport function symbolicateLogLazy(type: StackType, log: LogBoxLog) {\n  log.symbolicate(type);\n}\n\nexport function clear(): void {\n  if (logs.size > 0) {\n    logs = new Set();\n    setSelectedLog(-1);\n  }\n}\n\nexport function setSelectedLog(proposedNewIndex: number): void {\n  const oldIndex = _selectedIndex;\n  let newIndex = proposedNewIndex;\n\n  const logArray = Array.from(logs);\n  let index = logArray.length - 1;\n  while (index >= 0) {\n    // The latest syntax error is selected and displayed before all other logs.\n    if (logArray[index].level === \"syntax\") {\n      newIndex = index;\n      break;\n    }\n    index -= 1;\n  }\n  _selectedIndex = newIndex;\n  handleUpdate();\n  if (NativeLogBox) {\n    setTimeout(() => {\n      if (oldIndex < 0 && newIndex >= 0) {\n        NativeLogBox.show();\n      } else if (oldIndex >= 0 && newIndex < 0) {\n        NativeLogBox.hide();\n      }\n    }, 0);\n  }\n}\n\nexport function clearWarnings(): void {\n  const newLogs = Array.from(logs).filter((log) => log.level !== \"warn\");\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n    handleUpdate();\n  }\n}\n\nexport function clearErrors(): void {\n  const newLogs = Array.from(logs).filter(\n    (log) => log.level !== \"error\" && log.level !== \"fatal\"\n  );\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n  }\n}\n\nexport function dismiss(log: LogBoxLog): void {\n  if (logs.has(log)) {\n    logs.delete(log);\n    handleUpdate();\n  }\n}\n\nexport function getIgnorePatterns(): IgnorePattern[] {\n  return Array.from(ignorePatterns);\n}\n\nexport function addIgnorePatterns(patterns: IgnorePattern[]): void {\n  const existingSize = ignorePatterns.size;\n  // The same pattern may be added multiple times, but adding a new pattern\n  // can be expensive so let's find only the ones that are new.\n  patterns.forEach((pattern: IgnorePattern) => {\n    if (pattern instanceof RegExp) {\n      for (const existingPattern of ignorePatterns) {\n        if (\n          existingPattern instanceof RegExp &&\n          existingPattern.toString() === pattern.toString()\n        ) {\n          return;\n        }\n      }\n      ignorePatterns.add(pattern);\n    }\n    ignorePatterns.add(pattern);\n  });\n  if (ignorePatterns.size === existingSize) {\n    return;\n  }\n  // We need to recheck all of the existing logs.\n  // This allows adding an ignore pattern anywhere in the codebase.\n  // Without this, if you ignore a pattern after the a log is created,\n  // then we would keep showing the log.\n  logs = new Set(\n    Array.from(logs).filter((log) => !isMessageIgnored(log.message.content))\n  );\n  handleUpdate();\n}\n\nexport function setDisabled(value: boolean): void {\n  if (value === _isDisabled) {\n    return;\n  }\n  _isDisabled = value;\n  handleUpdate();\n}\n\nexport function isDisabled(): boolean {\n  return _isDisabled;\n}\n\nexport function observe(observer: Observer): Subscription {\n  const subscription = { observer };\n  observers.add(subscription);\n\n  observer(getNextState());\n\n  return {\n    unsubscribe(): void {\n      observers.delete(subscription);\n    },\n  };\n}\n\nexport function withSubscription(\n  WrappedComponent: React.FC<object>\n): React.Component<object> {\n  class LogBoxStateSubscription extends React.Component<\n    React.PropsWithChildren<Props>,\n    State\n  > {\n    static getDerivedStateFromError() {\n      return { hasError: true };\n    }\n\n    componentDidCatch(err: Error, errorInfo: { componentStack: string } & any) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      reportLogBoxError(err, errorInfo.componentStack);\n    }\n\n    _subscription?: Subscription;\n\n    state = {\n      logs: new Set<LogBoxLog>(),\n      isDisabled: false,\n      hasError: false,\n      selectedLogIndex: -1,\n    };\n\n    render() {\n      if (this.state.hasError) {\n        // This happens when the component failed to render, in which case we delegate to the native redbox.\n        // We can't show any fallback UI here, because the error may be with <View> or <Text>.\n        return null;\n      }\n\n      return (\n        <LogContext.Provider\n          value={{\n            selectedLogIndex: this.state.selectedLogIndex,\n            isDisabled: this.state.isDisabled,\n            logs: Array.from(this.state.logs),\n          }}\n        >\n          {this.props.children}\n          <WrappedComponent />\n        </LogContext.Provider>\n      );\n    }\n\n    componentDidMount(): void {\n      this._subscription = observe((data) => {\n        this.setState(data);\n      });\n    }\n\n    componentWillUnmount(): void {\n      if (this._subscription != null) {\n        this._subscription.unsubscribe();\n      }\n    }\n\n    _handleDismiss = (): void => {\n      // Here we handle the cases when the log is dismissed and it\n      // was either the last log, or when the current index\n      // is now outside the bounds of the log array.\n      const { selectedLogIndex, logs: stateLogs } = this.state;\n      const logsArray = Array.from(stateLogs);\n      if (selectedLogIndex != null) {\n        if (logsArray.length - 1 <= 0) {\n          setSelectedLog(-1);\n        } else if (selectedLogIndex >= logsArray.length - 1) {\n          setSelectedLog(selectedLogIndex - 1);\n        }\n\n        dismiss(logsArray[selectedLogIndex]);\n      }\n    };\n\n    _handleMinimize = (): void => {\n      setSelectedLog(-1);\n    };\n\n    _handleSetSelectedLog = (index: number): void => {\n      setSelectedLog(index);\n    };\n  }\n\n  // @ts-expect-error\n  return LogBoxStateSubscription;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxData.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxData.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from 'react';\n\nimport { LogBoxLog, StackType } from './LogBoxLog';\nimport type { LogLevel } from './LogBoxLog';\nimport { LogContext } from './LogContext';\nimport { parseLogBoxException } from './parseLogBoxLog';\nimport type { Message, Category, ComponentStack, ExtendedExceptionData } from './parseLogBoxLog';\nimport NativeLogBox from '../modules/NativeLogBox';\nimport parseErrorStack from '../modules/parseErrorStack';\n\nexport type LogBoxLogs = Set<LogBoxLog>;\n\nexport type LogData = {\n  level: LogLevel;\n  message: Message;\n  category: Category;\n  componentStack: ComponentStack;\n};\n\ntype ExtendedError = any;\n\nexport type Observer = (options: {\n  logs: LogBoxLogs;\n  isDisabled: boolean;\n  selectedLogIndex: number;\n}) => void;\n\nexport type IgnorePattern = string | RegExp;\n\nexport type Subscription = {\n  unsubscribe: () => void;\n};\n\nexport type WarningInfo = {\n  finalFormat: string;\n  forceDialogImmediately: boolean;\n  suppressDialog_LEGACY: boolean;\n  suppressCompletely: boolean;\n  monitorEvent: string | null;\n  monitorListVersion: number;\n  monitorSampleRate: number;\n};\n\nexport type WarningFilter = (format: string) => WarningInfo;\n\ntype Props = object;\n\ntype State = {\n  logs: LogBoxLogs;\n  isDisabled: boolean;\n  hasError: boolean;\n  selectedLogIndex: number;\n};\n\nconst observers: Set<{ observer: Observer } & any> = new Set();\nconst ignorePatterns: Set<IgnorePattern> = new Set();\nlet logs: LogBoxLogs = new Set();\nlet updateTimeout: null | ReturnType<typeof setImmediate> | ReturnType<typeof setTimeout> = null;\nlet _isDisabled = false;\nlet _selectedIndex = -1;\n\nconst LOGBOX_ERROR_MESSAGE =\n  'An error was thrown when attempting to render log messages via LogBox.';\n\nfunction getNextState() {\n  return {\n    logs,\n    isDisabled: _isDisabled,\n    selectedLogIndex: _selectedIndex,\n  };\n}\n\nexport function reportLogBoxError(error: ExtendedError, componentStack?: string): void {\n  const ExceptionsManager = require('../modules/ExceptionsManager').default;\n\n  if (componentStack != null) {\n    error.componentStack = componentStack;\n  }\n  ExceptionsManager.handleException(error);\n}\n\nexport function reportUnexpectedLogBoxError(error: ExtendedError, componentStack?: string): void {\n  error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n  return reportLogBoxError(error, componentStack);\n}\n\nexport function isLogBoxErrorMessage(message: string): boolean {\n  return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n}\n\nexport function isMessageIgnored(message: string): boolean {\n  for (const pattern of ignorePatterns) {\n    if (\n      (pattern instanceof RegExp && pattern.test(message)) ||\n      (typeof pattern === 'string' && message.includes(pattern))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction setImmediateShim(callback: () => void) {\n  if (!global.setImmediate) {\n    return setTimeout(callback, 0);\n  }\n  return global.setImmediate(callback);\n}\n\nfunction handleUpdate(): void {\n  if (updateTimeout == null) {\n    updateTimeout = setImmediateShim(() => {\n      updateTimeout = null;\n      const nextState = getNextState();\n      observers.forEach(({ observer }) => observer(nextState));\n    });\n  }\n}\n\nfunction appendNewLog(newLog: LogBoxLog): void {\n  // Don't want store these logs because they trigger a\n  // state update when we add them to the store.\n  if (isMessageIgnored(newLog.message.content)) {\n    return;\n  }\n\n  // If the next log has the same category as the previous one\n  // then roll it up into the last log in the list by incrementing\n  // the count (similar to how Chrome does it).\n  const lastLog = Array.from(logs).pop();\n  if (lastLog && lastLog.category === newLog.category) {\n    lastLog.incrementCount();\n    handleUpdate();\n    return;\n  }\n\n  if (newLog.level === 'fatal') {\n    // If possible, to avoid jank, we don't want to open the error before\n    // it's symbolicated. To do that, we optimistically wait for\n    // symbolication for up to a second before adding the log.\n    const OPTIMISTIC_WAIT_TIME = 1000;\n\n    let addPendingLog: null | (() => void) = () => {\n      logs.add(newLog);\n      if (_selectedIndex < 0) {\n        setSelectedLog(logs.size - 1);\n      } else {\n        handleUpdate();\n      }\n      addPendingLog = null;\n    };\n\n    const optimisticTimeout = setTimeout(() => {\n      if (addPendingLog) {\n        addPendingLog();\n      }\n    }, OPTIMISTIC_WAIT_TIME);\n\n    // TODO: HANDLE THIS\n    newLog.symbolicate('component');\n\n    newLog.symbolicate('stack', (status) => {\n      if (addPendingLog && status !== 'PENDING') {\n        addPendingLog();\n        clearTimeout(optimisticTimeout);\n      } else if (status !== 'PENDING') {\n        // The log has already been added but we need to trigger a render.\n        handleUpdate();\n      }\n    });\n  } else if (newLog.level === 'syntax') {\n    logs.add(newLog);\n    setSelectedLog(logs.size - 1);\n  } else {\n    logs.add(newLog);\n    handleUpdate();\n  }\n}\n\nexport function addLog(log: LogData): void {\n  const errorForStackTrace = new Error();\n\n  // Parsing logs are expensive so we schedule this\n  // otherwise spammy logs would pause rendering.\n  setImmediate(() => {\n    try {\n      const stack = parseErrorStack(errorForStackTrace?.stack);\n\n      appendNewLog(\n        new LogBoxLog({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack,\n        })\n      );\n    } catch (error) {\n      reportUnexpectedLogBoxError(error);\n    }\n  });\n}\n\nexport function addException(error: ExtendedExceptionData): void {\n  // Parsing logs are expensive so we schedule this\n  // otherwise spammy logs would pause rendering.\n  setImmediate(() => {\n    try {\n      appendNewLog(new LogBoxLog(parseLogBoxException(error)));\n    } catch (loggingError) {\n      reportUnexpectedLogBoxError(loggingError);\n    }\n  });\n}\n\nexport function symbolicateLogNow(type: StackType, log: LogBoxLog) {\n  log.symbolicate(type, () => {\n    handleUpdate();\n  });\n}\n\nexport function retrySymbolicateLogNow(type: StackType, log: LogBoxLog) {\n  log.retrySymbolicate(type, () => {\n    handleUpdate();\n  });\n}\n\nexport function symbolicateLogLazy(type: StackType, log: LogBoxLog) {\n  log.symbolicate(type);\n}\n\nexport function clear(): void {\n  if (logs.size > 0) {\n    logs = new Set();\n    setSelectedLog(-1);\n  }\n}\n\nexport function setSelectedLog(proposedNewIndex: number): void {\n  const oldIndex = _selectedIndex;\n  let newIndex = proposedNewIndex;\n\n  const logArray = Array.from(logs);\n  let index = logArray.length - 1;\n  while (index >= 0) {\n    // The latest syntax error is selected and displayed before all other logs.\n    if (logArray[index].level === 'syntax') {\n      newIndex = index;\n      break;\n    }\n    index -= 1;\n  }\n  _selectedIndex = newIndex;\n  handleUpdate();\n  if (NativeLogBox) {\n    setTimeout(() => {\n      if (oldIndex < 0 && newIndex >= 0) {\n        NativeLogBox.show();\n      } else if (oldIndex >= 0 && newIndex < 0) {\n        NativeLogBox.hide();\n      }\n    }, 0);\n  }\n}\n\nexport function clearWarnings(): void {\n  const newLogs = Array.from(logs).filter((log) => log.level !== 'warn');\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n    handleUpdate();\n  }\n}\n\nexport function clearErrors(): void {\n  const newLogs = Array.from(logs).filter((log) => log.level !== 'error' && log.level !== 'fatal');\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n  }\n}\n\nexport function dismiss(log: LogBoxLog): void {\n  if (logs.has(log)) {\n    logs.delete(log);\n    handleUpdate();\n  }\n}\n\nexport function getIgnorePatterns(): IgnorePattern[] {\n  return Array.from(ignorePatterns);\n}\n\nexport function addIgnorePatterns(patterns: IgnorePattern[]): void {\n  const existingSize = ignorePatterns.size;\n  // The same pattern may be added multiple times, but adding a new pattern\n  // can be expensive so let's find only the ones that are new.\n  patterns.forEach((pattern: IgnorePattern) => {\n    if (pattern instanceof RegExp) {\n      for (const existingPattern of ignorePatterns) {\n        if (\n          existingPattern instanceof RegExp &&\n          existingPattern.toString() === pattern.toString()\n        ) {\n          return;\n        }\n      }\n      ignorePatterns.add(pattern);\n    }\n    ignorePatterns.add(pattern);\n  });\n  if (ignorePatterns.size === existingSize) {\n    return;\n  }\n  // We need to recheck all of the existing logs.\n  // This allows adding an ignore pattern anywhere in the codebase.\n  // Without this, if you ignore a pattern after the a log is created,\n  // then we would keep showing the log.\n  logs = new Set(Array.from(logs).filter((log) => !isMessageIgnored(log.message.content)));\n  handleUpdate();\n}\n\nexport function setDisabled(value: boolean): void {\n  if (value === _isDisabled) {\n    return;\n  }\n  _isDisabled = value;\n  handleUpdate();\n}\n\nexport function isDisabled(): boolean {\n  return _isDisabled;\n}\n\nexport function observe(observer: Observer): Subscription {\n  const subscription = { observer };\n  observers.add(subscription);\n\n  observer(getNextState());\n\n  return {\n    unsubscribe(): void {\n      observers.delete(subscription);\n    },\n  };\n}\n\nexport function withSubscription(WrappedComponent: React.FC<object>): React.Component<object> {\n  class LogBoxStateSubscription extends React.Component<React.PropsWithChildren<Props>, State> {\n    static getDerivedStateFromError() {\n      return { hasError: true };\n    }\n\n    componentDidCatch(err: Error, errorInfo: { componentStack: string } & any) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      reportLogBoxError(err, errorInfo.componentStack);\n    }\n\n    _subscription?: Subscription;\n\n    state = {\n      logs: new Set<LogBoxLog>(),\n      isDisabled: false,\n      hasError: false,\n      selectedLogIndex: -1,\n    };\n\n    render() {\n      if (this.state.hasError) {\n        // This happens when the component failed to render, in which case we delegate to the native redbox.\n        // We can't show any fallback UI here, because the error may be with <View> or <Text>.\n        return null;\n      }\n\n      return (\n        <LogContext.Provider\n          value={{\n            selectedLogIndex: this.state.selectedLogIndex,\n            isDisabled: this.state.isDisabled,\n            logs: Array.from(this.state.logs),\n          }}>\n          {this.props.children}\n          <WrappedComponent />\n        </LogContext.Provider>\n      );\n    }\n\n    componentDidMount(): void {\n      this._subscription = observe((data) => {\n        this.setState(data);\n      });\n    }\n\n    componentWillUnmount(): void {\n      if (this._subscription != null) {\n        this._subscription.unsubscribe();\n      }\n    }\n\n    _handleDismiss = (): void => {\n      // Here we handle the cases when the log is dismissed and it\n      // was either the last log, or when the current index\n      // is now outside the bounds of the log array.\n      const { selectedLogIndex, logs: stateLogs } = this.state;\n      const logsArray = Array.from(stateLogs);\n      if (selectedLogIndex != null) {\n        if (logsArray.length - 1 <= 0) {\n          setSelectedLog(-1);\n        } else if (selectedLogIndex >= logsArray.length - 1) {\n          setSelectedLog(selectedLogIndex - 1);\n        }\n\n        dismiss(logsArray[selectedLogIndex]);\n      }\n    };\n\n    _handleMinimize = (): void => {\n      setSelectedLog(-1);\n    };\n\n    _handleSetSelectedLog = (index: number): void => {\n      setSelectedLog(index);\n    };\n  }\n\n  // @ts-expect-error\n  return LogBoxStateSubscription;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.d.ts
index a7b3d8f..11ec160 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.d.ts
@@ -1,14 +1,14 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-import type { Stack } from "./LogBoxSymbolication";
-import type { Category, Message, ComponentStack, CodeFrame } from "./parseLogBoxLog";
-type SymbolicationStatus = "NONE" | "PENDING" | "COMPLETE" | "FAILED";
-export type LogLevel = "warn" | "error" | "fatal" | "syntax" | "static";
+import type { Stack } from './LogBoxSymbolication';
+import type { Category, Message, ComponentStack, CodeFrame } from './parseLogBoxLog';
+type SymbolicationStatus = 'NONE' | 'PENDING' | 'COMPLETE' | 'FAILED';
+export type LogLevel = 'warn' | 'error' | 'fatal' | 'syntax' | 'static';
 export type LogBoxLogData = {
     level: LogLevel;
     type?: string;
@@ -19,23 +19,23 @@ export type LogBoxLogData = {
     codeFrame?: CodeFrame;
     isComponentError: boolean;
 };
-export type StackType = "stack" | "component";
+export type StackType = 'stack' | 'component';
 type SymbolicationResult = {
     error: null;
     stack: null;
-    status: "NONE";
+    status: 'NONE';
 } | {
     error: null;
     stack: null;
-    status: "PENDING";
+    status: 'PENDING';
 } | {
     error: null;
     stack: Stack;
-    status: "COMPLETE";
+    status: 'COMPLETE';
 } | {
     error: Error;
     stack: null;
-    status: "FAILED";
+    status: 'FAILED';
 };
 export declare class LogBoxLog {
     message: Message;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.d.ts.map
index 7c6d887..d336600 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxLog.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxLog.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,KAAK,EACV,QAAQ,EACR,OAAO,EACP,cAAc,EACd,SAAS,EACV,MAAM,kBAAkB,CAAC;AAE1B,KAAK,mBAAmB,GAAG,MAAM,GAAG,SAAS,GAAG,UAAU,GAAG,QAAQ,CAAC;AAEtE,MAAM,MAAM,QAAQ,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAExE,MAAM,MAAM,aAAa,GAAG;IAC1B,KAAK,EAAE,QAAQ,CAAC;IAChB,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,OAAO,CAAC;IACjB,KAAK,EAAE,KAAK,CAAC;IACb,QAAQ,EAAE,MAAM,CAAC;IACjB,cAAc,EAAE,cAAc,CAAC;IAC/B,SAAS,CAAC,EAAE,SAAS,CAAC;IACtB,gBAAgB,EAAE,OAAO,CAAC;CAC3B,CAAC;AAEF,MAAM,MAAM,SAAS,GAAG,OAAO,GAAG,WAAW,CAAC;AAc9C,KAAK,mBAAmB,GACpB;IAAE,KAAK,EAAE,IAAI,CAAC;IAAC,KAAK,EAAE,IAAI,CAAC;IAAC,MAAM,EAAE,MAAM,CAAA;CAAE,GAC5C;IAAE,KAAK,EAAE,IAAI,CAAC;IAAC,KAAK,EAAE,IAAI,CAAC;IAAC,MAAM,EAAE,SAAS,CAAA;CAAE,GAC/C;IAAE,KAAK,EAAE,IAAI,CAAC;IAAC,KAAK,EAAE,KAAK,CAAC;IAAC,MAAM,EAAE,UAAU,CAAA;CAAE,GACjD;IAAE,KAAK,EAAE,KAAK,CAAC;IAAC,KAAK,EAAE,IAAI,CAAC;IAAC,MAAM,EAAE,QAAQ,CAAA;CAAE,CAAC;AAEpD,qBAAa,SAAS;IACpB,OAAO,EAAE,OAAO,CAAC;IACjB,IAAI,EAAE,MAAM,CAAC;IACb,QAAQ,EAAE,QAAQ,CAAC;IACnB,cAAc,EAAE,cAAc,CAAC;IAC/B,KAAK,EAAE,KAAK,CAAC;IACb,KAAK,EAAE,MAAM,CAAC;IACd,KAAK,EAAE,QAAQ,CAAC;IAChB,SAAS,CAAC,EAAE,SAAS,CAAC;IACtB,gBAAgB,EAAE,OAAO,CAAC;IAC1B,YAAY,EAAE,MAAM,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAWlD;IAEF,OAAO,CAAC,SAAS,CAAyD;gBAGxE,IAAI,EAAE,aAAa,GAAG;QACpB,YAAY,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;KACvD;IAcH,cAAc,IAAI,IAAI;IAItB,iBAAiB,CAAC,IAAI,EAAE,SAAS,GAAG,KAAK,GAAG,IAAI;IAOhD,OAAO,CAAC,cAAc;IAWtB,OAAO,CAAC,YAAY;IASpB,gBAAgB,CACd,IAAI,EAAE,SAAS,EACf,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,mBAAmB,KAAK,IAAI,GAC/C,IAAI;IAIP,WAAW,CACT,IAAI,EAAE,SAAS,EACf,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,mBAAmB,KAAK,IAAI,GAC/C,IAAI;IAIP,OAAO,CAAC,YAAY;IAwBpB,OAAO,CAAC,mBAAmB,CAAsB;IAEjD,OAAO,CAAC,QAAQ;IAUhB,OAAO,CAAC,iBAAiB;IAkBzB,OAAO,CAAC,YAAY;CAsCrB"}
\ No newline at end of file
+{"version":3,"file":"LogBoxLog.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxLog.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAErF,KAAK,mBAAmB,GAAG,MAAM,GAAG,SAAS,GAAG,UAAU,GAAG,QAAQ,CAAC;AAEtE,MAAM,MAAM,QAAQ,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAExE,MAAM,MAAM,aAAa,GAAG;IAC1B,KAAK,EAAE,QAAQ,CAAC;IAChB,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,OAAO,CAAC;IACjB,KAAK,EAAE,KAAK,CAAC;IACb,QAAQ,EAAE,MAAM,CAAC;IACjB,cAAc,EAAE,cAAc,CAAC;IAC/B,SAAS,CAAC,EAAE,SAAS,CAAC;IACtB,gBAAgB,EAAE,OAAO,CAAC;CAC3B,CAAC;AAEF,MAAM,MAAM,SAAS,GAAG,OAAO,GAAG,WAAW,CAAC;AAc9C,KAAK,mBAAmB,GACpB;IAAE,KAAK,EAAE,IAAI,CAAC;IAAC,KAAK,EAAE,IAAI,CAAC;IAAC,MAAM,EAAE,MAAM,CAAA;CAAE,GAC5C;IAAE,KAAK,EAAE,IAAI,CAAC;IAAC,KAAK,EAAE,IAAI,CAAC;IAAC,MAAM,EAAE,SAAS,CAAA;CAAE,GAC/C;IAAE,KAAK,EAAE,IAAI,CAAC;IAAC,KAAK,EAAE,KAAK,CAAC;IAAC,MAAM,EAAE,UAAU,CAAA;CAAE,GACjD;IAAE,KAAK,EAAE,KAAK,CAAC;IAAC,KAAK,EAAE,IAAI,CAAC;IAAC,MAAM,EAAE,QAAQ,CAAA;CAAE,CAAC;AAEpD,qBAAa,SAAS;IACpB,OAAO,EAAE,OAAO,CAAC;IACjB,IAAI,EAAE,MAAM,CAAC;IACb,QAAQ,EAAE,QAAQ,CAAC;IACnB,cAAc,EAAE,cAAc,CAAC;IAC/B,KAAK,EAAE,KAAK,CAAC;IACb,KAAK,EAAE,MAAM,CAAC;IACd,KAAK,EAAE,QAAQ,CAAC;IAChB,SAAS,CAAC,EAAE,SAAS,CAAC;IACtB,gBAAgB,EAAE,OAAO,CAAC;IAC1B,YAAY,EAAE,MAAM,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAWlD;IAEF,OAAO,CAAC,SAAS,CAAyD;gBAGxE,IAAI,EAAE,aAAa,GAAG;QACpB,YAAY,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;KACvD;IAcH,cAAc,IAAI,IAAI;IAItB,iBAAiB,CAAC,IAAI,EAAE,SAAS,GAAG,KAAK,GAAG,IAAI;IAOhD,OAAO,CAAC,cAAc;IAWtB,OAAO,CAAC,YAAY;IASpB,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,mBAAmB,KAAK,IAAI,GAAG,IAAI;IAIzF,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,mBAAmB,KAAK,IAAI,GAAG,IAAI;IAIpF,OAAO,CAAC,YAAY;IAwBpB,OAAO,CAAC,mBAAmB,CAAsB;IAEjD,OAAO,CAAC,QAAQ;IAUhB,OAAO,CAAC,iBAAiB;IAkBzB,OAAO,CAAC,YAAY;CAsCrB"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.js b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.js
index 9dbdb60..e7e8150 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -33,36 +33,40 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxLog = void 0;
 const LogBoxSymbolication = __importStar(require("./LogBoxSymbolication"));
 function componentStackToStack(componentStack) {
-    return componentStack.map((stack) => {
-        var _a, _b, _c, _d;
-        return ({
-            file: stack.fileName,
-            methodName: stack.content,
-            lineNumber: (_b = (_a = stack.location) === null || _a === void 0 ? void 0 : _a.row) !== null && _b !== void 0 ? _b : 0,
-            column: (_d = (_c = stack.location) === null || _c === void 0 ? void 0 : _c.column) !== null && _d !== void 0 ? _d : 0,
-            arguments: [],
-        });
-    });
+    return componentStack.map((stack) => ({
+        file: stack.fileName,
+        methodName: stack.content,
+        lineNumber: stack.location?.row ?? 0,
+        column: stack.location?.column ?? 0,
+        arguments: [],
+    }));
 }
 class LogBoxLog {
+    message;
+    type;
+    category;
+    componentStack;
+    stack;
+    count;
+    level;
+    codeFrame;
+    isComponentError;
+    symbolicated = {
+        stack: {
+            error: null,
+            stack: null,
+            status: 'NONE',
+        },
+        component: {
+            error: null,
+            stack: null,
+            status: 'NONE',
+        },
+    };
+    callbacks = new Map();
     constructor(data) {
-        var _a, _b;
-        this.symbolicated = {
-            stack: {
-                error: null,
-                stack: null,
-                status: "NONE",
-            },
-            component: {
-                error: null,
-                stack: null,
-                status: "NONE",
-            },
-        };
-        this.callbacks = new Map();
-        this.componentStackCache = null;
         this.level = data.level;
-        this.type = (_a = data.type) !== null && _a !== void 0 ? _a : "error";
+        this.type = data.type ?? 'error';
         this.message = data.message;
         this.stack = data.stack;
         this.category = data.category;
@@ -70,13 +74,13 @@ class LogBoxLog {
         this.codeFrame = data.codeFrame;
         this.isComponentError = data.isComponentError;
         this.count = 1;
-        this.symbolicated = (_b = data.symbolicated) !== null && _b !== void 0 ? _b : this.symbolicated;
+        this.symbolicated = data.symbolicated ?? this.symbolicated;
     }
     incrementCount() {
         this.count += 1;
     }
     getAvailableStack(type) {
-        if (this.symbolicated[type].status === "COMPLETE") {
+        if (this.symbolicated[type].status === 'COMPLETE') {
             return this.symbolicated[type].stack;
         }
         return this.getStack(type);
@@ -110,7 +114,7 @@ class LogBoxLog {
             this.pushCallback(type, callback);
         }
         const status = this.symbolicated[type].status;
-        if (status === "COMPLETE") {
+        if (status === 'COMPLETE') {
             return this.flushCallbacks(type);
         }
         if (retry) {
@@ -118,13 +122,14 @@ class LogBoxLog {
             this.handleSymbolicate(type);
         }
         else {
-            if (status === "NONE") {
+            if (status === 'NONE') {
                 this.handleSymbolicate(type);
             }
         }
     }
+    componentStackCache = null;
     getStack(type) {
-        if (type === "component") {
+        if (type === 'component') {
             if (this.componentStackCache == null) {
                 this.componentStackCache = componentStackToStack(this.componentStack);
             }
@@ -133,14 +138,13 @@ class LogBoxLog {
         return this.stack;
     }
     handleSymbolicate(type) {
-        var _a;
-        if (type === "component" && !((_a = this.componentStack) === null || _a === void 0 ? void 0 : _a.length)) {
+        if (type === 'component' && !this.componentStack?.length) {
             return;
         }
-        if (this.symbolicated[type].status !== "PENDING") {
+        if (this.symbolicated[type].status !== 'PENDING') {
             this.updateStatus(type, null, null, null);
             LogBoxSymbolication.symbolicate(this.getStack(type)).then((data) => {
-                this.updateStatus(type, null, data === null || data === void 0 ? void 0 : data.stack, data === null || data === void 0 ? void 0 : data.codeFrame);
+                this.updateStatus(type, null, data?.stack, data?.codeFrame);
             }, (error) => {
                 this.updateStatus(type, error, null, null);
             });
@@ -152,7 +156,7 @@ class LogBoxLog {
             this.symbolicated[type] = {
                 error,
                 stack: null,
-                status: "FAILED",
+                status: 'FAILED',
             };
         }
         else if (stack != null) {
@@ -162,19 +166,19 @@ class LogBoxLog {
             this.symbolicated[type] = {
                 error: null,
                 stack,
-                status: "COMPLETE",
+                status: 'COMPLETE',
             };
         }
         else {
             this.symbolicated[type] = {
                 error: null,
                 stack: null,
-                status: "PENDING",
+                status: 'PENDING',
             };
         }
         const status = this.symbolicated[type].status;
         if (lastStatus !== status) {
-            if (["COMPLETE", "FAILED"].includes(status)) {
+            if (['COMPLETE', 'FAILED'].includes(status)) {
                 this.flushCallbacks(type);
             }
         }
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.js.map
index 3605ee2..15bc404 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxLog.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxLog.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxLog.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as LogBoxSymbolication from \"./LogBoxSymbolication\";\nimport type { Stack } from \"./LogBoxSymbolication\";\nimport type {\n  Category,\n  Message,\n  ComponentStack,\n  CodeFrame,\n} from \"./parseLogBoxLog\";\n\ntype SymbolicationStatus = \"NONE\" | \"PENDING\" | \"COMPLETE\" | \"FAILED\";\n\nexport type LogLevel = \"warn\" | \"error\" | \"fatal\" | \"syntax\" | \"static\";\n\nexport type LogBoxLogData = {\n  level: LogLevel;\n  type?: string;\n  message: Message;\n  stack: Stack;\n  category: string;\n  componentStack: ComponentStack;\n  codeFrame?: CodeFrame;\n  isComponentError: boolean;\n};\n\nexport type StackType = \"stack\" | \"component\";\n\nfunction componentStackToStack(componentStack: ComponentStack): Stack {\n  return componentStack.map((stack) => ({\n    file: stack.fileName,\n    methodName: stack.content,\n    lineNumber: stack.location?.row ?? 0,\n    column: stack.location?.column ?? 0,\n    arguments: [],\n  }));\n}\n\ntype SymbolicationCallback = (status: SymbolicationStatus) => void;\n\ntype SymbolicationResult =\n  | { error: null; stack: null; status: \"NONE\" }\n  | { error: null; stack: null; status: \"PENDING\" }\n  | { error: null; stack: Stack; status: \"COMPLETE\" }\n  | { error: Error; stack: null; status: \"FAILED\" };\n\nexport class LogBoxLog {\n  message: Message;\n  type: string;\n  category: Category;\n  componentStack: ComponentStack;\n  stack: Stack;\n  count: number;\n  level: LogLevel;\n  codeFrame?: CodeFrame;\n  isComponentError: boolean;\n  symbolicated: Record<StackType, SymbolicationResult> = {\n    stack: {\n      error: null,\n      stack: null,\n      status: \"NONE\",\n    },\n    component: {\n      error: null,\n      stack: null,\n      status: \"NONE\",\n    },\n  };\n\n  private callbacks: Map<StackType, Set<SymbolicationCallback>> = new Map();\n\n  constructor(\n    data: LogBoxLogData & {\n      symbolicated?: Record<StackType, SymbolicationResult>;\n    }\n  ) {\n    this.level = data.level;\n    this.type = data.type ?? \"error\";\n    this.message = data.message;\n    this.stack = data.stack;\n    this.category = data.category;\n    this.componentStack = data.componentStack;\n    this.codeFrame = data.codeFrame;\n    this.isComponentError = data.isComponentError;\n    this.count = 1;\n    this.symbolicated = data.symbolicated ?? this.symbolicated;\n  }\n\n  incrementCount(): void {\n    this.count += 1;\n  }\n\n  getAvailableStack(type: StackType): Stack | null {\n    if (this.symbolicated[type].status === \"COMPLETE\") {\n      return this.symbolicated[type].stack;\n    }\n    return this.getStack(type);\n  }\n\n  private flushCallbacks(type: StackType): void {\n    const callbacks = this.callbacks.get(type);\n    const status = this.symbolicated[type].status;\n    if (callbacks) {\n      for (const callback of callbacks) {\n        callback(status);\n      }\n      callbacks.clear();\n    }\n  }\n\n  private pushCallback(type: StackType, callback: SymbolicationCallback): void {\n    let callbacks = this.callbacks.get(type);\n    if (!callbacks) {\n      callbacks = new Set();\n      this.callbacks.set(type, callbacks);\n    }\n    callbacks.add(callback);\n  }\n\n  retrySymbolicate(\n    type: StackType,\n    callback?: (status: SymbolicationStatus) => void\n  ): void {\n    this._symbolicate(type, true, callback);\n  }\n\n  symbolicate(\n    type: StackType,\n    callback?: (status: SymbolicationStatus) => void\n  ): void {\n    this._symbolicate(type, false, callback);\n  }\n\n  private _symbolicate(\n    type: StackType,\n    retry: boolean,\n    callback?: (status: SymbolicationStatus) => void\n  ): void {\n    if (callback) {\n      this.pushCallback(type, callback);\n    }\n    const status = this.symbolicated[type].status;\n\n    if (status === \"COMPLETE\") {\n      return this.flushCallbacks(type);\n    }\n\n    if (retry) {\n      LogBoxSymbolication.deleteStack(this.getStack(type));\n      this.handleSymbolicate(type);\n    } else {\n      if (status === \"NONE\") {\n        this.handleSymbolicate(type);\n      }\n    }\n  }\n\n  private componentStackCache: Stack | null = null;\n\n  private getStack(type: StackType): Stack {\n    if (type === \"component\") {\n      if (this.componentStackCache == null) {\n        this.componentStackCache = componentStackToStack(this.componentStack);\n      }\n      return this.componentStackCache;\n    }\n    return this.stack;\n  }\n\n  private handleSymbolicate(type: StackType): void {\n    if (type === \"component\" && !this.componentStack?.length) {\n      return;\n    }\n\n    if (this.symbolicated[type].status !== \"PENDING\") {\n      this.updateStatus(type, null, null, null);\n      LogBoxSymbolication.symbolicate(this.getStack(type)).then(\n        (data) => {\n          this.updateStatus(type, null, data?.stack, data?.codeFrame);\n        },\n        (error) => {\n          this.updateStatus(type, error, null, null);\n        }\n      );\n    }\n  }\n\n  private updateStatus(\n    type: StackType,\n    error?: Error | null,\n    stack?: Stack | null,\n    codeFrame?: CodeFrame | null\n  ): void {\n    const lastStatus = this.symbolicated[type].status;\n    if (error != null) {\n      this.symbolicated[type] = {\n        error,\n        stack: null,\n        status: \"FAILED\",\n      };\n    } else if (stack != null) {\n      if (codeFrame) {\n        this.codeFrame = codeFrame;\n      }\n\n      this.symbolicated[type] = {\n        error: null,\n        stack,\n        status: \"COMPLETE\",\n      };\n    } else {\n      this.symbolicated[type] = {\n        error: null,\n        stack: null,\n        status: \"PENDING\",\n      };\n    }\n\n    const status = this.symbolicated[type].status;\n    if (lastStatus !== status) {\n      if ([\"COMPLETE\", \"FAILED\"].includes(status)) {\n        this.flushCallbacks(type);\n      }\n    }\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxLog.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxLog.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as LogBoxSymbolication from './LogBoxSymbolication';\nimport type { Stack } from './LogBoxSymbolication';\nimport type { Category, Message, ComponentStack, CodeFrame } from './parseLogBoxLog';\n\ntype SymbolicationStatus = 'NONE' | 'PENDING' | 'COMPLETE' | 'FAILED';\n\nexport type LogLevel = 'warn' | 'error' | 'fatal' | 'syntax' | 'static';\n\nexport type LogBoxLogData = {\n  level: LogLevel;\n  type?: string;\n  message: Message;\n  stack: Stack;\n  category: string;\n  componentStack: ComponentStack;\n  codeFrame?: CodeFrame;\n  isComponentError: boolean;\n};\n\nexport type StackType = 'stack' | 'component';\n\nfunction componentStackToStack(componentStack: ComponentStack): Stack {\n  return componentStack.map((stack) => ({\n    file: stack.fileName,\n    methodName: stack.content,\n    lineNumber: stack.location?.row ?? 0,\n    column: stack.location?.column ?? 0,\n    arguments: [],\n  }));\n}\n\ntype SymbolicationCallback = (status: SymbolicationStatus) => void;\n\ntype SymbolicationResult =\n  | { error: null; stack: null; status: 'NONE' }\n  | { error: null; stack: null; status: 'PENDING' }\n  | { error: null; stack: Stack; status: 'COMPLETE' }\n  | { error: Error; stack: null; status: 'FAILED' };\n\nexport class LogBoxLog {\n  message: Message;\n  type: string;\n  category: Category;\n  componentStack: ComponentStack;\n  stack: Stack;\n  count: number;\n  level: LogLevel;\n  codeFrame?: CodeFrame;\n  isComponentError: boolean;\n  symbolicated: Record<StackType, SymbolicationResult> = {\n    stack: {\n      error: null,\n      stack: null,\n      status: 'NONE',\n    },\n    component: {\n      error: null,\n      stack: null,\n      status: 'NONE',\n    },\n  };\n\n  private callbacks: Map<StackType, Set<SymbolicationCallback>> = new Map();\n\n  constructor(\n    data: LogBoxLogData & {\n      symbolicated?: Record<StackType, SymbolicationResult>;\n    }\n  ) {\n    this.level = data.level;\n    this.type = data.type ?? 'error';\n    this.message = data.message;\n    this.stack = data.stack;\n    this.category = data.category;\n    this.componentStack = data.componentStack;\n    this.codeFrame = data.codeFrame;\n    this.isComponentError = data.isComponentError;\n    this.count = 1;\n    this.symbolicated = data.symbolicated ?? this.symbolicated;\n  }\n\n  incrementCount(): void {\n    this.count += 1;\n  }\n\n  getAvailableStack(type: StackType): Stack | null {\n    if (this.symbolicated[type].status === 'COMPLETE') {\n      return this.symbolicated[type].stack;\n    }\n    return this.getStack(type);\n  }\n\n  private flushCallbacks(type: StackType): void {\n    const callbacks = this.callbacks.get(type);\n    const status = this.symbolicated[type].status;\n    if (callbacks) {\n      for (const callback of callbacks) {\n        callback(status);\n      }\n      callbacks.clear();\n    }\n  }\n\n  private pushCallback(type: StackType, callback: SymbolicationCallback): void {\n    let callbacks = this.callbacks.get(type);\n    if (!callbacks) {\n      callbacks = new Set();\n      this.callbacks.set(type, callbacks);\n    }\n    callbacks.add(callback);\n  }\n\n  retrySymbolicate(type: StackType, callback?: (status: SymbolicationStatus) => void): void {\n    this._symbolicate(type, true, callback);\n  }\n\n  symbolicate(type: StackType, callback?: (status: SymbolicationStatus) => void): void {\n    this._symbolicate(type, false, callback);\n  }\n\n  private _symbolicate(\n    type: StackType,\n    retry: boolean,\n    callback?: (status: SymbolicationStatus) => void\n  ): void {\n    if (callback) {\n      this.pushCallback(type, callback);\n    }\n    const status = this.symbolicated[type].status;\n\n    if (status === 'COMPLETE') {\n      return this.flushCallbacks(type);\n    }\n\n    if (retry) {\n      LogBoxSymbolication.deleteStack(this.getStack(type));\n      this.handleSymbolicate(type);\n    } else {\n      if (status === 'NONE') {\n        this.handleSymbolicate(type);\n      }\n    }\n  }\n\n  private componentStackCache: Stack | null = null;\n\n  private getStack(type: StackType): Stack {\n    if (type === 'component') {\n      if (this.componentStackCache == null) {\n        this.componentStackCache = componentStackToStack(this.componentStack);\n      }\n      return this.componentStackCache;\n    }\n    return this.stack;\n  }\n\n  private handleSymbolicate(type: StackType): void {\n    if (type === 'component' && !this.componentStack?.length) {\n      return;\n    }\n\n    if (this.symbolicated[type].status !== 'PENDING') {\n      this.updateStatus(type, null, null, null);\n      LogBoxSymbolication.symbolicate(this.getStack(type)).then(\n        (data) => {\n          this.updateStatus(type, null, data?.stack, data?.codeFrame);\n        },\n        (error) => {\n          this.updateStatus(type, error, null, null);\n        }\n      );\n    }\n  }\n\n  private updateStatus(\n    type: StackType,\n    error?: Error | null,\n    stack?: Stack | null,\n    codeFrame?: CodeFrame | null\n  ): void {\n    const lastStatus = this.symbolicated[type].status;\n    if (error != null) {\n      this.symbolicated[type] = {\n        error,\n        stack: null,\n        status: 'FAILED',\n      };\n    } else if (stack != null) {\n      if (codeFrame) {\n        this.codeFrame = codeFrame;\n      }\n\n      this.symbolicated[type] = {\n        error: null,\n        stack,\n        status: 'COMPLETE',\n      };\n    } else {\n      this.symbolicated[type] = {\n        error: null,\n        stack: null,\n        status: 'PENDING',\n      };\n    }\n\n    const status = this.symbolicated[type].status;\n    if (lastStatus !== status) {\n      if (['COMPLETE', 'FAILED'].includes(status)) {\n        this.flushCallbacks(type);\n      }\n    }\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.d.ts
index 90b6565..e4c888d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.d.ts
@@ -1,11 +1,11 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-import { StackFrame as UpstreamStackFrame } from "stacktrace-parser";
+import { StackFrame as UpstreamStackFrame } from 'stacktrace-parser';
 type SymbolicatedStackTrace = any;
 type StackFrame = UpstreamStackFrame & {
     collapse?: boolean;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.js b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.js
index 9740eb0..86eeacd 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -18,14 +18,14 @@ const cache = new Map();
  */
 const sanitize = ({ stack: maybeStack, codeFrame, }) => {
     if (!Array.isArray(maybeStack)) {
-        throw new Error("Expected stack to be an array.");
+        throw new Error('Expected stack to be an array.');
     }
     const stack = [];
     for (const maybeFrame of maybeStack) {
         let collapse = false;
-        if ("collapse" in maybeFrame) {
-            if (typeof maybeFrame.collapse !== "boolean") {
-                throw new Error("Expected stack frame `collapse` to be a boolean.");
+        if ('collapse' in maybeFrame) {
+            if (typeof maybeFrame.collapse !== 'boolean') {
+                throw new Error('Expected stack frame `collapse` to be a boolean.');
             }
             collapse = maybeFrame.collapse;
         }
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.js.map
index e0e0a4c..670a052 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogBoxSymbolication.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxSymbolication.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxSymbolication.tsx"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;AAIH,6FAAqE;AAQrE,MAAM,KAAK,GAAgD,IAAI,GAAG,EAAE,CAAC;AAErE;;GAEG;AACH,MAAM,QAAQ,GAAG,CAAC,EAChB,KAAK,EAAE,UAAU,EACjB,SAAS,GACc,EAA0B,EAAE;IACnD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QAC9B,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACnD;IACD,MAAM,KAAK,GAAiB,EAAE,CAAC;IAC/B,KAAK,MAAM,UAAU,IAAI,UAAU,EAAE;QACnC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,UAAU,IAAI,UAAU,EAAE;YAC5B,IAAI,OAAO,UAAU,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC5C,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;aACrE;YACD,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;SAChC;QACD,KAAK,CAAC,IAAI,CAAC;YACT,SAAS,EAAE,EAAE;YACb,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,IAAI,EAAE,UAAU,CAAC,IAAI;YACrB,UAAU,EAAE,UAAU,CAAC,UAAU;YACjC,UAAU,EAAE,UAAU,CAAC,UAAU;YACjC,QAAQ;SACT,CAAC,CAAC;KACJ;IACD,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;AAC9B,CAAC,CAAC;AAEF,SAAgB,WAAW,CAAC,KAAY;IACtC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACtB,CAAC;AAFD,kCAEC;AAED,SAAgB,WAAW,CAAC,KAAY;IACtC,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC/B,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,OAAO,GAAG,IAAA,+BAAqB,EAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC3B;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AARD,kCAQC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { StackFrame as UpstreamStackFrame } from \"stacktrace-parser\";\n\nimport symbolicateStackTrace from \"../modules/symbolicateStackTrace\";\n\ntype SymbolicatedStackTrace = any;\n\ntype StackFrame = UpstreamStackFrame & { collapse?: boolean };\n\nexport type Stack = StackFrame[];\n\nconst cache: Map<Stack, Promise<SymbolicatedStackTrace>> = new Map();\n\n/**\n * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\n */\nconst sanitize = ({\n  stack: maybeStack,\n  codeFrame,\n}: SymbolicatedStackTrace): SymbolicatedStackTrace => {\n  if (!Array.isArray(maybeStack)) {\n    throw new Error(\"Expected stack to be an array.\");\n  }\n  const stack: StackFrame[] = [];\n  for (const maybeFrame of maybeStack) {\n    let collapse = false;\n    if (\"collapse\" in maybeFrame) {\n      if (typeof maybeFrame.collapse !== \"boolean\") {\n        throw new Error(\"Expected stack frame `collapse` to be a boolean.\");\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      arguments: [],\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse,\n    });\n  }\n  return { stack, codeFrame };\n};\n\nexport function deleteStack(stack: Stack): void {\n  cache.delete(stack);\n}\n\nexport function symbolicate(stack: Stack): Promise<SymbolicatedStackTrace> {\n  let promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack).then(sanitize);\n    cache.set(stack, promise);\n  }\n\n  return promise;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxSymbolication.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogBoxSymbolication.tsx"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;AAIH,6FAAqE;AAQrE,MAAM,KAAK,GAAgD,IAAI,GAAG,EAAE,CAAC;AAErE;;GAEG;AACH,MAAM,QAAQ,GAAG,CAAC,EAChB,KAAK,EAAE,UAAU,EACjB,SAAS,GACc,EAA0B,EAAE;IACnD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QAC9B,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACnD;IACD,MAAM,KAAK,GAAiB,EAAE,CAAC;IAC/B,KAAK,MAAM,UAAU,IAAI,UAAU,EAAE;QACnC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,UAAU,IAAI,UAAU,EAAE;YAC5B,IAAI,OAAO,UAAU,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC5C,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;aACrE;YACD,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;SAChC;QACD,KAAK,CAAC,IAAI,CAAC;YACT,SAAS,EAAE,EAAE;YACb,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,IAAI,EAAE,UAAU,CAAC,IAAI;YACrB,UAAU,EAAE,UAAU,CAAC,UAAU;YACjC,UAAU,EAAE,UAAU,CAAC,UAAU;YACjC,QAAQ;SACT,CAAC,CAAC;KACJ;IACD,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;AAC9B,CAAC,CAAC;AAEF,SAAgB,WAAW,CAAC,KAAY;IACtC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACtB,CAAC;AAFD,kCAEC;AAED,SAAgB,WAAW,CAAC,KAAY;IACtC,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC/B,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,OAAO,GAAG,IAAA,+BAAqB,EAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC3B;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AARD,kCAQC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { StackFrame as UpstreamStackFrame } from 'stacktrace-parser';\n\nimport symbolicateStackTrace from '../modules/symbolicateStackTrace';\n\ntype SymbolicatedStackTrace = any;\n\ntype StackFrame = UpstreamStackFrame & { collapse?: boolean };\n\nexport type Stack = StackFrame[];\n\nconst cache: Map<Stack, Promise<SymbolicatedStackTrace>> = new Map();\n\n/**\n * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\n */\nconst sanitize = ({\n  stack: maybeStack,\n  codeFrame,\n}: SymbolicatedStackTrace): SymbolicatedStackTrace => {\n  if (!Array.isArray(maybeStack)) {\n    throw new Error('Expected stack to be an array.');\n  }\n  const stack: StackFrame[] = [];\n  for (const maybeFrame of maybeStack) {\n    let collapse = false;\n    if ('collapse' in maybeFrame) {\n      if (typeof maybeFrame.collapse !== 'boolean') {\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      arguments: [],\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse,\n    });\n  }\n  return { stack, codeFrame };\n};\n\nexport function deleteStack(stack: Stack): void {\n  cache.delete(stack);\n}\n\nexport function symbolicate(stack: Stack): Promise<SymbolicatedStackTrace> {\n  let promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack).then(sanitize);\n    cache.set(stack, promise);\n  }\n\n  return promise;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.d.ts
index 53ed61f..a065403 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.d.ts
@@ -1,5 +1,5 @@
-import React from "react";
-import { LogBoxLog } from "./LogBoxLog";
+import React from 'react';
+import { LogBoxLog } from './LogBoxLog';
 export declare const LogContext: React.Context<{
     selectedLogIndex: number;
     isDisabled: boolean;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.d.ts.map
index adf3fa9..1e03b1d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogContext.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogContext.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAIxC,eAAO,MAAM,UAAU;sBACH,MAAM;gBACZ,OAAO;UACb,SAAS,EAAE;SACJ,CAAC;AAEhB,wBAAgB,OAAO,IAAI;IACzB,gBAAgB,EAAE,MAAM,CAAC;IACzB,UAAU,EAAE,OAAO,CAAC;IACpB,IAAI,EAAE,SAAS,EAAE,CAAC;CACnB,CAmBA;AAED,wBAAgB,cAAc,cAG7B"}
\ No newline at end of file
+{"version":3,"file":"LogContext.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogContext.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAIxC,eAAO,MAAM,UAAU;sBACH,MAAM;gBACZ,OAAO;UACb,SAAS,EAAE;SACJ,CAAC;AAEhB,wBAAgB,OAAO,IAAI;IACzB,gBAAgB,EAAE,MAAM,CAAC;IACzB,UAAU,EAAE,OAAO,CAAC;IACpB,IAAI,EAAE,SAAS,EAAE,CAAC;CACnB,CAkBA;AAED,wBAAgB,cAAc,cAG7B"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.js b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.js
index 34cadfc..6ba5a38 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.js
@@ -12,10 +12,10 @@ exports.LogContext = react_1.default.createContext(null);
 function useLogs() {
     const logs = react_1.default.useContext(exports.LogContext);
     if (!logs) {
-        if (react_native_1.Platform.OS === "web" && typeof window !== "undefined") {
+        if (react_native_1.Platform.OS === 'web' && typeof window !== 'undefined') {
             // Logbox data that is pre-fetched on the dev server and rendered here.
-            const expoCliStaticErrorElement = document.getElementById("_expo-static-error");
-            if (expoCliStaticErrorElement === null || expoCliStaticErrorElement === void 0 ? void 0 : expoCliStaticErrorElement.textContent) {
+            const expoCliStaticErrorElement = document.getElementById('_expo-static-error');
+            if (expoCliStaticErrorElement?.textContent) {
                 const raw = JSON.parse(expoCliStaticErrorElement.textContent);
                 return {
                     ...raw,
@@ -23,7 +23,7 @@ function useLogs() {
                 };
             }
         }
-        throw new Error("useLogs must be used within a LogProvider");
+        throw new Error('useLogs must be used within a LogProvider');
     }
     return logs;
 }
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.js.map
index c7ec3ab..5ef01c3 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/LogContext.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogContext.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogContext.tsx"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAC1B,+CAAwC;AAExC,2CAAwC;AAExC,wCAAwC;AAE3B,QAAA,UAAU,GAAG,eAAK,CAAC,aAAa,CAInC,IAAI,CAAC,CAAC;AAEhB,SAAgB,OAAO;IAKrB,MAAM,IAAI,GAAG,eAAK,CAAC,UAAU,CAAC,kBAAU,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,EAAE;QACT,IAAI,uBAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YAC1D,uEAAuE;YACvE,MAAM,yBAAyB,GAC7B,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;YAChD,IAAI,yBAAyB,aAAzB,yBAAyB,uBAAzB,yBAAyB,CAAE,WAAW,EAAE;gBAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;gBAC9D,OAAO;oBACL,GAAG,GAAG;oBACN,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,IAAI,qBAAS,CAAC,GAAG,CAAC,CAAC;iBACrD,CAAC;aACH;SACF;QAED,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;KAC9D;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAvBD,0BAuBC;AAED,SAAgB,cAAc;IAC5B,MAAM,EAAE,gBAAgB,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC;IAC7C,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAChC,CAAC;AAHD,wCAGC","sourcesContent":["import React from \"react\";\nimport { Platform } from \"react-native\";\n\nimport { LogBoxLog } from \"./LogBoxLog\";\n\n// Context provider for Array<LogBoxLog>\n\nexport const LogContext = React.createContext<{\n  selectedLogIndex: number;\n  isDisabled: boolean;\n  logs: LogBoxLog[];\n} | null>(null);\n\nexport function useLogs(): {\n  selectedLogIndex: number;\n  isDisabled: boolean;\n  logs: LogBoxLog[];\n} {\n  const logs = React.useContext(LogContext);\n  if (!logs) {\n    if (Platform.OS === \"web\" && typeof window !== \"undefined\") {\n      // Logbox data that is pre-fetched on the dev server and rendered here.\n      const expoCliStaticErrorElement =\n        document.getElementById(\"_expo-static-error\");\n      if (expoCliStaticErrorElement?.textContent) {\n        const raw = JSON.parse(expoCliStaticErrorElement.textContent);\n        return {\n          ...raw,\n          logs: raw.logs.map((raw: any) => new LogBoxLog(raw)),\n        };\n      }\n    }\n\n    throw new Error(\"useLogs must be used within a LogProvider\");\n  }\n  return logs;\n}\n\nexport function useSelectedLog() {\n  const { selectedLogIndex, logs } = useLogs();\n  return logs[selectedLogIndex];\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"LogContext.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/LogContext.tsx"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAC1B,+CAAwC;AAExC,2CAAwC;AAExC,wCAAwC;AAE3B,QAAA,UAAU,GAAG,eAAK,CAAC,aAAa,CAInC,IAAI,CAAC,CAAC;AAEhB,SAAgB,OAAO;IAKrB,MAAM,IAAI,GAAG,eAAK,CAAC,UAAU,CAAC,kBAAU,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,EAAE;QACT,IAAI,uBAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YAC1D,uEAAuE;YACvE,MAAM,yBAAyB,GAAG,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;YAChF,IAAI,yBAAyB,EAAE,WAAW,EAAE;gBAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;gBAC9D,OAAO;oBACL,GAAG,GAAG;oBACN,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,IAAI,qBAAS,CAAC,GAAG,CAAC,CAAC;iBACrD,CAAC;aACH;SACF;QAED,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;KAC9D;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAtBD,0BAsBC;AAED,SAAgB,cAAc;IAC5B,MAAM,EAAE,gBAAgB,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC;IAC7C,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAChC,CAAC;AAHD,wCAGC","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\n\nimport { LogBoxLog } from './LogBoxLog';\n\n// Context provider for Array<LogBoxLog>\n\nexport const LogContext = React.createContext<{\n  selectedLogIndex: number;\n  isDisabled: boolean;\n  logs: LogBoxLog[];\n} | null>(null);\n\nexport function useLogs(): {\n  selectedLogIndex: number;\n  isDisabled: boolean;\n  logs: LogBoxLog[];\n} {\n  const logs = React.useContext(LogContext);\n  if (!logs) {\n    if (Platform.OS === 'web' && typeof window !== 'undefined') {\n      // Logbox data that is pre-fetched on the dev server and rendered here.\n      const expoCliStaticErrorElement = document.getElementById('_expo-static-error');\n      if (expoCliStaticErrorElement?.textContent) {\n        const raw = JSON.parse(expoCliStaticErrorElement.textContent);\n        return {\n          ...raw,\n          logs: raw.logs.map((raw: any) => new LogBoxLog(raw)),\n        };\n      }\n    }\n\n    throw new Error('useLogs must be used within a LogProvider');\n  }\n  return logs;\n}\n\nexport function useSelectedLog() {\n  const { selectedLogIndex, logs } = useLogs();\n  return logs[selectedLogIndex];\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.d.ts
index 51dc86d..11d2203 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.d.ts
@@ -1,11 +1,11 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-import type { LogBoxLogData } from "./LogBoxLog";
+import type { LogBoxLogData } from './LogBoxLog';
 type ExceptionData = any;
 export type ExtendedExceptionData = ExceptionData & {
     isComponentError: boolean;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.d.ts.map
index b8b828b..553f85e 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"parseLogBoxLog.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/Data/parseLogBoxLog.tsx"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAOH,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AACjD,KAAK,aAAa,GAAG,GAAG,CAAC;AASzB,MAAM,MAAM,qBAAqB,GAAG,aAAa,GAAG;IAClD,gBAAgB,EAAE,OAAO,CAAC;IAC1B,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;CACpB,CAAC;AACF,MAAM,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC9B,MAAM,MAAM,SAAS,GAAG;IACtB,OAAO,EAAE,MAAM,CAAC;IAChB,QAAQ,CAAC,EAAE;QACT,GAAG,EAAE,MAAM,CAAC;QACZ,MAAM,EAAE,MAAM,CAAC;QACf,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;KACpB,GAAG,IAAI,CAAC;IACT,QAAQ,EAAE,MAAM,CAAC;IAKjB,QAAQ,CAAC,EAAE,OAAO,CAAC;CACpB,CAAC;AAEF,MAAM,MAAM,OAAO,GAAG;IACpB,OAAO,EAAE,MAAM,CAAC;IAChB,aAAa,EAAE;QACb,MAAM,EAAE,MAAM,CAAC;QACf,MAAM,EAAE,MAAM,CAAC;KAChB,EAAE,CAAC;CACL,CAAC;AAEF,MAAM,MAAM,cAAc,GAAG,SAAS,EAAE,CAAC;AAIzC,wBAAgB,kBAAkB,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,GAAG;IACxD,QAAQ,EAAE,QAAQ,CAAC;IACnB,OAAO,EAAE,OAAO,CAAC;CAClB,CAsEA;AAcD,wBAAgB,mBAAmB,CAAC,OAAO,EAAE,MAAM,GAAG,cAAc,CAoCnE;AAED,wBAAgB,oBAAoB,CAClC,KAAK,EAAE,qBAAqB,GAC3B,aAAa,CA8Hf;AAED,wBAAgB,cAAc,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,GAAG;IACpD,cAAc,EAAE,cAAc,CAAC;IAC/B,QAAQ,EAAE,QAAQ,CAAC;IACnB,OAAO,EAAE,OAAO,CAAC;CAClB,CA4CA"}
\ No newline at end of file
+{"version":3,"file":"parseLogBoxLog.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/Data/parseLogBoxLog.tsx"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAGjD,KAAK,aAAa,GAAG,GAAG,CAAC;AASzB,MAAM,MAAM,qBAAqB,GAAG,aAAa,GAAG;IAClD,gBAAgB,EAAE,OAAO,CAAC;IAC1B,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;CACpB,CAAC;AACF,MAAM,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC9B,MAAM,MAAM,SAAS,GAAG;IACtB,OAAO,EAAE,MAAM,CAAC;IAChB,QAAQ,CAAC,EAAE;QACT,GAAG,EAAE,MAAM,CAAC;QACZ,MAAM,EAAE,MAAM,CAAC;QACf,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;KACpB,GAAG,IAAI,CAAC;IACT,QAAQ,EAAE,MAAM,CAAC;IAKjB,QAAQ,CAAC,EAAE,OAAO,CAAC;CACpB,CAAC;AAEF,MAAM,MAAM,OAAO,GAAG;IACpB,OAAO,EAAE,MAAM,CAAC;IAChB,aAAa,EAAE;QACb,MAAM,EAAE,MAAM,CAAC;QACf,MAAM,EAAE,MAAM,CAAC;KAChB,EAAE,CAAC;CACL,CAAC;AAEF,MAAM,MAAM,cAAc,GAAG,SAAS,EAAE,CAAC;AAIzC,wBAAgB,kBAAkB,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,GAAG;IACxD,QAAQ,EAAE,QAAQ,CAAC;IACnB,OAAO,EAAE,OAAO,CAAC;CAClB,CAsEA;AAUD,wBAAgB,mBAAmB,CAAC,OAAO,EAAE,MAAM,GAAG,cAAc,CAoCnE;AAED,wBAAgB,oBAAoB,CAAC,KAAK,EAAE,qBAAqB,GAAG,aAAa,CA0HhF;AAED,wBAAgB,cAAc,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,GAAG;IACpD,cAAc,EAAE,cAAc,CAAC;IAC/B,QAAQ,EAAE,QAAQ,CAAC;IACnB,OAAO,EAAE,OAAO,CAAC;CAClB,CAwCA"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.js b/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.js
index 7f51ddc..08bef5b 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -11,26 +11,25 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.parseLogBoxLog = exports.parseLogBoxException = exports.parseComponentStack = exports.parseInterpolation = void 0;
-// @ts-expect-error
 const UTFSequence_1 = __importDefault(require("react-native/Libraries/UTFSequence"));
 const parseErrorStack_1 = __importDefault(require("../modules/parseErrorStack"));
 const stringifySafe_1 = __importDefault(require("../modules/stringifySafe"));
 const BABEL_TRANSFORM_ERROR_FORMAT = /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \((\d+):(\d+)\)\n\n([\s\S]+)/;
 const BABEL_CODE_FRAME_ERROR_FORMAT = /^(?:TransformError )?(?:.*):? (?:.*?)(\/.*): ([\s\S]+?)\n([ >]{2}[\d\s]+ \|[\s\S]+|\u{001b}[\s\S]+)/u;
 const METRO_ERROR_FORMAT = /^(?:InternalError Metro has encountered an error:) (.*): (.*) \((\d+):(\d+)\)\n\n([\s\S]+)/u;
-const SUBSTITUTION = UTFSequence_1.default.BOM + "%s";
+const SUBSTITUTION = UTFSequence_1.default.BOM + '%s';
 function parseInterpolation(args) {
     const categoryParts = [];
     const contentParts = [];
     const substitutionOffsets = [];
     const remaining = [...args];
-    if (typeof remaining[0] === "string") {
+    if (typeof remaining[0] === 'string') {
         const formatString = String(remaining.shift());
-        const formatStringParts = formatString.split("%s");
+        const formatStringParts = formatString.split('%s');
         const substitutionCount = formatStringParts.length - 1;
         const substitutions = remaining.splice(0, substitutionCount);
-        let categoryString = "";
-        let contentString = "";
+        let categoryString = '';
+        let contentString = '';
         let substitutionIndex = 0;
         for (const formatStringPart of formatStringParts) {
             categoryString += formatStringPart;
@@ -40,7 +39,7 @@ function parseInterpolation(args) {
                     // Don't stringify a string type.
                     // It adds quotation mark wrappers around the string,
                     // which causes the LogBox to look odd.
-                    const substitution = typeof substitutions[substitutionIndex] === "string"
+                    const substitution = typeof substitutions[substitutionIndex] === 'string'
                         ? substitutions[substitutionIndex]
                         : (0, stringifySafe_1.default)(substitutions[substitutionIndex]);
                     substitutionOffsets.push({
@@ -55,8 +54,8 @@ function parseInterpolation(args) {
                         length: 2,
                         offset: contentString.length,
                     });
-                    categoryString += "%s";
-                    contentString += "%s";
+                    categoryString += '%s';
+                    contentString += '%s';
                 }
                 substitutionIndex++;
             }
@@ -68,14 +67,14 @@ function parseInterpolation(args) {
         // Don't stringify a string type.
         // It adds quotation mark wrappers around the string,
         // which causes the LogBox to look odd.
-        return typeof arg === "string" ? arg : (0, stringifySafe_1.default)(arg);
+        return typeof arg === 'string' ? arg : (0, stringifySafe_1.default)(arg);
     });
     categoryParts.push(...remainingArgs);
     contentParts.push(...remainingArgs);
     return {
-        category: categoryParts.join(" "),
+        category: categoryParts.join(' '),
         message: {
-            content: contentParts.join(" "),
+            content: contentParts.join(' '),
             substitutions: substitutionOffsets,
         },
     };
@@ -85,9 +84,7 @@ function isComponentStack(consoleArgument) {
     const isOldComponentStackFormat = / {4}in/.test(consoleArgument);
     const isNewComponentStackFormat = / {4}at/.test(consoleArgument);
     const isNewJSCComponentStackFormat = /@.*\n/.test(consoleArgument);
-    return (isOldComponentStackFormat ||
-        isNewComponentStackFormat ||
-        isNewJSCComponentStackFormat);
+    return isOldComponentStackFormat || isNewComponentStackFormat || isNewJSCComponentStackFormat;
 }
 function parseComponentStack(message) {
     // In newer versions of React, the component stack is formatted as a call stack frame.
@@ -98,7 +95,7 @@ function parseComponentStack(message) {
         return stack.map((frame) => ({
             content: frame.methodName,
             collapse: frame.collapse || false,
-            fileName: frame.file == null ? "unknown" : frame.file,
+            fileName: frame.file == null ? 'unknown' : frame.file,
             location: {
                 column: frame.column == null ? -1 : frame.column,
                 row: frame.lineNumber == null ? -1 : frame.lineNumber,
@@ -126,13 +123,13 @@ function parseComponentStack(message) {
 }
 exports.parseComponentStack = parseComponentStack;
 function parseLogBoxException(error) {
-    const message = error.originalMessage != null ? error.originalMessage : "Unknown";
+    const message = error.originalMessage != null ? error.originalMessage : 'Unknown';
     const metroInternalError = message.match(METRO_ERROR_FORMAT);
     if (metroInternalError) {
         const [content, fileName, row, column, codeFrame] = metroInternalError.slice(1);
         return {
-            level: "fatal",
-            type: "Metro Error",
+            level: 'fatal',
+            type: 'Metro Error',
             stack: [],
             isComponentError: false,
             componentStack: [],
@@ -156,7 +153,7 @@ function parseLogBoxException(error) {
         // Transform errors are thrown from inside the Babel transformer.
         const [fileName, content, row, column, codeFrame] = babelTransformError.slice(1);
         return {
-            level: "syntax",
+            level: 'syntax',
             stack: [],
             isComponentError: false,
             componentStack: [],
@@ -180,7 +177,7 @@ function parseLogBoxException(error) {
         // Codeframe errors are thrown from any use of buildCodeFrameError.
         const [fileName, content, codeFrame] = babelCodeFrameError.slice(1);
         return {
-            level: "syntax",
+            level: 'syntax',
             stack: [],
             isComponentError: false,
             componentStack: [],
@@ -198,7 +195,7 @@ function parseLogBoxException(error) {
     }
     if (message.match(/^TransformError /)) {
         return {
-            level: "syntax",
+            level: 'syntax',
             stack: error.stack,
             isComponentError: error.isComponentError,
             componentStack: [],
@@ -212,7 +209,7 @@ function parseLogBoxException(error) {
     const componentStack = error.componentStack;
     if (error.isFatal || error.isComponentError) {
         return {
-            level: "fatal",
+            level: 'fatal',
             stack: error.stack,
             isComponentError: error.isComponentError,
             componentStack: componentStack != null ? parseComponentStack(componentStack) : [],
@@ -222,7 +219,7 @@ function parseLogBoxException(error) {
     if (componentStack != null) {
         // It is possible that console errors have a componentStack.
         return {
-            level: "error",
+            level: 'error',
             stack: error.stack,
             isComponentError: error.isComponentError,
             componentStack: parseComponentStack(componentStack),
@@ -232,7 +229,7 @@ function parseLogBoxException(error) {
     // Most `console.error` calls won't have a componentStack. We parse them like
     // regular logs which have the component stack burried in the message.
     return {
-        level: "error",
+        level: 'error',
         stack: error.stack,
         isComponentError: error.isComponentError,
         ...parseLogBoxLog([message]),
@@ -244,11 +241,9 @@ function parseLogBoxLog(args) {
     let argsWithoutComponentStack = [];
     let componentStack = [];
     // Extract component stack from warnings like "Some warning%s".
-    if (typeof message === "string" &&
-        message.slice(-2) === "%s" &&
-        args.length > 0) {
+    if (typeof message === 'string' && message.slice(-2) === '%s' && args.length > 0) {
         const lastArg = args[args.length - 1];
-        if (typeof lastArg === "string" && isComponentStack(lastArg)) {
+        if (typeof lastArg === 'string' && isComponentStack(lastArg)) {
             argsWithoutComponentStack = args.slice(0, -1);
             argsWithoutComponentStack[0] = message.slice(0, -2);
             componentStack = parseComponentStack(lastArg);
@@ -257,7 +252,7 @@ function parseLogBoxLog(args) {
     if (componentStack.length === 0) {
         // Try finding the component stack elsewhere.
         for (const arg of args) {
-            if (typeof arg === "string" && isComponentStack(arg)) {
+            if (typeof arg === 'string' && isComponentStack(arg)) {
                 // Strip out any messages before the component stack.
                 let messageEndIndex = arg.search(/\n {4}(in|at) /);
                 if (messageEndIndex < 0) {
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.js.map
index d63bbd3..f6fbf1a 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/Data/parseLogBoxLog.js.map
@@ -1 +1 @@
-{"version":3,"file":"parseLogBoxLog.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/parseLogBoxLog.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// @ts-expect-error\nimport UTFSequence from \"react-native/Libraries/UTFSequence\";\n\nimport parseErrorStack from \"../modules/parseErrorStack\";\nimport stringifySafe from \"../modules/stringifySafe\";\nimport type { LogBoxLogData } from \"./LogBoxLog\";\ntype ExceptionData = any;\n\nconst BABEL_TRANSFORM_ERROR_FORMAT =\n  /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/;\nconst BABEL_CODE_FRAME_ERROR_FORMAT =\n  /^(?:TransformError )?(?:.*):? (?:.*?)(\\/.*): ([\\s\\S]+?)\\n([ >]{2}[\\d\\s]+ \\|[\\s\\S]+|\\u{001b}[\\s\\S]+)/u;\nconst METRO_ERROR_FORMAT =\n  /^(?:InternalError Metro has encountered an error:) (.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/u;\n\nexport type ExtendedExceptionData = ExceptionData & {\n  isComponentError: boolean;\n  [key: string]: any;\n};\nexport type Category = string;\nexport type CodeFrame = {\n  content: string;\n  location?: {\n    row: number;\n    column: number;\n    [key: string]: any;\n  } | null;\n  fileName: string;\n\n  // TODO: When React switched to using call stack frames,\n  // we gained the ability to use the collapse flag, but\n  // it is not integrated into the LogBox UI.\n  collapse?: boolean;\n};\n\nexport type Message = {\n  content: string;\n  substitutions: {\n    length: number;\n    offset: number;\n  }[];\n};\n\nexport type ComponentStack = CodeFrame[];\n\nconst SUBSTITUTION = UTFSequence.BOM + \"%s\";\n\nexport function parseInterpolation(args: readonly any[]): {\n  category: Category;\n  message: Message;\n} {\n  const categoryParts: string[] = [];\n  const contentParts: string[] = [];\n  const substitutionOffsets: { length: number; offset: number }[] = [];\n\n  const remaining = [...args];\n  if (typeof remaining[0] === \"string\") {\n    const formatString = String(remaining.shift());\n    const formatStringParts = formatString.split(\"%s\");\n    const substitutionCount = formatStringParts.length - 1;\n    const substitutions = remaining.splice(0, substitutionCount);\n\n    let categoryString = \"\";\n    let contentString = \"\";\n\n    let substitutionIndex = 0;\n    for (const formatStringPart of formatStringParts) {\n      categoryString += formatStringPart;\n      contentString += formatStringPart;\n\n      if (substitutionIndex < substitutionCount) {\n        if (substitutionIndex < substitutions.length) {\n          // Don't stringify a string type.\n          // It adds quotation mark wrappers around the string,\n          // which causes the LogBox to look odd.\n          const substitution =\n            typeof substitutions[substitutionIndex] === \"string\"\n              ? substitutions[substitutionIndex]\n              : stringifySafe(substitutions[substitutionIndex]);\n          substitutionOffsets.push({\n            length: substitution.length,\n            offset: contentString.length,\n          });\n\n          categoryString += SUBSTITUTION;\n          contentString += substitution;\n        } else {\n          substitutionOffsets.push({\n            length: 2,\n            offset: contentString.length,\n          });\n\n          categoryString += \"%s\";\n          contentString += \"%s\";\n        }\n\n        substitutionIndex++;\n      }\n    }\n\n    categoryParts.push(categoryString);\n    contentParts.push(contentString);\n  }\n\n  const remainingArgs = remaining.map((arg) => {\n    // Don't stringify a string type.\n    // It adds quotation mark wrappers around the string,\n    // which causes the LogBox to look odd.\n    return typeof arg === \"string\" ? arg : stringifySafe(arg);\n  });\n  categoryParts.push(...remainingArgs);\n  contentParts.push(...remainingArgs);\n\n  return {\n    category: categoryParts.join(\" \"),\n    message: {\n      content: contentParts.join(\" \"),\n      substitutions: substitutionOffsets,\n    },\n  };\n}\n\nfunction isComponentStack(consoleArgument: string) {\n  const isOldComponentStackFormat = / {4}in/.test(consoleArgument);\n  const isNewComponentStackFormat = / {4}at/.test(consoleArgument);\n  const isNewJSCComponentStackFormat = /@.*\\n/.test(consoleArgument);\n\n  return (\n    isOldComponentStackFormat ||\n    isNewComponentStackFormat ||\n    isNewJSCComponentStackFormat\n  );\n}\n\nexport function parseComponentStack(message: string): ComponentStack {\n  // In newer versions of React, the component stack is formatted as a call stack frame.\n  // First try to parse the component stack as a call stack frame, and if that doesn't\n  // work then we'll fallback to the old custom component stack format parsing.\n  const stack = parseErrorStack(message);\n  if (stack && stack.length > 0) {\n    return stack.map((frame) => ({\n      content: frame.methodName,\n      collapse: frame.collapse || false,\n      fileName: frame.file == null ? \"unknown\" : frame.file,\n      location: {\n        column: frame.column == null ? -1 : frame.column,\n        row: frame.lineNumber == null ? -1 : frame.lineNumber,\n      },\n    }));\n  }\n\n  return message\n    .split(/\\n {4}in /g)\n    .map((s) => {\n      if (!s) {\n        return null;\n      }\n      const match = s.match(/(.*) \\(at (.*\\.js):([\\d]+)\\)/);\n      if (!match) {\n        return null;\n      }\n\n      const [content, fileName, row] = match.slice(1);\n      return {\n        content,\n        fileName,\n        location: { column: -1, row: parseInt(row, 10) },\n      };\n    })\n    .filter(Boolean) as ComponentStack;\n}\n\nexport function parseLogBoxException(\n  error: ExtendedExceptionData\n): LogBoxLogData {\n  const message =\n    error.originalMessage != null ? error.originalMessage : \"Unknown\";\n\n  const metroInternalError = message.match(METRO_ERROR_FORMAT);\n  if (metroInternalError) {\n    const [content, fileName, row, column, codeFrame] =\n      metroInternalError.slice(1);\n\n    return {\n      level: \"fatal\",\n      type: \"Metro Error\",\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10),\n        },\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${row}-${column}`,\n    };\n  }\n\n  const babelTransformError = message.match(BABEL_TRANSFORM_ERROR_FORMAT);\n  if (babelTransformError) {\n    // Transform errors are thrown from inside the Babel transformer.\n    const [fileName, content, row, column, codeFrame] =\n      babelTransformError.slice(1);\n\n    return {\n      level: \"syntax\",\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10),\n        },\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${row}-${column}`,\n    };\n  }\n\n  const babelCodeFrameError = message.match(BABEL_CODE_FRAME_ERROR_FORMAT);\n\n  if (babelCodeFrameError) {\n    // Codeframe errors are thrown from any use of buildCodeFrameError.\n    const [fileName, content, codeFrame] = babelCodeFrameError.slice(1);\n    return {\n      level: \"syntax\",\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: null, // We are not given the location.\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${1}-${1}`,\n    };\n  }\n\n  if (message.match(/^TransformError /)) {\n    return {\n      level: \"syntax\",\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: [],\n      message: {\n        content: message,\n        substitutions: [],\n      },\n      category: message,\n    };\n  }\n\n  const componentStack = error.componentStack;\n  if (error.isFatal || error.isComponentError) {\n    return {\n      level: \"fatal\",\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack:\n        componentStack != null ? parseComponentStack(componentStack) : [],\n      ...parseInterpolation([message]),\n    };\n  }\n\n  if (componentStack != null) {\n    // It is possible that console errors have a componentStack.\n    return {\n      level: \"error\",\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: parseComponentStack(componentStack),\n      ...parseInterpolation([message]),\n    };\n  }\n\n  // Most `console.error` calls won't have a componentStack. We parse them like\n  // regular logs which have the component stack burried in the message.\n  return {\n    level: \"error\",\n    stack: error.stack,\n    isComponentError: error.isComponentError,\n    ...parseLogBoxLog([message]),\n  };\n}\n\nexport function parseLogBoxLog(args: readonly any[]): {\n  componentStack: ComponentStack;\n  category: Category;\n  message: Message;\n} {\n  const message = args[0];\n  let argsWithoutComponentStack: any[] = [];\n  let componentStack: ComponentStack = [];\n\n  // Extract component stack from warnings like \"Some warning%s\".\n  if (\n    typeof message === \"string\" &&\n    message.slice(-2) === \"%s\" &&\n    args.length > 0\n  ) {\n    const lastArg = args[args.length - 1];\n    if (typeof lastArg === \"string\" && isComponentStack(lastArg)) {\n      argsWithoutComponentStack = args.slice(0, -1);\n      argsWithoutComponentStack[0] = message.slice(0, -2);\n      componentStack = parseComponentStack(lastArg);\n    }\n  }\n\n  if (componentStack.length === 0) {\n    // Try finding the component stack elsewhere.\n    for (const arg of args) {\n      if (typeof arg === \"string\" && isComponentStack(arg)) {\n        // Strip out any messages before the component stack.\n        let messageEndIndex = arg.search(/\\n {4}(in|at) /);\n        if (messageEndIndex < 0) {\n          // Handle JSC component stacks.\n          messageEndIndex = arg.search(/\\n/);\n        }\n        if (messageEndIndex > 0) {\n          argsWithoutComponentStack.push(arg.slice(0, messageEndIndex));\n        }\n\n        componentStack = parseComponentStack(arg);\n      } else {\n        argsWithoutComponentStack.push(arg);\n      }\n    }\n  }\n\n  return {\n    ...parseInterpolation(argsWithoutComponentStack),\n    componentStack,\n  };\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"parseLogBoxLog.js","sourceRoot":"","sources":["../../../src/error-overlay/Data/parseLogBoxLog.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport UTFSequence from 'react-native/Libraries/UTFSequence';\n\nimport type { LogBoxLogData } from './LogBoxLog';\nimport parseErrorStack from '../modules/parseErrorStack';\nimport stringifySafe from '../modules/stringifySafe';\ntype ExceptionData = any;\n\nconst BABEL_TRANSFORM_ERROR_FORMAT =\n  /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/;\nconst BABEL_CODE_FRAME_ERROR_FORMAT =\n  /^(?:TransformError )?(?:.*):? (?:.*?)(\\/.*): ([\\s\\S]+?)\\n([ >]{2}[\\d\\s]+ \\|[\\s\\S]+|\\u{001b}[\\s\\S]+)/u;\nconst METRO_ERROR_FORMAT =\n  /^(?:InternalError Metro has encountered an error:) (.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/u;\n\nexport type ExtendedExceptionData = ExceptionData & {\n  isComponentError: boolean;\n  [key: string]: any;\n};\nexport type Category = string;\nexport type CodeFrame = {\n  content: string;\n  location?: {\n    row: number;\n    column: number;\n    [key: string]: any;\n  } | null;\n  fileName: string;\n\n  // TODO: When React switched to using call stack frames,\n  // we gained the ability to use the collapse flag, but\n  // it is not integrated into the LogBox UI.\n  collapse?: boolean;\n};\n\nexport type Message = {\n  content: string;\n  substitutions: {\n    length: number;\n    offset: number;\n  }[];\n};\n\nexport type ComponentStack = CodeFrame[];\n\nconst SUBSTITUTION = UTFSequence.BOM + '%s';\n\nexport function parseInterpolation(args: readonly any[]): {\n  category: Category;\n  message: Message;\n} {\n  const categoryParts: string[] = [];\n  const contentParts: string[] = [];\n  const substitutionOffsets: { length: number; offset: number }[] = [];\n\n  const remaining = [...args];\n  if (typeof remaining[0] === 'string') {\n    const formatString = String(remaining.shift());\n    const formatStringParts = formatString.split('%s');\n    const substitutionCount = formatStringParts.length - 1;\n    const substitutions = remaining.splice(0, substitutionCount);\n\n    let categoryString = '';\n    let contentString = '';\n\n    let substitutionIndex = 0;\n    for (const formatStringPart of formatStringParts) {\n      categoryString += formatStringPart;\n      contentString += formatStringPart;\n\n      if (substitutionIndex < substitutionCount) {\n        if (substitutionIndex < substitutions.length) {\n          // Don't stringify a string type.\n          // It adds quotation mark wrappers around the string,\n          // which causes the LogBox to look odd.\n          const substitution =\n            typeof substitutions[substitutionIndex] === 'string'\n              ? substitutions[substitutionIndex]\n              : stringifySafe(substitutions[substitutionIndex]);\n          substitutionOffsets.push({\n            length: substitution.length,\n            offset: contentString.length,\n          });\n\n          categoryString += SUBSTITUTION;\n          contentString += substitution;\n        } else {\n          substitutionOffsets.push({\n            length: 2,\n            offset: contentString.length,\n          });\n\n          categoryString += '%s';\n          contentString += '%s';\n        }\n\n        substitutionIndex++;\n      }\n    }\n\n    categoryParts.push(categoryString);\n    contentParts.push(contentString);\n  }\n\n  const remainingArgs = remaining.map((arg) => {\n    // Don't stringify a string type.\n    // It adds quotation mark wrappers around the string,\n    // which causes the LogBox to look odd.\n    return typeof arg === 'string' ? arg : stringifySafe(arg);\n  });\n  categoryParts.push(...remainingArgs);\n  contentParts.push(...remainingArgs);\n\n  return {\n    category: categoryParts.join(' '),\n    message: {\n      content: contentParts.join(' '),\n      substitutions: substitutionOffsets,\n    },\n  };\n}\n\nfunction isComponentStack(consoleArgument: string) {\n  const isOldComponentStackFormat = / {4}in/.test(consoleArgument);\n  const isNewComponentStackFormat = / {4}at/.test(consoleArgument);\n  const isNewJSCComponentStackFormat = /@.*\\n/.test(consoleArgument);\n\n  return isOldComponentStackFormat || isNewComponentStackFormat || isNewJSCComponentStackFormat;\n}\n\nexport function parseComponentStack(message: string): ComponentStack {\n  // In newer versions of React, the component stack is formatted as a call stack frame.\n  // First try to parse the component stack as a call stack frame, and if that doesn't\n  // work then we'll fallback to the old custom component stack format parsing.\n  const stack = parseErrorStack(message);\n  if (stack && stack.length > 0) {\n    return stack.map((frame) => ({\n      content: frame.methodName,\n      collapse: frame.collapse || false,\n      fileName: frame.file == null ? 'unknown' : frame.file,\n      location: {\n        column: frame.column == null ? -1 : frame.column,\n        row: frame.lineNumber == null ? -1 : frame.lineNumber,\n      },\n    }));\n  }\n\n  return message\n    .split(/\\n {4}in /g)\n    .map((s) => {\n      if (!s) {\n        return null;\n      }\n      const match = s.match(/(.*) \\(at (.*\\.js):([\\d]+)\\)/);\n      if (!match) {\n        return null;\n      }\n\n      const [content, fileName, row] = match.slice(1);\n      return {\n        content,\n        fileName,\n        location: { column: -1, row: parseInt(row, 10) },\n      };\n    })\n    .filter(Boolean) as ComponentStack;\n}\n\nexport function parseLogBoxException(error: ExtendedExceptionData): LogBoxLogData {\n  const message = error.originalMessage != null ? error.originalMessage : 'Unknown';\n\n  const metroInternalError = message.match(METRO_ERROR_FORMAT);\n  if (metroInternalError) {\n    const [content, fileName, row, column, codeFrame] = metroInternalError.slice(1);\n\n    return {\n      level: 'fatal',\n      type: 'Metro Error',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10),\n        },\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${row}-${column}`,\n    };\n  }\n\n  const babelTransformError = message.match(BABEL_TRANSFORM_ERROR_FORMAT);\n  if (babelTransformError) {\n    // Transform errors are thrown from inside the Babel transformer.\n    const [fileName, content, row, column, codeFrame] = babelTransformError.slice(1);\n\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10),\n        },\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${row}-${column}`,\n    };\n  }\n\n  const babelCodeFrameError = message.match(BABEL_CODE_FRAME_ERROR_FORMAT);\n\n  if (babelCodeFrameError) {\n    // Codeframe errors are thrown from any use of buildCodeFrameError.\n    const [fileName, content, codeFrame] = babelCodeFrameError.slice(1);\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: null, // We are not given the location.\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${1}-${1}`,\n    };\n  }\n\n  if (message.match(/^TransformError /)) {\n    return {\n      level: 'syntax',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: [],\n      message: {\n        content: message,\n        substitutions: [],\n      },\n      category: message,\n    };\n  }\n\n  const componentStack = error.componentStack;\n  if (error.isFatal || error.isComponentError) {\n    return {\n      level: 'fatal',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: componentStack != null ? parseComponentStack(componentStack) : [],\n      ...parseInterpolation([message]),\n    };\n  }\n\n  if (componentStack != null) {\n    // It is possible that console errors have a componentStack.\n    return {\n      level: 'error',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: parseComponentStack(componentStack),\n      ...parseInterpolation([message]),\n    };\n  }\n\n  // Most `console.error` calls won't have a componentStack. We parse them like\n  // regular logs which have the component stack burried in the message.\n  return {\n    level: 'error',\n    stack: error.stack,\n    isComponentError: error.isComponentError,\n    ...parseLogBoxLog([message]),\n  };\n}\n\nexport function parseLogBoxLog(args: readonly any[]): {\n  componentStack: ComponentStack;\n  category: Category;\n  message: Message;\n} {\n  const message = args[0];\n  let argsWithoutComponentStack: any[] = [];\n  let componentStack: ComponentStack = [];\n\n  // Extract component stack from warnings like \"Some warning%s\".\n  if (typeof message === 'string' && message.slice(-2) === '%s' && args.length > 0) {\n    const lastArg = args[args.length - 1];\n    if (typeof lastArg === 'string' && isComponentStack(lastArg)) {\n      argsWithoutComponentStack = args.slice(0, -1);\n      argsWithoutComponentStack[0] = message.slice(0, -2);\n      componentStack = parseComponentStack(lastArg);\n    }\n  }\n\n  if (componentStack.length === 0) {\n    // Try finding the component stack elsewhere.\n    for (const arg of args) {\n      if (typeof arg === 'string' && isComponentStack(arg)) {\n        // Strip out any messages before the component stack.\n        let messageEndIndex = arg.search(/\\n {4}(in|at) /);\n        if (messageEndIndex < 0) {\n          // Handle JSC component stacks.\n          messageEndIndex = arg.search(/\\n/);\n        }\n        if (messageEndIndex > 0) {\n          argsWithoutComponentStack.push(arg.slice(0, messageEndIndex));\n        }\n\n        componentStack = parseComponentStack(arg);\n      } else {\n        argsWithoutComponentStack.push(arg);\n      }\n    }\n  }\n\n  return {\n    ...parseInterpolation(argsWithoutComponentStack),\n    componentStack,\n  };\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.d.ts
index 8b9a873..cc5adc0 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.d.ts
@@ -1,12 +1,19 @@
-import React from "react";
-import { LogBoxLog, StackType } from "./Data/LogBoxLog";
+/**
+ * Copyright (c) 650 Industries.
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+import React from 'react';
+import { LogBoxLog, StackType } from './Data/LogBoxLog';
 export declare function LogBoxInspectorContainer(): JSX.Element | null;
 export declare function LogBoxInspector({ log, selectedLogIndex, logs, }: {
     log: LogBoxLog;
     selectedLogIndex: number;
     logs: LogBoxLog[];
 }): JSX.Element;
-export declare function ErrorOverlayBody({ onRetry, }: {
+export declare function ErrorOverlayBody({ onRetry }: {
     onRetry: (type: StackType) => void;
 }): JSX.Element;
 export declare function ErrorOverlayBodyContents({ log, onRetry, }: {
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.d.ts.map
index 5b3b2da..f47d95b 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorOverlay.d.ts","sourceRoot":"","sources":["../../src/error-overlay/ErrorOverlay.tsx"],"names":[],"mappings":"AAQA,OAAO,KAA2C,MAAM,OAAO,CAAC;AAIhE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAkBxD,wBAAgB,wBAAwB,uBAavC;AAED,wBAAgB,eAAe,CAAC,EAC9B,GAAG,EACH,gBAAgB,EAChB,IAAI,GACL,EAAE;IACD,GAAG,EAAE,SAAS,CAAC;IACf,gBAAgB,EAAE,MAAM,CAAC;IACzB,IAAI,EAAE,SAAS,EAAE,CAAC;CACnB,eAmEA;AAED,wBAAgB,gBAAgB,CAAC,EAC/B,OAAO,GACR,EAAE;IACD,OAAO,EAAE,CAAC,IAAI,EAAE,SAAS,KAAK,IAAI,CAAC;CACpC,eAGA;AAED,wBAAgB,wBAAwB,CAAC,EACvC,GAAG,EACH,OAAO,GACR,EAAE;IACD,GAAG,EAAE,SAAS,CAAC;IACf,OAAO,EAAE,CAAC,IAAI,EAAE,SAAS,KAAK,IAAI,CAAC;CACpC,eA2CA;;AAkBD,wBAAqE"}
\ No newline at end of file
+{"version":3,"file":"ErrorOverlay.d.ts","sourceRoot":"","sources":["../../src/error-overlay/ErrorOverlay.tsx"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,KAA2C,MAAM,OAAO,CAAC;AAIhE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAkBxD,wBAAgB,wBAAwB,uBAOvC;AAED,wBAAgB,eAAe,CAAC,EAC9B,GAAG,EACH,gBAAgB,EAChB,IAAI,GACL,EAAE;IACD,GAAG,EAAE,SAAS,CAAC;IACf,gBAAgB,EAAE,MAAM,CAAC;IACzB,IAAI,EAAE,SAAS,EAAE,CAAC;CACnB,eAgEA;AAED,wBAAgB,gBAAgB,CAAC,EAAE,OAAO,EAAE,EAAE;IAAE,OAAO,EAAE,CAAC,IAAI,EAAE,SAAS,KAAK,IAAI,CAAA;CAAE,eAGnF;AAED,wBAAgB,wBAAwB,CAAC,EACvC,GAAG,EACH,OAAO,GACR,EAAE;IACD,GAAG,EAAE,SAAS,CAAC;IACf,OAAO,EAAE,CAAC,IAAI,EAAE,SAAS,KAAK,IAAI,CAAC;CACpC,eAgDA;;AAmBD,wBAAqE"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.js b/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.js
index 9d36eea..8dbe094 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.js
@@ -25,13 +25,12 @@ var __importStar = (this && this.__importStar) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ErrorOverlayBodyContents = exports.ErrorOverlayBody = exports.LogBoxInspector = exports.LogBoxInspectorContainer = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-const react_views_1 = require("@bacons/react-views");
 const react_1 = __importStar(require("react"));
 const react_native_1 = require("react-native");
 const LogBoxData = __importStar(require("./Data/LogBoxData"));
@@ -43,12 +42,12 @@ const LogBoxInspectorHeader_1 = require("./overlay/LogBoxInspectorHeader");
 const LogBoxInspectorMessageHeader_1 = require("./overlay/LogBoxInspectorMessageHeader");
 const LogBoxInspectorStackFrames_1 = require("./overlay/LogBoxInspectorStackFrames");
 const HEADER_TITLE_MAP = {
-    warn: "Console Warning",
-    error: "Console Error",
-    fatal: "Uncaught Error",
-    syntax: "Syntax Error",
-    static: "Static Rendering Error (Node.js)",
-    component: "Render Error",
+    warn: 'Console Warning',
+    error: 'Console Error',
+    fatal: 'Uncaught Error',
+    syntax: 'Syntax Error',
+    static: 'Static Rendering Error (Node.js)',
+    component: 'Render Error',
 };
 function LogBoxInspectorContainer() {
     const { selectedLogIndex, logs } = (0, LogContext_1.useLogs)();
@@ -56,7 +55,7 @@ function LogBoxInspectorContainer() {
     if (log == null) {
         return null;
     }
-    return (react_1.default.createElement(LogBoxInspector, { log: log, selectedLogIndex: selectedLogIndex, logs: logs }));
+    return react_1.default.createElement(LogBoxInspector, { log: log, selectedLogIndex: selectedLogIndex, logs: logs });
 }
 exports.LogBoxInspectorContainer = LogBoxInspectorContainer;
 function LogBoxInspector({ log, selectedLogIndex, logs, }) {
@@ -83,8 +82,8 @@ function LogBoxInspector({ log, selectedLogIndex, logs, }) {
     }, []);
     (0, react_1.useEffect)(() => {
         if (log) {
-            LogBoxData.symbolicateLogNow("stack", log);
-            LogBoxData.symbolicateLogNow("component", log);
+            LogBoxData.symbolicateLogNow('stack', log);
+            LogBoxData.symbolicateLogNow('component', log);
         }
     }, [log]);
     (0, react_1.useEffect)(() => {
@@ -94,7 +93,7 @@ function LogBoxInspector({ log, selectedLogIndex, logs, }) {
             const lastIndex = logs.length - 1;
             const prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;
             const nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;
-            for (const type of ["component", "stack"]) {
+            for (const type of ['component', 'stack']) {
                 LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);
                 LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);
             }
@@ -112,33 +111,34 @@ function LogBoxInspector({ log, selectedLogIndex, logs, }) {
         react_1.default.createElement(LogBoxInspectorFooter_1.LogBoxInspectorFooter, { onDismiss: onDismiss, onMinimize: onMinimize })));
 }
 exports.LogBoxInspector = LogBoxInspector;
-function ErrorOverlayBody({ onRetry, }) {
+function ErrorOverlayBody({ onRetry }) {
     const log = (0, LogContext_1.useSelectedLog)();
     return react_1.default.createElement(ErrorOverlayBodyContents, { log: log, onRetry: onRetry });
 }
 exports.ErrorOverlayBody = ErrorOverlayBody;
 function ErrorOverlayBodyContents({ log, onRetry, }) {
-    var _a, _b;
     const [collapsed, setCollapsed] = (0, react_1.useState)(true);
     (0, react_1.useEffect)(() => {
         setCollapsed(true);
     }, [log]);
-    const headerTitle = (_a = HEADER_TITLE_MAP[log.isComponentError ? "component" : log.level]) !== null && _a !== void 0 ? _a : log.type;
+    const headerTitle = HEADER_TITLE_MAP[log.isComponentError ? 'component' : log.level] ?? log.type;
     const header = (react_1.default.createElement(LogBoxInspectorMessageHeader_1.LogBoxInspectorMessageHeader, { collapsed: collapsed, onPress: () => setCollapsed(!collapsed), message: log.message, level: log.level, title: headerTitle }));
+    // Hide useless React stack.
+    const needsStack = !log.message.content.match(/(Expected server HTML to contain a matching|Text content did not match\.)/);
     return (react_1.default.createElement(react_1.default.Fragment, null,
         collapsed && header,
         react_1.default.createElement(react_native_1.ScrollView, { style: styles.scrollBody },
             !collapsed && header,
             react_1.default.createElement(LogBoxInspectorCodeFrame_1.LogBoxInspectorCodeFrame, { codeFrame: log.codeFrame }),
-            react_1.default.createElement(LogBoxInspectorStackFrames_1.LogBoxInspectorStackFrames, { type: "stack", 
+            needsStack && (react_1.default.createElement(LogBoxInspectorStackFrames_1.LogBoxInspectorStackFrames, { type: "stack", 
                 // eslint-disable-next-line react/jsx-no-bind
-                onRetry: onRetry.bind(onRetry, "stack") }),
-            !!((_b = log === null || log === void 0 ? void 0 : log.componentStack) === null || _b === void 0 ? void 0 : _b.length) && (react_1.default.createElement(LogBoxInspectorStackFrames_1.LogBoxInspectorStackFrames, { type: "component", 
+                onRetry: onRetry.bind(onRetry, 'stack') })),
+            !!log?.componentStack?.length && (react_1.default.createElement(LogBoxInspectorStackFrames_1.LogBoxInspectorStackFrames, { type: "component", 
                 // eslint-disable-next-line react/jsx-no-bind
-                onRetry: onRetry.bind(onRetry, "component") })))));
+                onRetry: onRetry.bind(onRetry, 'component') })))));
 }
 exports.ErrorOverlayBodyContents = ErrorOverlayBodyContents;
-const styles = react_views_1.StyleSheet.create({
+const styles = react_native_1.StyleSheet.create({
     scrollBody: {
         backgroundColor: LogBoxStyle.getBackgroundColor(1),
         flex: 1,
@@ -150,7 +150,8 @@ const styles = react_views_1.StyleSheet.create({
         right: 0,
         zIndex: 999,
         flex: 1,
-        position: "fixed",
+        // @ts-expect-error: fixed is not in the RN types but it works on web
+        position: 'fixed',
     },
 });
 exports.default = LogBoxData.withSubscription(LogBoxInspectorContainer);
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.js.map
index 67c6f2a..9b853f8 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/ErrorOverlay.js.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorOverlay.js","sourceRoot":"","sources":["../../src/error-overlay/ErrorOverlay.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { StyleSheet } from \"@bacons/react-views\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Keyboard, ScrollView, View } from \"react-native\";\n\nimport * as LogBoxData from \"./Data/LogBoxData\";\nimport { LogBoxLog, StackType } from \"./Data/LogBoxLog\";\nimport { useLogs, useSelectedLog } from \"./Data/LogContext\";\nimport * as LogBoxStyle from \"./UI/LogBoxStyle\";\nimport { LogBoxInspectorCodeFrame } from \"./overlay/LogBoxInspectorCodeFrame\";\nimport { LogBoxInspectorFooter as ErrorOverlayFooter } from \"./overlay/LogBoxInspectorFooter\";\nimport { LogBoxInspectorHeader as ErrorOverlayHeader } from \"./overlay/LogBoxInspectorHeader\";\nimport { LogBoxInspectorMessageHeader } from \"./overlay/LogBoxInspectorMessageHeader\";\nimport { LogBoxInspectorStackFrames } from \"./overlay/LogBoxInspectorStackFrames\";\n\nconst HEADER_TITLE_MAP = {\n  warn: \"Console Warning\",\n  error: \"Console Error\",\n  fatal: \"Uncaught Error\",\n  syntax: \"Syntax Error\",\n  static: \"Static Rendering Error (Node.js)\",\n  component: \"Render Error\",\n};\n\nexport function LogBoxInspectorContainer() {\n  const { selectedLogIndex, logs } = useLogs();\n  const log = logs[selectedLogIndex];\n  if (log == null) {\n    return null;\n  }\n  return (\n    <LogBoxInspector\n      log={log}\n      selectedLogIndex={selectedLogIndex}\n      logs={logs}\n    />\n  );\n}\n\nexport function LogBoxInspector({\n  log,\n  selectedLogIndex,\n  logs,\n}: {\n  log: LogBoxLog;\n  selectedLogIndex: number;\n  logs: LogBoxLog[];\n}) {\n  const onDismiss = useCallback((): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  }, [selectedLogIndex]);\n\n  const onMinimize = useCallback((): void => {\n    LogBoxData.setSelectedLog(-1);\n  }, []);\n\n  const onChangeSelectedIndex = useCallback((index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n\n  useEffect(() => {\n    if (log) {\n      LogBoxData.symbolicateLogNow(\"stack\", log);\n      LogBoxData.symbolicateLogNow(\"component\", log);\n    }\n  }, [log]);\n\n  useEffect(() => {\n    // Optimistically symbolicate the last and next logs.\n    if (logs.length > 1) {\n      const selected = selectedLogIndex;\n      const lastIndex = logs.length - 1;\n      const prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      const nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      for (const type of [\"component\", \"stack\"] as const) {\n        LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);\n        LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);\n      }\n    }\n  }, [logs, selectedLogIndex]);\n\n  useEffect(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const _handleRetry = useCallback(\n    (type: StackType) => {\n      LogBoxData.retrySymbolicateLogNow(type, log);\n    },\n    [log]\n  );\n\n  return (\n    <View style={styles.container}>\n      <ErrorOverlayHeader\n        onSelectIndex={onChangeSelectedIndex}\n        level={log.level}\n      />\n      <ErrorOverlayBody onRetry={_handleRetry} />\n      <ErrorOverlayFooter onDismiss={onDismiss} onMinimize={onMinimize} />\n    </View>\n  );\n}\n\nexport function ErrorOverlayBody({\n  onRetry,\n}: {\n  onRetry: (type: StackType) => void;\n}) {\n  const log = useSelectedLog();\n  return <ErrorOverlayBodyContents log={log} onRetry={onRetry} />;\n}\n\nexport function ErrorOverlayBodyContents({\n  log,\n  onRetry,\n}: {\n  log: LogBoxLog;\n  onRetry: (type: StackType) => void;\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    setCollapsed(true);\n  }, [log]);\n\n  const headerTitle =\n    HEADER_TITLE_MAP[log.isComponentError ? \"component\" : log.level] ??\n    log.type;\n\n  const header = (\n    <LogBoxInspectorMessageHeader\n      collapsed={collapsed}\n      onPress={() => setCollapsed(!collapsed)}\n      message={log.message}\n      level={log.level}\n      title={headerTitle}\n    />\n  );\n\n  return (\n    <>\n      {collapsed && header}\n      <ScrollView style={styles.scrollBody}>\n        {!collapsed && header}\n\n        <LogBoxInspectorCodeFrame codeFrame={log.codeFrame} />\n        <LogBoxInspectorStackFrames\n          type=\"stack\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onRetry={onRetry.bind(onRetry, \"stack\")}\n        />\n        {!!log?.componentStack?.length && (\n          <LogBoxInspectorStackFrames\n            type=\"component\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onRetry={onRetry.bind(onRetry, \"component\")}\n          />\n        )}\n      </ScrollView>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    flex: 1,\n  },\n  container: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    flex: 1,\n    position: \"fixed\",\n  },\n});\n\nexport default LogBoxData.withSubscription(LogBoxInspectorContainer);\n"]}
\ No newline at end of file
+{"version":3,"file":"ErrorOverlay.js","sourceRoot":"","sources":["../../src/error-overlay/ErrorOverlay.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Keyboard, ScrollView, View, StyleSheet } from 'react-native';\n\nimport * as LogBoxData from './Data/LogBoxData';\nimport { LogBoxLog, StackType } from './Data/LogBoxLog';\nimport { useLogs, useSelectedLog } from './Data/LogContext';\nimport * as LogBoxStyle from './UI/LogBoxStyle';\nimport { LogBoxInspectorCodeFrame } from './overlay/LogBoxInspectorCodeFrame';\nimport { LogBoxInspectorFooter as ErrorOverlayFooter } from './overlay/LogBoxInspectorFooter';\nimport { LogBoxInspectorHeader as ErrorOverlayHeader } from './overlay/LogBoxInspectorHeader';\nimport { LogBoxInspectorMessageHeader } from './overlay/LogBoxInspectorMessageHeader';\nimport { LogBoxInspectorStackFrames } from './overlay/LogBoxInspectorStackFrames';\n\nconst HEADER_TITLE_MAP = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  static: 'Static Rendering Error (Node.js)',\n  component: 'Render Error',\n};\n\nexport function LogBoxInspectorContainer() {\n  const { selectedLogIndex, logs } = useLogs();\n  const log = logs[selectedLogIndex];\n  if (log == null) {\n    return null;\n  }\n  return <LogBoxInspector log={log} selectedLogIndex={selectedLogIndex} logs={logs} />;\n}\n\nexport function LogBoxInspector({\n  log,\n  selectedLogIndex,\n  logs,\n}: {\n  log: LogBoxLog;\n  selectedLogIndex: number;\n  logs: LogBoxLog[];\n}) {\n  const onDismiss = useCallback((): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  }, [selectedLogIndex]);\n\n  const onMinimize = useCallback((): void => {\n    LogBoxData.setSelectedLog(-1);\n  }, []);\n\n  const onChangeSelectedIndex = useCallback((index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n\n  useEffect(() => {\n    if (log) {\n      LogBoxData.symbolicateLogNow('stack', log);\n      LogBoxData.symbolicateLogNow('component', log);\n    }\n  }, [log]);\n\n  useEffect(() => {\n    // Optimistically symbolicate the last and next logs.\n    if (logs.length > 1) {\n      const selected = selectedLogIndex;\n      const lastIndex = logs.length - 1;\n      const prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      const nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      for (const type of ['component', 'stack'] as const) {\n        LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);\n        LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);\n      }\n    }\n  }, [logs, selectedLogIndex]);\n\n  useEffect(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const _handleRetry = useCallback(\n    (type: StackType) => {\n      LogBoxData.retrySymbolicateLogNow(type, log);\n    },\n    [log]\n  );\n\n  return (\n    <View style={styles.container}>\n      <ErrorOverlayHeader onSelectIndex={onChangeSelectedIndex} level={log.level} />\n      <ErrorOverlayBody onRetry={_handleRetry} />\n      <ErrorOverlayFooter onDismiss={onDismiss} onMinimize={onMinimize} />\n    </View>\n  );\n}\n\nexport function ErrorOverlayBody({ onRetry }: { onRetry: (type: StackType) => void }) {\n  const log = useSelectedLog();\n  return <ErrorOverlayBodyContents log={log} onRetry={onRetry} />;\n}\n\nexport function ErrorOverlayBodyContents({\n  log,\n  onRetry,\n}: {\n  log: LogBoxLog;\n  onRetry: (type: StackType) => void;\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    setCollapsed(true);\n  }, [log]);\n\n  const headerTitle = HEADER_TITLE_MAP[log.isComponentError ? 'component' : log.level] ?? log.type;\n\n  const header = (\n    <LogBoxInspectorMessageHeader\n      collapsed={collapsed}\n      onPress={() => setCollapsed(!collapsed)}\n      message={log.message}\n      level={log.level}\n      title={headerTitle}\n    />\n  );\n\n  // Hide useless React stack.\n  const needsStack = !log.message.content.match(\n    /(Expected server HTML to contain a matching|Text content did not match\\.)/\n  );\n\n  return (\n    <>\n      {collapsed && header}\n      <ScrollView style={styles.scrollBody}>\n        {!collapsed && header}\n\n        <LogBoxInspectorCodeFrame codeFrame={log.codeFrame} />\n        {needsStack && (\n          <LogBoxInspectorStackFrames\n            type=\"stack\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onRetry={onRetry.bind(onRetry, 'stack')}\n          />\n        )}\n        {!!log?.componentStack?.length && (\n          <LogBoxInspectorStackFrames\n            type=\"component\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onRetry={onRetry.bind(onRetry, 'component')}\n          />\n        )}\n      </ScrollView>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    flex: 1,\n  },\n  container: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    flex: 1,\n    // @ts-expect-error: fixed is not in the RN types but it works on web\n    position: 'fixed',\n  },\n});\n\nexport default LogBoxData.withSubscription(LogBoxInspectorContainer);\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.d.ts
index 8b7165b..cd606b6 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.d.ts
@@ -1,5 +1,5 @@
-import { IgnorePattern, LogData } from "./Data/LogBoxData";
-import { ExtendedExceptionData } from "./Data/parseLogBoxLog";
+import { IgnorePattern, LogData } from './Data/LogBoxData';
+import { ExtendedExceptionData } from './Data/parseLogBoxLog';
 export { LogData, ExtendedExceptionData, IgnorePattern };
 interface ILogBox {
     install(): void;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.d.ts.map
index 1ea36b0..a22fab0 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBox.d.ts","sourceRoot":"","sources":["../../src/error-overlay/LogBox.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAE9D,OAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,aAAa,EAAE,CAAC;AAEzD,UAAU,OAAO;IACf,OAAO,IAAI,IAAI,CAAC;IAChB,SAAS,IAAI,IAAI,CAAC;IAClB,WAAW,IAAI,OAAO,CAAC;IACvB,UAAU,CAAC,QAAQ,EAAE,SAAS,aAAa,EAAE,GAAG,IAAI,CAAC;IACrD,aAAa,CAAC,MAAM,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,IAAI,CAAC;IACrB,MAAM,CAAC,GAAG,EAAE,OAAO,GAAG,IAAI,CAAC;IAC3B,YAAY,CAAC,KAAK,EAAE,qBAAqB,GAAG,IAAI,CAAC;CAClD;AAED,QAAA,MAAM,MAAM,EAAE,OAgCb,CAAC;AAIF,eAAe,MAAM,CAAC"}
\ No newline at end of file
+{"version":3,"file":"LogBox.d.ts","sourceRoot":"","sources":["../../src/error-overlay/LogBox.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAE9D,OAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,aAAa,EAAE,CAAC;AAEzD,UAAU,OAAO;IACf,OAAO,IAAI,IAAI,CAAC;IAChB,SAAS,IAAI,IAAI,CAAC;IAClB,WAAW,IAAI,OAAO,CAAC;IACvB,UAAU,CAAC,QAAQ,EAAE,SAAS,aAAa,EAAE,GAAG,IAAI,CAAC;IACrD,aAAa,CAAC,MAAM,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,IAAI,CAAC;IACrB,MAAM,CAAC,GAAG,EAAE,OAAO,GAAG,IAAI,CAAC;IAC3B,YAAY,CAAC,KAAK,EAAE,qBAAqB,GAAG,IAAI,CAAC;CAClD;AAED,QAAA,MAAM,MAAM,EAAE,OAgCb,CAAC;AAEF,eAAe,MAAM,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.js b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.js
index d4838bc..cf5d676 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.js
@@ -26,6 +26,5 @@ const LogBox = {
         // Do nothing.
     },
 };
-module.exports = LogBox;
 exports.default = LogBox;
 //# sourceMappingURL=LogBox.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.js.map
index b0162af..1eb0f32 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBox.js","sourceRoot":"","sources":["../../src/error-overlay/LogBox.ts"],"names":[],"mappings":";;AAgBA,MAAM,MAAM,GAAY;IACtB,OAAO;QACL,cAAc;IAChB,CAAC;IAED,SAAS;QACP,cAAc;IAChB,CAAC;IAED,WAAW;QACT,OAAO,KAAK,CAAC;IACf,CAAC;IAED,UAAU,CAAC,QAAkC;QAC3C,cAAc;IAChB,CAAC;IAED,aAAa,CAAC,KAAe;QAC3B,cAAc;IAChB,CAAC;IAED,YAAY;QACV,cAAc;IAChB,CAAC;IAED,MAAM,CAAC,GAAY;QACjB,cAAc;IAChB,CAAC;IAED,YAAY,CAAC,EAAyB;QACpC,cAAc;IAChB,CAAC;CACF,CAAC;AAEF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;AAExB,kBAAe,MAAM,CAAC","sourcesContent":["import { IgnorePattern, LogData } from \"./Data/LogBoxData\";\nimport { ExtendedExceptionData } from \"./Data/parseLogBoxLog\";\n\nexport { LogData, ExtendedExceptionData, IgnorePattern };\n\ninterface ILogBox {\n  install(): void;\n  uninstall(): void;\n  isInstalled(): boolean;\n  ignoreLogs(patterns: readonly IgnorePattern[]): void;\n  ignoreAllLogs(ignore?: boolean): void;\n  clearAllLogs(): void;\n  addLog(log: LogData): void;\n  addException(error: ExtendedExceptionData): void;\n}\n\nconst LogBox: ILogBox = {\n  install(): void {\n    // Do nothing.\n  },\n\n  uninstall(): void {\n    // Do nothing.\n  },\n\n  isInstalled(): boolean {\n    return false;\n  },\n\n  ignoreLogs(patterns: readonly IgnorePattern[]): void {\n    // Do nothing.\n  },\n\n  ignoreAllLogs(value?: boolean): void {\n    // Do nothing.\n  },\n\n  clearAllLogs(): void {\n    // Do nothing.\n  },\n\n  addLog(log: LogData): void {\n    // Do nothing.\n  },\n\n  addException(ex: ExtendedExceptionData): void {\n    // Do nothing.\n  },\n};\n\nmodule.exports = LogBox;\n\nexport default LogBox;\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBox.js","sourceRoot":"","sources":["../../src/error-overlay/LogBox.ts"],"names":[],"mappings":";;AAgBA,MAAM,MAAM,GAAY;IACtB,OAAO;QACL,cAAc;IAChB,CAAC;IAED,SAAS;QACP,cAAc;IAChB,CAAC;IAED,WAAW;QACT,OAAO,KAAK,CAAC;IACf,CAAC;IAED,UAAU,CAAC,QAAkC;QAC3C,cAAc;IAChB,CAAC;IAED,aAAa,CAAC,KAAe;QAC3B,cAAc;IAChB,CAAC;IAED,YAAY;QACV,cAAc;IAChB,CAAC;IAED,MAAM,CAAC,GAAY;QACjB,cAAc;IAChB,CAAC;IAED,YAAY,CAAC,EAAyB;QACpC,cAAc;IAChB,CAAC;CACF,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["import { IgnorePattern, LogData } from './Data/LogBoxData';\nimport { ExtendedExceptionData } from './Data/parseLogBoxLog';\n\nexport { LogData, ExtendedExceptionData, IgnorePattern };\n\ninterface ILogBox {\n  install(): void;\n  uninstall(): void;\n  isInstalled(): boolean;\n  ignoreLogs(patterns: readonly IgnorePattern[]): void;\n  ignoreAllLogs(ignore?: boolean): void;\n  clearAllLogs(): void;\n  addLog(log: LogData): void;\n  addException(error: ExtendedExceptionData): void;\n}\n\nconst LogBox: ILogBox = {\n  install(): void {\n    // Do nothing.\n  },\n\n  uninstall(): void {\n    // Do nothing.\n  },\n\n  isInstalled(): boolean {\n    return false;\n  },\n\n  ignoreLogs(patterns: readonly IgnorePattern[]): void {\n    // Do nothing.\n  },\n\n  ignoreAllLogs(value?: boolean): void {\n    // Do nothing.\n  },\n\n  clearAllLogs(): void {\n    // Do nothing.\n  },\n\n  addLog(log: LogData): void {\n    // Do nothing.\n  },\n\n  addException(ex: ExtendedExceptionData): void {\n    // Do nothing.\n  },\n};\n\nexport default LogBox;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.d.ts
index 088695c..af6edc1 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.d.ts
@@ -1,12 +1,12 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-import { IgnorePattern, LogData } from "./Data/LogBoxData";
-import { ExtendedExceptionData } from "./Data/parseLogBoxLog";
+import { IgnorePattern, LogData } from './Data/LogBoxData';
+import { ExtendedExceptionData } from './Data/parseLogBoxLog';
 export { LogData, ExtendedExceptionData, IgnorePattern };
 declare let LogBox: ILogBox;
 interface ILogBox {
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.d.ts.map
index e2c6e70..5801344 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBox.web.d.ts","sourceRoot":"","sources":["../../src/error-overlay/LogBox.web.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAE9D,OAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,aAAa,EAAE,CAAC;AAEzD,QAAA,IAAI,MAAM,EAAE,OAAO,CAAC;AAEpB,UAAU,OAAO;IACf,OAAO,IAAI,IAAI,CAAC;IAChB,SAAS,IAAI,IAAI,CAAC;IAClB,WAAW,IAAI,OAAO,CAAC;IACvB,UAAU,CAAC,QAAQ,EAAE,SAAS,aAAa,EAAE,GAAG,IAAI,CAAC;IACrD,aAAa,CAAC,MAAM,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,IAAI,CAAC;IACrB,MAAM,CAAC,GAAG,EAAE,OAAO,GAAG,IAAI,CAAC;IAC3B,YAAY,CAAC,KAAK,EAAE,qBAAqB,GAAG,IAAI,CAAC;CAClD;AAyJD,eAAe,MAAM,CAAC"}
\ No newline at end of file
+{"version":3,"file":"LogBox.web.d.ts","sourceRoot":"","sources":["../../src/error-overlay/LogBox.web.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAE9D,OAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,aAAa,EAAE,CAAC;AAEzD,QAAA,IAAI,MAAM,EAAE,OAAO,CAAC;AAEpB,UAAU,OAAO;IACf,OAAO,IAAI,IAAI,CAAC;IAChB,SAAS,IAAI,IAAI,CAAC;IAClB,WAAW,IAAI,OAAO,CAAC;IACvB,UAAU,CAAC,QAAQ,EAAE,SAAS,aAAa,EAAE,GAAG,IAAI,CAAC;IACrD,aAAa,CAAC,MAAM,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,IAAI,CAAC;IACrB,MAAM,CAAC,GAAG,EAAE,OAAO,GAAG,IAAI,CAAC;IAC3B,YAAY,CAAC,KAAK,EAAE,qBAAqB,GAAG,IAAI,CAAC;CAClD;AAqJD,eAAe,MAAM,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.js b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.js
index f4fc5b9..3f5251d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -13,8 +13,8 @@ let LogBox;
  * LogBox displays logs in the app.
  */
 if (__DEV__) {
-    const LogBoxData = require("./Data/LogBoxData");
-    const { parseLogBoxLog, parseInterpolation } = require("./Data/parseLogBoxLog");
+    const LogBoxData = require('./Data/LogBoxData');
+    const { parseLogBoxLog, parseInterpolation } = require('./Data/parseLogBoxLog');
     let originalConsoleError;
     let consoleErrorImpl;
     let isLogBoxInstalled = false;
@@ -33,7 +33,7 @@ if (__DEV__) {
             if (isFirstInstall) {
                 originalConsoleError = console.error.bind(console);
                 console.error = (...args) => {
-                    consoleErrorImpl === null || consoleErrorImpl === void 0 ? void 0 : consoleErrorImpl(...args);
+                    consoleErrorImpl?.(...args);
                 };
             }
             consoleErrorImpl = registerError;
@@ -77,12 +77,12 @@ if (__DEV__) {
         },
     };
     const isWarningModuleWarning = (...args) => {
-        return typeof args[0] === "string" && args[0].startsWith("Warning: ");
+        return typeof args[0] === 'string' && args[0].startsWith('Warning: ');
     };
     const registerError = (...args) => {
         // Let errors within LogBox itself fall through.
         if (LogBoxData.isLogBoxErrorMessage(args[0])) {
-            originalConsoleError === null || originalConsoleError === void 0 ? void 0 : originalConsoleError(...args);
+            originalConsoleError?.(...args);
             return;
         }
         try {
@@ -94,7 +94,7 @@ if (__DEV__) {
                 //
                 // The 'warning' module needs to be handled here because React internally calls
                 // `console.error('Warning: ')` with the component stack already included.
-                originalConsoleError === null || originalConsoleError === void 0 ? void 0 : originalConsoleError(...args);
+                originalConsoleError?.(...args);
                 return;
             }
             const { category, message, componentStack } = parseLogBoxLog(args);
@@ -102,13 +102,11 @@ if (__DEV__) {
                 // Interpolate the message so they are formatted for adb and other CLIs.
                 // This is different than the message.content above because it includes component stacks.
                 const interpolated = parseInterpolation(args);
-                originalConsoleError === null || originalConsoleError === void 0 ? void 0 : originalConsoleError(interpolated.message.content);
+                originalConsoleError?.(interpolated.message.content);
                 LogBoxData.addLog({
                     // Always show the static rendering issues as full screen since they
                     // are too confusing otherwise.
-                    level: /did not match\. Server:/.test(message.content)
-                        ? "fatal"
-                        : "error",
+                    level: /did not match\. Server:/.test(message.content) ? 'fatal' : 'error',
                     category,
                     message,
                     componentStack,
@@ -134,6 +132,5 @@ else {
         addException(ex) { },
     };
 }
-module.exports = LogBox;
 exports.default = LogBox;
 //# sourceMappingURL=LogBox.web.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.js.map
index 02bb0eb..629e7a5 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/LogBox.web.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBox.web.js","sourceRoot":"","sources":["../../src/error-overlay/LogBox.web.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Platform } from \"react-native\";\n\nimport { IgnorePattern, LogData } from \"./Data/LogBoxData\";\nimport { ExtendedExceptionData } from \"./Data/parseLogBoxLog\";\n\nexport { LogData, ExtendedExceptionData, IgnorePattern };\n\nlet LogBox: ILogBox;\n\ninterface ILogBox {\n  install(): void;\n  uninstall(): void;\n  isInstalled(): boolean;\n  ignoreLogs(patterns: readonly IgnorePattern[]): void;\n  ignoreAllLogs(ignore?: boolean): void;\n  clearAllLogs(): void;\n  addLog(log: LogData): void;\n  addException(error: ExtendedExceptionData): void;\n}\n\n/**\n * LogBox displays logs in the app.\n */\nif (__DEV__) {\n  const LogBoxData = require(\"./Data/LogBoxData\");\n  const { parseLogBoxLog, parseInterpolation } =\n    require(\"./Data/parseLogBoxLog\") as typeof import(\"./Data/parseLogBoxLog\");\n\n  let originalConsoleError: typeof console.error | undefined;\n  let consoleErrorImpl: typeof console.error | undefined;\n\n  let isLogBoxInstalled: boolean = false;\n\n  LogBox = {\n    install(): void {\n      if (isLogBoxInstalled) {\n        return;\n      }\n\n      isLogBoxInstalled = true;\n\n      // Trigger lazy initialization of module.\n      // require(\"../NativeModules/specs/NativeLogBox\");\n\n      // IMPORTANT: we only overwrite `console.error` and `console.warn` once.\n      // When we uninstall we keep the same reference and only change its\n      // internal implementation\n      const isFirstInstall = originalConsoleError == null;\n      if (isFirstInstall) {\n        originalConsoleError = console.error.bind(console);\n\n        console.error = (...args) => {\n          consoleErrorImpl?.(...args);\n        };\n      }\n\n      consoleErrorImpl = registerError;\n\n      if (Platform.isTesting) {\n        LogBoxData.setDisabled(true);\n      }\n    },\n\n    uninstall(): void {\n      if (!isLogBoxInstalled) {\n        return;\n      }\n\n      isLogBoxInstalled = false;\n\n      // IMPORTANT: we don't re-assign to `console` in case the method has been\n      // decorated again after installing LogBox. E.g.:\n      // Before uninstalling: original > LogBox > OtherErrorHandler\n      // After uninstalling:  original > LogBox (noop) > OtherErrorHandler\n      consoleErrorImpl = originalConsoleError;\n      delete (console as any).disableLogBox;\n    },\n\n    isInstalled(): boolean {\n      return isLogBoxInstalled;\n    },\n\n    ignoreLogs(patterns: readonly IgnorePattern[]): void {\n      LogBoxData.addIgnorePatterns(patterns);\n    },\n\n    ignoreAllLogs(value?: boolean): void {\n      LogBoxData.setDisabled(value == null ? true : value);\n    },\n\n    clearAllLogs(): void {\n      LogBoxData.clear();\n    },\n\n    addLog(log: LogData): void {\n      if (isLogBoxInstalled) {\n        LogBoxData.addLog(log);\n      }\n    },\n\n    addException(error: ExtendedExceptionData): void {\n      if (isLogBoxInstalled) {\n        LogBoxData.addException(error);\n      }\n    },\n  };\n\n  const isWarningModuleWarning = (...args: any) => {\n    return typeof args[0] === \"string\" && args[0].startsWith(\"Warning: \");\n  };\n\n  const registerError = (...args: Parameters<typeof console.error>): void => {\n    // Let errors within LogBox itself fall through.\n    if (LogBoxData.isLogBoxErrorMessage(args[0])) {\n      originalConsoleError?.(...args);\n      return;\n    }\n\n    try {\n      if (!isWarningModuleWarning(...args)) {\n        // Only show LogBox for the 'warning' module, otherwise pass through.\n        // By passing through, this will get picked up by the React console override,\n        // potentially adding the component stack. React then passes it back to the\n        // React Native ExceptionsManager, which reports it to LogBox as an error.\n        //\n        // The 'warning' module needs to be handled here because React internally calls\n        // `console.error('Warning: ')` with the component stack already included.\n        originalConsoleError?.(...args);\n        return;\n      }\n\n      const { category, message, componentStack } = parseLogBoxLog(args);\n\n      if (!LogBoxData.isMessageIgnored(message.content)) {\n        // Interpolate the message so they are formatted for adb and other CLIs.\n        // This is different than the message.content above because it includes component stacks.\n        const interpolated = parseInterpolation(args);\n        originalConsoleError?.(interpolated.message.content);\n\n        LogBoxData.addLog({\n          // Always show the static rendering issues as full screen since they\n          // are too confusing otherwise.\n          level: /did not match\\. Server:/.test(message.content)\n            ? \"fatal\"\n            : \"error\",\n          category,\n          message,\n          componentStack,\n        });\n      }\n    } catch (err) {\n      LogBoxData.reportUnexpectedLogBoxError(err);\n    }\n  };\n} else {\n  LogBox = {\n    install(): void {},\n    uninstall(): void {},\n    isInstalled(): boolean {\n      return false;\n    },\n    ignoreLogs(patterns: readonly IgnorePattern[]): void {},\n    ignoreAllLogs(value?: boolean): void {},\n    clearAllLogs(): void {},\n    addLog(log: LogData): void {},\n    addException(ex: ExtendedExceptionData): void {},\n  };\n}\n\nmodule.exports = LogBox;\n\nexport default LogBox;\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBox.web.js","sourceRoot":"","sources":["../../src/error-overlay/LogBox.web.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,+CAAwC;AAOxC,IAAI,MAAe,CAAC;AAapB;;GAEG;AACH,IAAI,OAAO,EAAE;IACX,MAAM,UAAU,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAChD,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,GAC1C,OAAO,CAAC,uBAAuB,CAA2C,CAAC;IAE7E,IAAI,oBAAsD,CAAC;IAC3D,IAAI,gBAAkD,CAAC;IAEvD,IAAI,iBAAiB,GAAY,KAAK,CAAC;IAEvC,MAAM,GAAG;QACP,OAAO;YACL,IAAI,iBAAiB,EAAE;gBACrB,OAAO;aACR;YAED,iBAAiB,GAAG,IAAI,CAAC;YAEzB,yCAAyC;YACzC,kDAAkD;YAElD,wEAAwE;YACxE,mEAAmE;YACnE,0BAA0B;YAC1B,MAAM,cAAc,GAAG,oBAAoB,IAAI,IAAI,CAAC;YACpD,IAAI,cAAc,EAAE;gBAClB,oBAAoB,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAEnD,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,EAAE,EAAE;oBAC1B,gBAAgB,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;gBAC9B,CAAC,CAAC;aACH;YAED,gBAAgB,GAAG,aAAa,CAAC;YAEjC,IAAI,uBAAQ,CAAC,SAAS,EAAE;gBACtB,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC9B;QACH,CAAC;QAED,SAAS;YACP,IAAI,CAAC,iBAAiB,EAAE;gBACtB,OAAO;aACR;YAED,iBAAiB,GAAG,KAAK,CAAC;YAE1B,yEAAyE;YACzE,iDAAiD;YACjD,6DAA6D;YAC7D,oEAAoE;YACpE,gBAAgB,GAAG,oBAAoB,CAAC;YACxC,OAAQ,OAAe,CAAC,aAAa,CAAC;QACxC,CAAC;QAED,WAAW;YACT,OAAO,iBAAiB,CAAC;QAC3B,CAAC;QAED,UAAU,CAAC,QAAkC;YAC3C,UAAU,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC;QAED,aAAa,CAAC,KAAe;YAC3B,UAAU,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACvD,CAAC;QAED,YAAY;YACV,UAAU,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,GAAY;YACjB,IAAI,iBAAiB,EAAE;gBACrB,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACxB;QACH,CAAC;QAED,YAAY,CAAC,KAA4B;YACvC,IAAI,iBAAiB,EAAE;gBACrB,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAChC;QACH,CAAC;KACF,CAAC;IAEF,MAAM,sBAAsB,GAAG,CAAC,GAAG,IAAS,EAAE,EAAE;QAC9C,OAAO,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACxE,CAAC,CAAC;IAEF,MAAM,aAAa,GAAG,CAAC,GAAG,IAAsC,EAAQ,EAAE;QACxE,gDAAgD;QAChD,IAAI,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YAC5C,oBAAoB,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;YAChC,OAAO;SACR;QAED,IAAI;YACF,IAAI,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,EAAE;gBACpC,qEAAqE;gBACrE,6EAA6E;gBAC7E,2EAA2E;gBAC3E,0EAA0E;gBAC1E,EAAE;gBACF,+EAA+E;gBAC/E,0EAA0E;gBAC1E,oBAAoB,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;gBAChC,OAAO;aACR;YAED,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;YAEnE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACjD,wEAAwE;gBACxE,yFAAyF;gBACzF,MAAM,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC9C,oBAAoB,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAErD,UAAU,CAAC,MAAM,CAAC;oBAChB,oEAAoE;oBACpE,+BAA+B;oBAC/B,KAAK,EAAE,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO;oBAC1E,QAAQ;oBACR,OAAO;oBACP,cAAc;iBACf,CAAC,CAAC;aACJ;SACF;QAAC,OAAO,GAAG,EAAE;YACZ,UAAU,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC;SAC7C;IACH,CAAC,CAAC;CACH;KAAM;IACL,MAAM,GAAG;QACP,OAAO,KAAU,CAAC;QAClB,SAAS,KAAU,CAAC;QACpB,WAAW;YACT,OAAO,KAAK,CAAC;QACf,CAAC;QACD,UAAU,CAAC,QAAkC,IAAS,CAAC;QACvD,aAAa,CAAC,KAAe,IAAS,CAAC;QACvC,YAAY,KAAU,CAAC;QACvB,MAAM,CAAC,GAAY,IAAS,CAAC;QAC7B,YAAY,CAAC,EAAyB,IAAS,CAAC;KACjD,CAAC;CACH;AAED,kBAAe,MAAM,CAAC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Platform } from 'react-native';\n\nimport { IgnorePattern, LogData } from './Data/LogBoxData';\nimport { ExtendedExceptionData } from './Data/parseLogBoxLog';\n\nexport { LogData, ExtendedExceptionData, IgnorePattern };\n\nlet LogBox: ILogBox;\n\ninterface ILogBox {\n  install(): void;\n  uninstall(): void;\n  isInstalled(): boolean;\n  ignoreLogs(patterns: readonly IgnorePattern[]): void;\n  ignoreAllLogs(ignore?: boolean): void;\n  clearAllLogs(): void;\n  addLog(log: LogData): void;\n  addException(error: ExtendedExceptionData): void;\n}\n\n/**\n * LogBox displays logs in the app.\n */\nif (__DEV__) {\n  const LogBoxData = require('./Data/LogBoxData');\n  const { parseLogBoxLog, parseInterpolation } =\n    require('./Data/parseLogBoxLog') as typeof import('./Data/parseLogBoxLog');\n\n  let originalConsoleError: typeof console.error | undefined;\n  let consoleErrorImpl: typeof console.error | undefined;\n\n  let isLogBoxInstalled: boolean = false;\n\n  LogBox = {\n    install(): void {\n      if (isLogBoxInstalled) {\n        return;\n      }\n\n      isLogBoxInstalled = true;\n\n      // Trigger lazy initialization of module.\n      // require(\"../NativeModules/specs/NativeLogBox\");\n\n      // IMPORTANT: we only overwrite `console.error` and `console.warn` once.\n      // When we uninstall we keep the same reference and only change its\n      // internal implementation\n      const isFirstInstall = originalConsoleError == null;\n      if (isFirstInstall) {\n        originalConsoleError = console.error.bind(console);\n\n        console.error = (...args) => {\n          consoleErrorImpl?.(...args);\n        };\n      }\n\n      consoleErrorImpl = registerError;\n\n      if (Platform.isTesting) {\n        LogBoxData.setDisabled(true);\n      }\n    },\n\n    uninstall(): void {\n      if (!isLogBoxInstalled) {\n        return;\n      }\n\n      isLogBoxInstalled = false;\n\n      // IMPORTANT: we don't re-assign to `console` in case the method has been\n      // decorated again after installing LogBox. E.g.:\n      // Before uninstalling: original > LogBox > OtherErrorHandler\n      // After uninstalling:  original > LogBox (noop) > OtherErrorHandler\n      consoleErrorImpl = originalConsoleError;\n      delete (console as any).disableLogBox;\n    },\n\n    isInstalled(): boolean {\n      return isLogBoxInstalled;\n    },\n\n    ignoreLogs(patterns: readonly IgnorePattern[]): void {\n      LogBoxData.addIgnorePatterns(patterns);\n    },\n\n    ignoreAllLogs(value?: boolean): void {\n      LogBoxData.setDisabled(value == null ? true : value);\n    },\n\n    clearAllLogs(): void {\n      LogBoxData.clear();\n    },\n\n    addLog(log: LogData): void {\n      if (isLogBoxInstalled) {\n        LogBoxData.addLog(log);\n      }\n    },\n\n    addException(error: ExtendedExceptionData): void {\n      if (isLogBoxInstalled) {\n        LogBoxData.addException(error);\n      }\n    },\n  };\n\n  const isWarningModuleWarning = (...args: any) => {\n    return typeof args[0] === 'string' && args[0].startsWith('Warning: ');\n  };\n\n  const registerError = (...args: Parameters<typeof console.error>): void => {\n    // Let errors within LogBox itself fall through.\n    if (LogBoxData.isLogBoxErrorMessage(args[0])) {\n      originalConsoleError?.(...args);\n      return;\n    }\n\n    try {\n      if (!isWarningModuleWarning(...args)) {\n        // Only show LogBox for the 'warning' module, otherwise pass through.\n        // By passing through, this will get picked up by the React console override,\n        // potentially adding the component stack. React then passes it back to the\n        // React Native ExceptionsManager, which reports it to LogBox as an error.\n        //\n        // The 'warning' module needs to be handled here because React internally calls\n        // `console.error('Warning: ')` with the component stack already included.\n        originalConsoleError?.(...args);\n        return;\n      }\n\n      const { category, message, componentStack } = parseLogBoxLog(args);\n\n      if (!LogBoxData.isMessageIgnored(message.content)) {\n        // Interpolate the message so they are formatted for adb and other CLIs.\n        // This is different than the message.content above because it includes component stacks.\n        const interpolated = parseInterpolation(args);\n        originalConsoleError?.(interpolated.message.content);\n\n        LogBoxData.addLog({\n          // Always show the static rendering issues as full screen since they\n          // are too confusing otherwise.\n          level: /did not match\\. Server:/.test(message.content) ? 'fatal' : 'error',\n          category,\n          message,\n          componentStack,\n        });\n      }\n    } catch (err) {\n      LogBoxData.reportUnexpectedLogBoxError(err);\n    }\n  };\n} else {\n  LogBox = {\n    install(): void {},\n    uninstall(): void {},\n    isInstalled(): boolean {\n      return false;\n    },\n    ignoreLogs(patterns: readonly IgnorePattern[]): void {},\n    ignoreAllLogs(value?: boolean): void {},\n    clearAllLogs(): void {},\n    addLog(log: LogData): void {},\n    addException(ex: ExtendedExceptionData): void {},\n  };\n}\n\nexport default LogBox;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.d.ts
index bd6ef02..4654e76 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.d.ts
@@ -1,5 +1,5 @@
-import { StyleProp, TextStyle } from "react-native";
-export declare function Ansi({ text, style, }: {
+import { StyleProp, TextStyle } from 'react-native';
+export declare function Ansi({ text, style }: {
     text: string;
     style: StyleProp<TextStyle>;
 }): JSX.Element;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.d.ts.map
index fa9a3f2..fd1b79d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"AnsiHighlight.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/UI/AnsiHighlight.tsx"],"names":[],"mappings":"AASA,OAAO,EAAE,SAAS,EAAoB,SAAS,EAAQ,MAAM,cAAc,CAAC;AAuB5E,wBAAgB,IAAI,CAAC,EACnB,IAAI,EACJ,KAAK,GACN,EAAE;IACD,IAAI,EAAE,MAAM,CAAC;IACb,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;CAC7B,eAyDA"}
\ No newline at end of file
+{"version":3,"file":"AnsiHighlight.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/UI/AnsiHighlight.tsx"],"names":[],"mappings":"AASA,OAAO,EAAE,SAAS,EAAoB,SAAS,EAAQ,MAAM,cAAc,CAAC;AAuB5E,wBAAgB,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAAE,IAAI,EAAE,MAAM,CAAC;IAAC,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,CAAA;CAAE,eAyDlF"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.js b/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.js
index a00761d..17c946d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.js
@@ -5,7 +5,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.Ansi = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -16,25 +16,25 @@ const react_1 = __importDefault(require("react"));
 const react_native_1 = require("react-native");
 // Afterglow theme from https://iterm2colorschemes.com/
 const COLORS = {
-    "ansi-black": "rgb(27, 27, 27)",
-    "ansi-red": "rgb(187, 86, 83)",
-    "ansi-green": "rgb(144, 157, 98)",
-    "ansi-yellow": "rgb(234, 193, 121)",
-    "ansi-blue": "rgb(125, 169, 199)",
-    "ansi-magenta": "rgb(176, 101, 151)",
-    "ansi-cyan": "rgb(140, 220, 216)",
+    'ansi-black': 'rgb(27, 27, 27)',
+    'ansi-red': 'rgb(187, 86, 83)',
+    'ansi-green': 'rgb(144, 157, 98)',
+    'ansi-yellow': 'rgb(234, 193, 121)',
+    'ansi-blue': 'rgb(125, 169, 199)',
+    'ansi-magenta': 'rgb(176, 101, 151)',
+    'ansi-cyan': 'rgb(140, 220, 216)',
     // Instead of white, use the default color provided to the component
     // 'ansi-white': 'rgb(216, 216, 216)',
-    "ansi-bright-black": "rgb(98, 98, 98)",
-    "ansi-bright-red": "rgb(187, 86, 83)",
-    "ansi-bright-green": "rgb(144, 157, 98)",
-    "ansi-bright-yellow": "rgb(234, 193, 121)",
-    "ansi-bright-blue": "rgb(125, 169, 199)",
-    "ansi-bright-magenta": "rgb(176, 101, 151)",
-    "ansi-bright-cyan": "rgb(140, 220, 216)",
-    "ansi-bright-white": "rgb(247, 247, 247)",
+    'ansi-bright-black': 'rgb(98, 98, 98)',
+    'ansi-bright-red': 'rgb(187, 86, 83)',
+    'ansi-bright-green': 'rgb(144, 157, 98)',
+    'ansi-bright-yellow': 'rgb(234, 193, 121)',
+    'ansi-bright-blue': 'rgb(125, 169, 199)',
+    'ansi-bright-magenta': 'rgb(176, 101, 151)',
+    'ansi-bright-cyan': 'rgb(140, 220, 216)',
+    'ansi-bright-white': 'rgb(247, 247, 247)',
 };
-function Ansi({ text, style, }) {
+function Ansi({ text, style }) {
     let commonWhitespaceLength = Infinity;
     const parsedLines = text.split(/\n/).map((line) => anser_1.default.ansiToJson(line, {
         json: true,
@@ -42,12 +42,11 @@ function Ansi({ text, style, }) {
         use_classes: true,
     }));
     parsedLines.map((lines) => {
-        var _a, _b, _c;
         // The third item on each line includes the whitespace of the source code.
         // We are looking for the least amount of common whitespace to trim all lines.
         // Example: Array [" ", " 96 |", "     text", ...]
-        const match = lines[2] && ((_b = (_a = lines[2]) === null || _a === void 0 ? void 0 : _a.content) === null || _b === void 0 ? void 0 : _b.match(/^ +/));
-        const whitespaceLength = (match && ((_c = match[0]) === null || _c === void 0 ? void 0 : _c.length)) || 0;
+        const match = lines[2] && lines[2]?.content?.match(/^ +/);
+        const whitespaceLength = (match && match[0]?.length) || 0;
         if (whitespaceLength < commonWhitespaceLength) {
             commonWhitespaceLength = whitespaceLength;
         }
@@ -55,7 +54,7 @@ function Ansi({ text, style, }) {
     const getText = (content, key) => {
         if (key === 1) {
             // Remove the vertical bar after line numbers
-            return content.replace(/\| $/, " ");
+            return content.replace(/\| $/, ' ');
         }
         else if (key === 2 && commonWhitespaceLength < Infinity) {
             // Remove common whitespace at the beginning of the line
@@ -80,7 +79,7 @@ function Ansi({ text, style, }) {
 exports.Ansi = Ansi;
 const styles = react_native_1.StyleSheet.create({
     line: {
-        flexDirection: "row",
+        flexDirection: 'row',
     },
 });
 //# sourceMappingURL=AnsiHighlight.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.js.map
index 2dfdec3..b59c3d1 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/AnsiHighlight.js.map
@@ -1 +1 @@
-{"version":3,"file":"AnsiHighlight.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/AnsiHighlight.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Anser from \"anser\";\nimport React from \"react\";\nimport { StyleProp, StyleSheet, Text, TextStyle, View } from \"react-native\";\n\n// Afterglow theme from https://iterm2colorschemes.com/\nconst COLORS: Record<string, string> = {\n  \"ansi-black\": \"rgb(27, 27, 27)\",\n  \"ansi-red\": \"rgb(187, 86, 83)\",\n  \"ansi-green\": \"rgb(144, 157, 98)\",\n  \"ansi-yellow\": \"rgb(234, 193, 121)\",\n  \"ansi-blue\": \"rgb(125, 169, 199)\",\n  \"ansi-magenta\": \"rgb(176, 101, 151)\",\n  \"ansi-cyan\": \"rgb(140, 220, 216)\",\n  // Instead of white, use the default color provided to the component\n  // 'ansi-white': 'rgb(216, 216, 216)',\n  \"ansi-bright-black\": \"rgb(98, 98, 98)\",\n  \"ansi-bright-red\": \"rgb(187, 86, 83)\",\n  \"ansi-bright-green\": \"rgb(144, 157, 98)\",\n  \"ansi-bright-yellow\": \"rgb(234, 193, 121)\",\n  \"ansi-bright-blue\": \"rgb(125, 169, 199)\",\n  \"ansi-bright-magenta\": \"rgb(176, 101, 151)\",\n  \"ansi-bright-cyan\": \"rgb(140, 220, 216)\",\n  \"ansi-bright-white\": \"rgb(247, 247, 247)\",\n};\n\nexport function Ansi({\n  text,\n  style,\n}: {\n  text: string;\n  style: StyleProp<TextStyle>;\n}) {\n  let commonWhitespaceLength = Infinity;\n  const parsedLines = text.split(/\\n/).map((line) =>\n    Anser.ansiToJson(line, {\n      json: true,\n      remove_empty: true,\n      use_classes: true,\n    })\n  );\n\n  parsedLines.map((lines) => {\n    // The third item on each line includes the whitespace of the source code.\n    // We are looking for the least amount of common whitespace to trim all lines.\n    // Example: Array [\" \", \" 96 |\", \"     text\", ...]\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\n    const whitespaceLength = (match && match[0]?.length) || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n\n  const getText = (content: string, key: number) => {\n    if (key === 1) {\n      // Remove the vertical bar after line numbers\n      return content.replace(/\\| $/, \" \");\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      // Remove common whitespace at the beginning of the line\n      return content.substr(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n\n  return (\n    <View>\n      {parsedLines.map((items, i) => (\n        <View style={styles.line} key={i}>\n          {items.map((bundle, key) => {\n            const textStyle =\n              bundle.fg && COLORS[bundle.fg]\n                ? {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                    color: bundle.fg && COLORS[bundle.fg],\n                  }\n                : {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                  };\n            return (\n              <Text style={[style, textStyle]} key={key}>\n                {getText(bundle.content, key)}\n              </Text>\n            );\n          })}\n        </View>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  line: {\n    flexDirection: \"row\",\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"AnsiHighlight.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/AnsiHighlight.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Anser from 'anser';\nimport React from 'react';\nimport { StyleProp, StyleSheet, Text, TextStyle, View } from 'react-native';\n\n// Afterglow theme from https://iterm2colorschemes.com/\nconst COLORS: Record<string, string> = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  // Instead of white, use the default color provided to the component\n  // 'ansi-white': 'rgb(216, 216, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)',\n};\n\nexport function Ansi({ text, style }: { text: string; style: StyleProp<TextStyle> }) {\n  let commonWhitespaceLength = Infinity;\n  const parsedLines = text.split(/\\n/).map((line) =>\n    Anser.ansiToJson(line, {\n      json: true,\n      remove_empty: true,\n      use_classes: true,\n    })\n  );\n\n  parsedLines.map((lines) => {\n    // The third item on each line includes the whitespace of the source code.\n    // We are looking for the least amount of common whitespace to trim all lines.\n    // Example: Array [\" \", \" 96 |\", \"     text\", ...]\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\n    const whitespaceLength = (match && match[0]?.length) || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n\n  const getText = (content: string, key: number) => {\n    if (key === 1) {\n      // Remove the vertical bar after line numbers\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      // Remove common whitespace at the beginning of the line\n      return content.substr(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n\n  return (\n    <View>\n      {parsedLines.map((items, i) => (\n        <View style={styles.line} key={i}>\n          {items.map((bundle, key) => {\n            const textStyle =\n              bundle.fg && COLORS[bundle.fg]\n                ? {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                    color: bundle.fg && COLORS[bundle.fg],\n                  }\n                : {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                  };\n            return (\n              <Text style={[style, textStyle]} key={key}>\n                {getText(bundle.content, key)}\n              </Text>\n            );\n          })}\n        </View>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row',\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.d.ts
index 47c46cb..a5c9b7e 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.d.ts
@@ -1,4 +1,4 @@
-import { GestureResponderEvent, Insets, ViewStyle } from "react-native";
+import { GestureResponderEvent, Insets, ViewStyle } from 'react-native';
 type Props = {
     backgroundColor: {
         default: string;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.d.ts.map
index e9fe468..0aa678f 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxButton.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxButton.tsx"],"names":[],"mappings":"AAQA,OAAO,EACL,qBAAqB,EACrB,MAAM,EAIN,SAAS,EACV,MAAM,cAAc,CAAC;AAItB,KAAK,KAAK,GAAG;IACX,eAAe,EAAE;QACf,OAAO,EAAE,MAAM,CAAC;QAChB,OAAO,EAAE,MAAM,CAAC;KACjB,CAAC;IACF,QAAQ,CAAC,EAAE,GAAG,CAAC;IACf,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,qBAAqB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC;IAC1D,KAAK,CAAC,EAAE,SAAS,CAAC;CACnB,CAAC;AAEF,wBAAgB,YAAY,CAAC,KAAK,EAAE,KAAK,eA2CxC"}
\ No newline at end of file
+{"version":3,"file":"LogBoxButton.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxButton.tsx"],"names":[],"mappings":"AAQA,OAAO,EAAE,qBAAqB,EAAE,MAAM,EAA6B,SAAS,EAAE,MAAM,cAAc,CAAC;AAInG,KAAK,KAAK,GAAG;IACX,eAAe,EAAE;QACf,OAAO,EAAE,MAAM,CAAC;QAChB,OAAO,EAAE,MAAM,CAAC;KACjB,CAAC;IACF,QAAQ,CAAC,EAAE,GAAG,CAAC;IACf,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,qBAAqB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC;IAC1D,KAAK,CAAC,EAAE,SAAS,CAAC;CACnB,CAAC;AAEF,wBAAgB,YAAY,CAAC,KAAK,EAAE,KAAK,eAuCxC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.js b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.js
index eb097fb..6814300 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.js
@@ -25,7 +25,7 @@ var __importStar = (this && this.__importStar) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxButton = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -45,12 +45,10 @@ function LogBoxButton(props) {
     }
     const content = (react_1.default.createElement(react_native_1.View, { style: [
             {
-                backgroundColor: pressed
-                    ? backgroundColor.pressed
-                    : backgroundColor.default,
+                backgroundColor: pressed ? backgroundColor.pressed : backgroundColor.default,
                 ...react_native_1.Platform.select({
                     web: {
-                        cursor: "pointer",
+                        cursor: 'pointer',
                     },
                 }),
             },
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.js.map
index febf116..e6ee296 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxButton.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxButton.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxButton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,+CAAwC;AACxC,+CAOsB;AAEtB,2DAA6C;AAa7C,SAAgB,YAAY,CAAC,KAAY;IACvC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAE9C,IAAI,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;IAC5C,IAAI,CAAC,eAAe,EAAE;QACpB,eAAe,GAAG;YAChB,OAAO,EAAE,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC;YAC7C,OAAO,EAAE,WAAW,CAAC,kBAAkB,CAAC,GAAG,CAAC;SAC7C,CAAC;KACH;IAED,MAAM,OAAO,GAAG,CACd,8BAAC,mBAAI,IACH,KAAK,EAAE;YACL;gBACE,eAAe,EAAE,OAAO;oBACtB,CAAC,CAAC,eAAe,CAAC,OAAO;oBACzB,CAAC,CAAC,eAAe,CAAC,OAAO;gBAC3B,GAAG,uBAAQ,CAAC,MAAM,CAAC;oBACjB,GAAG,EAAE;wBACH,MAAM,EAAE,SAAS;qBAClB;iBACF,CAAC;aACH;YACD,KAAK,CAAC,KAAK;SACZ,IAEA,KAAK,CAAC,QAAQ,CACV,CACR,CAAC;IAEF,OAAO,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAC7B,OAAO,CACR,CAAC,CAAC,CAAC,CACF,8BAAC,wBAAS,IACR,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EACjC,UAAU,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAElC,OAAO,CACE,CACb,CAAC;AACJ,CAAC;AA3CD,oCA2CC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from \"react\";\nimport {\n  GestureResponderEvent,\n  Insets,\n  Platform,\n  Pressable,\n  View,\n  ViewStyle,\n} from \"react-native\";\n\nimport * as LogBoxStyle from \"./LogBoxStyle\";\n\ntype Props = {\n  backgroundColor: {\n    default: string;\n    pressed: string;\n  };\n  children?: any;\n  hitSlop?: Insets;\n  onPress?: ((event: GestureResponderEvent) => void) | null;\n  style?: ViewStyle;\n};\n\nexport function LogBoxButton(props: Props) {\n  const [pressed, setPressed] = useState(false);\n\n  let backgroundColor = props.backgroundColor;\n  if (!backgroundColor) {\n    backgroundColor = {\n      default: LogBoxStyle.getBackgroundColor(0.95),\n      pressed: LogBoxStyle.getBackgroundColor(0.6),\n    };\n  }\n\n  const content = (\n    <View\n      style={[\n        {\n          backgroundColor: pressed\n            ? backgroundColor.pressed\n            : backgroundColor.default,\n          ...Platform.select({\n            web: {\n              cursor: \"pointer\",\n            },\n          }),\n        },\n        props.style,\n      ]}\n    >\n      {props.children}\n    </View>\n  );\n\n  return props.onPress == null ? (\n    content\n  ) : (\n    <Pressable\n      hitSlop={props.hitSlop}\n      onPress={props.onPress}\n      onPressIn={() => setPressed(true)}\n      onPressOut={() => setPressed(false)}\n    >\n      {content}\n    </Pressable>\n  );\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxButton.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxButton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,+CAAwC;AACxC,+CAAmG;AAEnG,2DAA6C;AAa7C,SAAgB,YAAY,CAAC,KAAY;IACvC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAE9C,IAAI,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;IAC5C,IAAI,CAAC,eAAe,EAAE;QACpB,eAAe,GAAG;YAChB,OAAO,EAAE,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC;YAC7C,OAAO,EAAE,WAAW,CAAC,kBAAkB,CAAC,GAAG,CAAC;SAC7C,CAAC;KACH;IAED,MAAM,OAAO,GAAG,CACd,8BAAC,mBAAI,IACH,KAAK,EAAE;YACL;gBACE,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO;gBAC5E,GAAG,uBAAQ,CAAC,MAAM,CAAC;oBACjB,GAAG,EAAE;wBACH,MAAM,EAAE,SAAS;qBAClB;iBACF,CAAC;aACH;YACD,KAAK,CAAC,KAAK;SACZ,IACA,KAAK,CAAC,QAAQ,CACV,CACR,CAAC;IAEF,OAAO,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAC7B,OAAO,CACR,CAAC,CAAC,CAAC,CACF,8BAAC,wBAAS,IACR,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EACjC,UAAU,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAClC,OAAO,CACE,CACb,CAAC;AACJ,CAAC;AAvCD,oCAuCC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from 'react';\nimport { GestureResponderEvent, Insets, Platform, Pressable, View, ViewStyle } from 'react-native';\n\nimport * as LogBoxStyle from './LogBoxStyle';\n\ntype Props = {\n  backgroundColor: {\n    default: string;\n    pressed: string;\n  };\n  children?: any;\n  hitSlop?: Insets;\n  onPress?: ((event: GestureResponderEvent) => void) | null;\n  style?: ViewStyle;\n};\n\nexport function LogBoxButton(props: Props) {\n  const [pressed, setPressed] = useState(false);\n\n  let backgroundColor = props.backgroundColor;\n  if (!backgroundColor) {\n    backgroundColor = {\n      default: LogBoxStyle.getBackgroundColor(0.95),\n      pressed: LogBoxStyle.getBackgroundColor(0.6),\n    };\n  }\n\n  const content = (\n    <View\n      style={[\n        {\n          backgroundColor: pressed ? backgroundColor.pressed : backgroundColor.default,\n          ...Platform.select({\n            web: {\n              cursor: 'pointer',\n            },\n          }),\n        },\n        props.style,\n      ]}>\n      {props.children}\n    </View>\n  );\n\n  return props.onPress == null ? (\n    content\n  ) : (\n    <Pressable\n      hitSlop={props.hitSlop}\n      onPress={props.onPress}\n      onPressIn={() => setPressed(true)}\n      onPressOut={() => setPressed(false)}>\n      {content}\n    </Pressable>\n  );\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.d.ts
index 7da180e..0740399 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.d.ts
@@ -1,5 +1,5 @@
-import { StyleProp, TextStyle } from "react-native";
-import type { Message } from "../Data/parseLogBoxLog";
+import { StyleProp, TextStyle } from 'react-native';
+import type { Message } from '../Data/parseLogBoxLog';
 type Props = {
     message: Message;
     style: StyleProp<TextStyle>;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.d.ts.map
index 60905e4..643e2e2 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxMessage.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxMessage.tsx"],"names":[],"mappings":"AAQA,OAAO,EAAE,SAAS,EAAQ,SAAS,EAAE,MAAM,cAAc,CAAC;AAE1D,OAAO,KAAK,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAEtD,KAAK,KAAK,GAAG;IACX,OAAO,EAAE,OAAO,CAAC;IACjB,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;IAC5B,SAAS,CAAC,EAAE,OAAO,CAAC;IACpB,SAAS,CAAC,EAAE,MAAM,CAAC;CACpB,CAAC;AAKF,wBAAgB,aAAa,CAAC,KAAK,EAAE,KAAK,GAAG,GAAG,CAAC,OAAO,CA4DvD"}
\ No newline at end of file
+{"version":3,"file":"LogBoxMessage.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxMessage.tsx"],"names":[],"mappings":"AAQA,OAAO,EAAE,SAAS,EAAQ,SAAS,EAAE,MAAM,cAAc,CAAC;AAE1D,OAAO,KAAK,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAEtD,KAAK,KAAK,GAAG;IACX,OAAO,EAAE,OAAO,CAAC;IACjB,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;IAC5B,SAAS,CAAC,EAAE,OAAO,CAAC;IACpB,SAAS,CAAC,EAAE,MAAM,CAAC;CACpB,CAAC;AAKF,wBAAgB,aAAa,CAAC,KAAK,EAAE,KAAK,GAAG,GAAG,CAAC,OAAO,CAkDvD"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.js b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.js
index 374c4bf..c3ba34b 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.js
@@ -5,7 +5,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxMessage = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -13,7 +13,7 @@ exports.LogBoxMessage = void 0;
  */
 const react_1 = __importDefault(require("react"));
 const react_native_1 = require("react-native");
-const cleanContent = (content) => content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, "");
+const cleanContent = (content) => content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');
 function LogBoxMessage(props) {
     const { content, substitutions } = props.message;
     if (props.plaintext === true) {
@@ -40,12 +40,12 @@ function LogBoxMessage(props) {
             createUnderLength(key, prevPart);
         }
         const substititionPart = content.substr(substitution.offset, substitution.length);
-        createUnderLength(key + ".5", substititionPart, substitutionStyle);
+        createUnderLength(key + '.5', substititionPart, substitutionStyle);
         return substitution.offset + substitution.length;
     }, 0);
     if (lastOffset < content.length) {
         const lastPart = content.substr(lastOffset);
-        createUnderLength("-1", lastPart);
+        createUnderLength('-1', lastPart);
     }
     return react_1.default.createElement(react_1.default.Fragment, null, elements);
 }
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.js.map
index 9d60d89..b41285c 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxMessage.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxMessage.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxMessage.tsx"],"names":[],"mappings":";;;;;;AAAA;;;;;;GAMG;AACH,kDAA0B;AAC1B,+CAA0D;AAW1D,MAAM,YAAY,GAAG,CAAC,OAAe,EAAE,EAAE,CACvC,OAAO,CAAC,OAAO,CAAC,mDAAmD,EAAE,EAAE,CAAC,CAAC;AAE3E,SAAgB,aAAa,CAAC,KAAY;IACxC,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,GAAY,KAAK,CAAC,OAAO,CAAC;IAE1D,IAAI,KAAK,CAAC,SAAS,KAAK,IAAI,EAAE;QAC5B,OAAO,8BAAC,mBAAI,QAAE,YAAY,CAAC,OAAO,CAAC,CAAQ,CAAC;KAC7C;IAED,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;IACvE,MAAM,iBAAiB,GAAyB,KAAK,CAAC,KAAK,CAAC;IAC5D,MAAM,QAAQ,GAAkB,EAAE,CAAC;IACnC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,MAAM,iBAAiB,GAAG,CACxB,GAAkB,EAClB,OAAe,EACf,KAA4B,EAC5B,EAAE;QACF,IAAI,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;QAEzC,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,EAAE;YAC3B,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;SAChE;QAED,IAAI,MAAM,GAAG,SAAS,EAAE;YACtB,QAAQ,CAAC,IAAI,CACX,8BAAC,mBAAI,IAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,IACzB,YAAY,CACR,CACR,CAAC;SACH;QAED,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC;IAChC,CAAC,CAAC;IAEF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE;QAC1E,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,YAAY,CAAC,MAAM,GAAG,UAAU,EAAE;YACpC,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAC7B,UAAU,EACV,YAAY,CAAC,MAAM,GAAG,UAAU,CACjC,CAAC;YAEF,iBAAiB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SAClC;QAED,MAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CACrC,YAAY,CAAC,MAAM,EACnB,YAAY,CAAC,MAAM,CACpB,CAAC;QAEF,iBAAiB,CAAC,GAAG,GAAG,IAAI,EAAE,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;QACnE,OAAO,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5C,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACnC;IAED,OAAO,8DAAG,QAAQ,CAAI,CAAC;AACzB,CAAC;AA5DD,sCA4DC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport { StyleProp, Text, TextStyle } from \"react-native\";\n\nimport type { Message } from \"../Data/parseLogBoxLog\";\n\ntype Props = {\n  message: Message;\n  style: StyleProp<TextStyle>;\n  plaintext?: boolean;\n  maxLength?: number;\n};\n\nconst cleanContent = (content: string) =>\n  content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, \"\");\n\nexport function LogBoxMessage(props: Props): JSX.Element {\n  const { content, substitutions }: Message = props.message;\n\n  if (props.plaintext === true) {\n    return <Text>{cleanContent(content)}</Text>;\n  }\n\n  const maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  const substitutionStyle: StyleProp<TextStyle> = props.style;\n  const elements: JSX.Element[] = [];\n  let length = 0;\n  const createUnderLength = (\n    key: string | \"-1\",\n    message: string,\n    style?: StyleProp<TextStyle>\n  ) => {\n    let cleanMessage = cleanContent(message);\n\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n\n    if (length < maxLength) {\n      elements.push(\n        <Text key={key} style={style}>\n          {cleanMessage}\n        </Text>\n      );\n    }\n\n    length += cleanMessage.length;\n  };\n\n  const lastOffset = substitutions.reduce((prevOffset, substitution, index) => {\n    const key = String(index);\n\n    if (substitution.offset > prevOffset) {\n      const prevPart = content.substr(\n        prevOffset,\n        substitution.offset - prevOffset\n      );\n\n      createUnderLength(key, prevPart);\n    }\n\n    const substititionPart = content.substr(\n      substitution.offset,\n      substitution.length\n    );\n\n    createUnderLength(key + \".5\", substititionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n\n  if (lastOffset < content.length) {\n    const lastPart = content.substr(lastOffset);\n    createUnderLength(\"-1\", lastPart);\n  }\n\n  return <>{elements}</>;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxMessage.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxMessage.tsx"],"names":[],"mappings":";;;;;;AAAA;;;;;;GAMG;AACH,kDAA0B;AAC1B,+CAA0D;AAW1D,MAAM,YAAY,GAAG,CAAC,OAAe,EAAE,EAAE,CACvC,OAAO,CAAC,OAAO,CAAC,mDAAmD,EAAE,EAAE,CAAC,CAAC;AAE3E,SAAgB,aAAa,CAAC,KAAY;IACxC,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,GAAY,KAAK,CAAC,OAAO,CAAC;IAE1D,IAAI,KAAK,CAAC,SAAS,KAAK,IAAI,EAAE;QAC5B,OAAO,8BAAC,mBAAI,QAAE,YAAY,CAAC,OAAO,CAAC,CAAQ,CAAC;KAC7C;IAED,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;IACvE,MAAM,iBAAiB,GAAyB,KAAK,CAAC,KAAK,CAAC;IAC5D,MAAM,QAAQ,GAAkB,EAAE,CAAC;IACnC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,MAAM,iBAAiB,GAAG,CAAC,GAAkB,EAAE,OAAe,EAAE,KAA4B,EAAE,EAAE;QAC9F,IAAI,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;QAEzC,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,EAAE;YAC3B,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;SAChE;QAED,IAAI,MAAM,GAAG,SAAS,EAAE;YACtB,QAAQ,CAAC,IAAI,CACX,8BAAC,mBAAI,IAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,IACzB,YAAY,CACR,CACR,CAAC;SACH;QAED,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC;IAChC,CAAC,CAAC;IAEF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE;QAC1E,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,YAAY,CAAC,MAAM,GAAG,UAAU,EAAE;YACpC,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;YAE9E,iBAAiB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SAClC;QAED,MAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;QAElF,iBAAiB,CAAC,GAAG,GAAG,IAAI,EAAE,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;QACnE,OAAO,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE;QAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5C,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACnC;IAED,OAAO,8DAAG,QAAQ,CAAI,CAAC;AACzB,CAAC;AAlDD,sCAkDC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { StyleProp, Text, TextStyle } from 'react-native';\n\nimport type { Message } from '../Data/parseLogBoxLog';\n\ntype Props = {\n  message: Message;\n  style: StyleProp<TextStyle>;\n  plaintext?: boolean;\n  maxLength?: number;\n};\n\nconst cleanContent = (content: string) =>\n  content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');\n\nexport function LogBoxMessage(props: Props): JSX.Element {\n  const { content, substitutions }: Message = props.message;\n\n  if (props.plaintext === true) {\n    return <Text>{cleanContent(content)}</Text>;\n  }\n\n  const maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  const substitutionStyle: StyleProp<TextStyle> = props.style;\n  const elements: JSX.Element[] = [];\n  let length = 0;\n  const createUnderLength = (key: string | '-1', message: string, style?: StyleProp<TextStyle>) => {\n    let cleanMessage = cleanContent(message);\n\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n\n    if (length < maxLength) {\n      elements.push(\n        <Text key={key} style={style}>\n          {cleanMessage}\n        </Text>\n      );\n    }\n\n    length += cleanMessage.length;\n  };\n\n  const lastOffset = substitutions.reduce((prevOffset, substitution, index) => {\n    const key = String(index);\n\n    if (substitution.offset > prevOffset) {\n      const prevPart = content.substr(prevOffset, substitution.offset - prevOffset);\n\n      createUnderLength(key, prevPart);\n    }\n\n    const substititionPart = content.substr(substitution.offset, substitution.length);\n\n    createUnderLength(key + '.5', substititionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n\n  if (lastOffset < content.length) {\n    const lastPart = content.substr(lastOffset);\n    createUnderLength('-1', lastPart);\n  }\n\n  return <>{elements}</>;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.d.ts
index b348986..e68d08c 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.d.ts
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.js b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.js
index c4f3210..90dd4cc 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.js.map
index ee026e3..45f74cc 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/LogBoxStyle.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxStyle.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxStyle.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;AAEH,SAAgB,kBAAkB,CAAC,OAAgB;IACjD,OAAO,iBAAiB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;IACzD,+DAA+D;AACjE,CAAC;AAHD,gDAGC;AAED,SAAgB,uBAAuB,CAAC,OAAgB;IACtD,OAAO,oBAAoB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC9D,CAAC;AAFD,0DAEC;AAED,SAAgB,sBAAsB,CAAC,OAAgB;IACrD,OAAO,oBAAoB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC9D,CAAC;AAFD,wDAEC;AAED,SAAgB,eAAe,CAAC,OAAgB;IAC9C,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,0CAEC;AAED,SAAgB,mBAAmB,CAAC,OAAgB;IAClD,OAAO,qBAAqB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC/D,CAAC;AAFD,kDAEC;AAED,SAAgB,aAAa,CAAC,OAAgB;IAC5C,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,sCAEC;AAED,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,OAAO,qBAAqB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC/D,CAAC;AAFD,8CAEC;AAED,SAAgB,aAAa,CAAC,OAAgB;IAC5C,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,sCAEC;AAED,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,OAAO,qBAAqB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC/D,CAAC;AAFD,8CAEC;AAED,SAAgB,WAAW,CAAC,OAAgB;IAC1C,OAAO,uBAAuB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AACjE,CAAC;AAFD,kCAEC;AAED,SAAgB,wBAAwB,CAAC,OAAgB;IACvD,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,4DAEC;AAED,SAAgB,eAAe,CAAC,OAAgB;IAC9C,OAAO,uBAAuB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AACjE,CAAC;AAFD,0CAEC;AAED,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,8CAEC;AAED,SAAgB,YAAY,CAAC,OAAgB;IAC3C,OAAO,uBAAuB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AACjE,CAAC;AAFD,oCAEC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function getBackgroundColor(opacity?: number): string {\n  return `rgba(0, 0, 0, ${opacity == null ? 1 : opacity})`;\n  // return `rgba(51, 51, 51, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getBackgroundLightColor(opacity?: number): string {\n  return `rgba(69, 69, 69, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getBackgroundDarkColor(opacity?: number): string {\n  return `rgba(34, 34, 34, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getWarningColor(opacity?: number): string {\n  return `rgba(250, 186, 48, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getWarningDarkColor(opacity?: number): string {\n  return `rgba(224, 167, 8, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getFatalColor(opacity?: number): string {\n  return `rgba(243, 83, 105, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getFatalDarkColor(opacity?: number): string {\n  return `rgba(208, 75, 95, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getErrorColor(opacity?: number): string {\n  return `rgba(243, 83, 105, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getErrorDarkColor(opacity?: number): string {\n  return `rgba(208, 75, 95, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getLogColor(opacity?: number): string {\n  return `rgba(119, 119, 119, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getWarningHighlightColor(opacity?: number): string {\n  return `rgba(252, 176, 29, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getDividerColor(opacity?: number): string {\n  return `rgba(255, 255, 255, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getHighlightColor(opacity?: number): string {\n  return `rgba(252, 176, 29, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getTextColor(opacity?: number): string {\n  return `rgba(255, 255, 255, ${opacity == null ? 1 : opacity})`;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxStyle.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/LogBoxStyle.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;AAEH,SAAgB,kBAAkB,CAAC,OAAgB;IACjD,OAAO,iBAAiB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;IACzD,+DAA+D;AACjE,CAAC;AAHD,gDAGC;AAED,SAAgB,uBAAuB,CAAC,OAAgB;IACtD,OAAO,oBAAoB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC9D,CAAC;AAFD,0DAEC;AAED,SAAgB,sBAAsB,CAAC,OAAgB;IACrD,OAAO,oBAAoB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC9D,CAAC;AAFD,wDAEC;AAED,SAAgB,eAAe,CAAC,OAAgB;IAC9C,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,0CAEC;AAED,SAAgB,mBAAmB,CAAC,OAAgB;IAClD,OAAO,qBAAqB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC/D,CAAC;AAFD,kDAEC;AAED,SAAgB,aAAa,CAAC,OAAgB;IAC5C,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,sCAEC;AAED,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,OAAO,qBAAqB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC/D,CAAC;AAFD,8CAEC;AAED,SAAgB,aAAa,CAAC,OAAgB;IAC5C,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,sCAEC;AAED,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,OAAO,qBAAqB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAC/D,CAAC;AAFD,8CAEC;AAED,SAAgB,WAAW,CAAC,OAAgB;IAC1C,OAAO,uBAAuB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AACjE,CAAC;AAFD,kCAEC;AAED,SAAgB,wBAAwB,CAAC,OAAgB;IACvD,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,4DAEC;AAED,SAAgB,eAAe,CAAC,OAAgB;IAC9C,OAAO,uBAAuB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AACjE,CAAC;AAFD,0CAEC;AAED,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,OAAO,sBAAsB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AAChE,CAAC;AAFD,8CAEC;AAED,SAAgB,YAAY,CAAC,OAAgB;IAC3C,OAAO,uBAAuB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC;AACjE,CAAC;AAFD,oCAEC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function getBackgroundColor(opacity?: number): string {\n  return `rgba(0, 0, 0, ${opacity == null ? 1 : opacity})`;\n  // return `rgba(51, 51, 51, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getBackgroundLightColor(opacity?: number): string {\n  return `rgba(69, 69, 69, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getBackgroundDarkColor(opacity?: number): string {\n  return `rgba(34, 34, 34, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getWarningColor(opacity?: number): string {\n  return `rgba(250, 186, 48, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getWarningDarkColor(opacity?: number): string {\n  return `rgba(224, 167, 8, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getFatalColor(opacity?: number): string {\n  return `rgba(243, 83, 105, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getFatalDarkColor(opacity?: number): string {\n  return `rgba(208, 75, 95, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getErrorColor(opacity?: number): string {\n  return `rgba(243, 83, 105, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getErrorDarkColor(opacity?: number): string {\n  return `rgba(208, 75, 95, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getLogColor(opacity?: number): string {\n  return `rgba(119, 119, 119, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getWarningHighlightColor(opacity?: number): string {\n  return `rgba(252, 176, 29, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getDividerColor(opacity?: number): string {\n  return `rgba(255, 255, 255, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getHighlightColor(opacity?: number): string {\n  return `rgba(252, 176, 29, ${opacity == null ? 1 : opacity})`;\n}\n\nexport function getTextColor(opacity?: number): string {\n  return `rgba(255, 255, 255, ${opacity == null ? 1 : opacity})`;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/constants.js b/node_modules/@expo/metro-runtime/build/error-overlay/UI/constants.js
index 42663ff..4aee28b 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/constants.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/constants.js
@@ -3,8 +3,8 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.CODE_FONT = void 0;
 const react_native_1 = require("react-native");
 exports.CODE_FONT = react_native_1.Platform.select({
-    default: "Courier",
-    ios: "Courier New",
-    android: "monospace",
+    default: 'Courier',
+    ios: 'Courier New',
+    android: 'monospace',
 });
 //# sourceMappingURL=constants.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/UI/constants.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/UI/constants.js.map
index 534f51f..5cdd98a 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/UI/constants.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/UI/constants.js.map
@@ -1 +1 @@
-{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/constants.ts"],"names":[],"mappings":";;;AAAA,+CAAwC;AAE3B,QAAA,SAAS,GAAG,uBAAQ,CAAC,MAAM,CAAC;IACvC,OAAO,EAAE,SAAS;IAClB,GAAG,EAAE,aAAa;IAClB,OAAO,EAAE,WAAW;CACrB,CAAC,CAAC","sourcesContent":["import { Platform } from \"react-native\";\n\nexport const CODE_FONT = Platform.select({\n  default: \"Courier\",\n  ios: \"Courier New\",\n  android: \"monospace\",\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../src/error-overlay/UI/constants.ts"],"names":[],"mappings":";;;AAAA,+CAAwC;AAE3B,QAAA,SAAS,GAAG,uBAAQ,CAAC,MAAM,CAAC;IACvC,OAAO,EAAE,SAAS;IAClB,GAAG,EAAE,aAAa;IAClB,OAAO,EAAE,WAAW;CACrB,CAAC,CAAC","sourcesContent":["import { Platform } from 'react-native';\n\nexport const CODE_FONT = Platform.select({\n  default: 'Courier',\n  ios: 'Courier New',\n  android: 'monospace',\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.d.ts
index fa4d36f..1626fd4 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.d.ts
@@ -1,4 +1,4 @@
-import type { StackFrame } from "stacktrace-parser";
+import type { StackFrame } from 'stacktrace-parser';
 export type MetroStackFrame = StackFrame & {
     collapse?: boolean;
 };
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.d.ts.map
index b028955..eb54ef3 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"formatProjectFilePath.d.ts","sourceRoot":"","sources":["../../src/error-overlay/formatProjectFilePath.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAEpD,MAAM,MAAM,eAAe,GAAG,UAAU,GAAG;IAAE,QAAQ,CAAC,EAAE,OAAO,CAAA;CAAE,CAAC;AAElE,wBAAgB,qBAAqB,CACnC,WAAW,EAAE,MAAM,EACnB,IAAI,CAAC,EAAE,MAAM,GAAG,IAAI,GACnB,MAAM,CASR;AAeD,wBAAgB,yBAAyB,CACvC,WAAW,EAAE,MAAM,EACnB,KAAK,EAAE,eAAe,UAYvB"}
\ No newline at end of file
+{"version":3,"file":"formatProjectFilePath.d.ts","sourceRoot":"","sources":["../../src/error-overlay/formatProjectFilePath.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAEpD,MAAM,MAAM,eAAe,GAAG,UAAU,GAAG;IAAE,QAAQ,CAAC,EAAE,OAAO,CAAA;CAAE,CAAC;AAElE,wBAAgB,qBAAqB,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,MAAM,CASvF;AAeD,wBAAgB,yBAAyB,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,eAAe,UASpF"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.js b/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.js
index 79dc31c..61811da 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.js
@@ -3,12 +3,12 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.getStackFormattedLocation = exports.formatProjectFilePath = void 0;
 function formatProjectFilePath(projectRoot, file) {
     if (file == null) {
-        return "<unknown>";
+        return '<unknown>';
     }
-    return pathRelativeToPath(file.replace(/\\/g, "/"), projectRoot.replace(/\\/g, "/")).replace(/\?.*$/, "");
+    return pathRelativeToPath(file.replace(/\\/g, '/'), projectRoot.replace(/\\/g, '/')).replace(/\?.*$/, '');
 }
 exports.formatProjectFilePath = formatProjectFilePath;
-function pathRelativeToPath(path, relativeTo, sep = "/") {
+function pathRelativeToPath(path, relativeTo, sep = '/') {
     const relativeToParts = relativeTo.split(sep);
     const pathParts = path.split(sep);
     let i = 0;
@@ -24,10 +24,8 @@ function getStackFormattedLocation(projectRoot, frame) {
     const column = frame.column != null && parseInt(String(frame.column), 10);
     const location = formatProjectFilePath(projectRoot, frame.file) +
         (frame.lineNumber != null
-            ? ":" +
-                frame.lineNumber +
-                (column && !isNaN(column) ? ":" + (column + 1) : "")
-            : "");
+            ? ':' + frame.lineNumber + (column && !isNaN(column) ? ':' + (column + 1) : '')
+            : '');
     return location;
 }
 exports.getStackFormattedLocation = getStackFormattedLocation;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.js.map
index 1ac1c13..828510c 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/formatProjectFilePath.js.map
@@ -1 +1 @@
-{"version":3,"file":"formatProjectFilePath.js","sourceRoot":"","sources":["../../src/error-overlay/formatProjectFilePath.ts"],"names":[],"mappings":";;;AAIA,SAAgB,qBAAqB,CACnC,WAAmB,EACnB,IAAoB;IAEpB,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,OAAO,WAAW,CAAC;KACpB;IAED,OAAO,kBAAkB,CACvB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,EACxB,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAChC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AACzB,CAAC;AAZD,sDAYC;AAED,SAAS,kBAAkB,CAAC,IAAY,EAAE,UAAkB,EAAE,GAAG,GAAG,GAAG;IACrE,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO,CAAC,GAAG,eAAe,CAAC,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE;QACzD,IAAI,eAAe,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE;YACvC,MAAM;SACP;QACD,CAAC,EAAE,CAAC;KACL;IACD,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,CAAC;AAED,SAAgB,yBAAyB,CACvC,WAAmB,EACnB,KAAsB;IAEtB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1E,MAAM,QAAQ,GACZ,qBAAqB,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC;QAC9C,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI;YACvB,CAAC,CAAC,GAAG;gBACH,KAAK,CAAC,UAAU;gBAChB,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,CAAC,CAAC,EAAE,CAAC,CAAC;IAEV,OAAO,QAAQ,CAAC;AAClB,CAAC;AAdD,8DAcC","sourcesContent":["import type { StackFrame } from \"stacktrace-parser\";\n\nexport type MetroStackFrame = StackFrame & { collapse?: boolean };\n\nexport function formatProjectFilePath(\n  projectRoot: string,\n  file?: string | null\n): string {\n  if (file == null) {\n    return \"<unknown>\";\n  }\n\n  return pathRelativeToPath(\n    file.replace(/\\\\/g, \"/\"),\n    projectRoot.replace(/\\\\/g, \"/\")\n  ).replace(/\\?.*$/, \"\");\n}\n\nfunction pathRelativeToPath(path: string, relativeTo: string, sep = \"/\") {\n  const relativeToParts = relativeTo.split(sep);\n  const pathParts = path.split(sep);\n  let i = 0;\n  while (i < relativeToParts.length && i < pathParts.length) {\n    if (relativeToParts[i] !== pathParts[i]) {\n      break;\n    }\n    i++;\n  }\n  return pathParts.slice(i).join(sep);\n}\n\nexport function getStackFormattedLocation(\n  projectRoot: string,\n  frame: MetroStackFrame\n) {\n  const column = frame.column != null && parseInt(String(frame.column), 10);\n  const location =\n    formatProjectFilePath(projectRoot, frame.file) +\n    (frame.lineNumber != null\n      ? \":\" +\n        frame.lineNumber +\n        (column && !isNaN(column) ? \":\" + (column + 1) : \"\")\n      : \"\");\n\n  return location;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"formatProjectFilePath.js","sourceRoot":"","sources":["../../src/error-overlay/formatProjectFilePath.ts"],"names":[],"mappings":";;;AAIA,SAAgB,qBAAqB,CAAC,WAAmB,EAAE,IAAoB;IAC7E,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,OAAO,WAAW,CAAC;KACpB;IAED,OAAO,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,CAC1F,OAAO,EACP,EAAE,CACH,CAAC;AACJ,CAAC;AATD,sDASC;AAED,SAAS,kBAAkB,CAAC,IAAY,EAAE,UAAkB,EAAE,GAAG,GAAG,GAAG;IACrE,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO,CAAC,GAAG,eAAe,CAAC,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE;QACzD,IAAI,eAAe,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE;YACvC,MAAM;SACP;QACD,CAAC,EAAE,CAAC;KACL;IACD,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,CAAC;AAED,SAAgB,yBAAyB,CAAC,WAAmB,EAAE,KAAsB;IACnF,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1E,MAAM,QAAQ,GACZ,qBAAqB,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC;QAC9C,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI;YACvB,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,UAAU,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/E,CAAC,CAAC,EAAE,CAAC,CAAC;IAEV,OAAO,QAAQ,CAAC;AAClB,CAAC;AATD,8DASC","sourcesContent":["import type { StackFrame } from 'stacktrace-parser';\n\nexport type MetroStackFrame = StackFrame & { collapse?: boolean };\n\nexport function formatProjectFilePath(projectRoot: string, file?: string | null): string {\n  if (file == null) {\n    return '<unknown>';\n  }\n\n  return pathRelativeToPath(file.replace(/\\\\/g, '/'), projectRoot.replace(/\\\\/g, '/')).replace(\n    /\\?.*$/,\n    ''\n  );\n}\n\nfunction pathRelativeToPath(path: string, relativeTo: string, sep = '/') {\n  const relativeToParts = relativeTo.split(sep);\n  const pathParts = path.split(sep);\n  let i = 0;\n  while (i < relativeToParts.length && i < pathParts.length) {\n    if (relativeToParts[i] !== pathParts[i]) {\n      break;\n    }\n    i++;\n  }\n  return pathParts.slice(i).join(sep);\n}\n\nexport function getStackFormattedLocation(projectRoot: string, frame: MetroStackFrame) {\n  const column = frame.column != null && parseInt(String(frame.column), 10);\n  const location =\n    formatProjectFilePath(projectRoot, frame.file) +\n    (frame.lineNumber != null\n      ? ':' + frame.lineNumber + (column && !isNaN(column) ? ':' + (column + 1) : '')\n      : '');\n\n  return location;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/index.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/index.d.ts
index 15e2ebd..0bf543a 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/index.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/index.d.ts
@@ -1,3 +1,3 @@
-import React from "react";
+import React from 'react';
 export declare function withErrorOverlay(Comp: React.ComponentType<any>): React.ComponentType<any> | ((props: any) => JSX.Element);
 //# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/index.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/index.d.ts.map
index cb0eeda..81fc1cc 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/index.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/error-overlay/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAoB1B,wBAAgB,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,uCAIzB,GAAG,kBAOxC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/error-overlay/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAqB1B,wBAAgB,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,uCAIzB,GAAG,kBAOxC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/index.js b/node_modules/@expo/metro-runtime/build/error-overlay/index.js
index f035fe2..f548b77 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/index.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/index.js
@@ -8,17 +8,18 @@ const react_1 = __importDefault(require("react"));
 const react_native_1 = require("react-native");
 const ErrorToastContainer_1 = __importDefault(require("./toast/ErrorToastContainer"));
 if (!global.setImmediate) {
-    // @ts-expect-error: setImmediate is not defined in the global scope
     global.setImmediate = function (fn) {
         return setTimeout(fn, 0);
     };
 }
-if (process.env.NODE_ENV === "development" && react_native_1.Platform.OS === "web") {
-    // Stack traces are big with React Navigation
-    require("./LogBox").install();
+if (process.env.NODE_ENV === 'development') {
+    if (react_native_1.Platform.OS === 'web') {
+        // Stack traces are big with React Navigation
+        require('./LogBox').default.install();
+    }
 }
 function withErrorOverlay(Comp) {
-    if (process.env.NODE_ENV === "production") {
+    if (process.env.NODE_ENV === 'production') {
         return Comp;
     }
     return function ErrorOverlay(props) {
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/index.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/index.js.map
index 2176539..40db30d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/error-overlay/index.tsx"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAC1B,+CAAwC;AAExC,sFAA8D;AAI9D,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;IACxB,oEAAoE;IACpE,MAAM,CAAC,YAAY,GAAG,UAAU,EAAE;QAChC,OAAO,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;CACH;AAED,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,uBAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;IACnE,6CAA6C;IAE7C,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;CAC/B;AAED,SAAgB,gBAAgB,CAAC,IAA8B;IAC7D,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,OAAO,IAAI,CAAC;KACb;IACD,OAAO,SAAS,YAAY,CAAC,KAAU;QACrC,OAAO,CACL,8BAAC,6BAAmB;YAClB,8BAAC,IAAI,OAAK,KAAK,GAAI,CACC,CACvB,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAXD,4CAWC","sourcesContent":["import React from \"react\";\nimport { Platform } from \"react-native\";\n\nimport ErrorToastContainer from \"./toast/ErrorToastContainer\";\n\ndeclare const process: any;\n\nif (!global.setImmediate) {\n  // @ts-expect-error: setImmediate is not defined in the global scope\n  global.setImmediate = function (fn) {\n    return setTimeout(fn, 0);\n  };\n}\n\nif (process.env.NODE_ENV === \"development\" && Platform.OS === \"web\") {\n  // Stack traces are big with React Navigation\n\n  require(\"./LogBox\").install();\n}\n\nexport function withErrorOverlay(Comp: React.ComponentType<any>) {\n  if (process.env.NODE_ENV === \"production\") {\n    return Comp;\n  }\n  return function ErrorOverlay(props: any) {\n    return (\n      <ErrorToastContainer>\n        <Comp {...props} />\n      </ErrorToastContainer>\n    );\n  };\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/error-overlay/index.tsx"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAC1B,+CAAwC;AAExC,sFAA8D;AAI9D,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;IACxB,MAAM,CAAC,YAAY,GAAG,UAAU,EAAE;QAChC,OAAO,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;CACH;AAED,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE;IAC1C,IAAI,uBAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;QACzB,6CAA6C;QAE7C,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;KACvC;CACF;AAED,SAAgB,gBAAgB,CAAC,IAA8B;IAC7D,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,OAAO,IAAI,CAAC;KACb;IACD,OAAO,SAAS,YAAY,CAAC,KAAU;QACrC,OAAO,CACL,8BAAC,6BAAmB;YAClB,8BAAC,IAAI,OAAK,KAAK,GAAI,CACC,CACvB,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAXD,4CAWC","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\n\nimport ErrorToastContainer from './toast/ErrorToastContainer';\n\ndeclare const process: any;\n\nif (!global.setImmediate) {\n  global.setImmediate = function (fn) {\n    return setTimeout(fn, 0);\n  };\n}\n\nif (process.env.NODE_ENV === 'development') {\n  if (Platform.OS === 'web') {\n    // Stack traces are big with React Navigation\n\n    require('./LogBox').default.install();\n  }\n}\n\nexport function withErrorOverlay(Comp: React.ComponentType<any>) {\n  if (process.env.NODE_ENV === 'production') {\n    return Comp;\n  }\n  return function ErrorOverlay(props: any) {\n    return (\n      <ErrorToastContainer>\n        <Comp {...props} />\n      </ErrorToastContainer>\n    );\n  };\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.d.ts
index 9266c73..f8d6f30 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.d.ts
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.d.ts.map
index bc16f54..af9971c 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/ExceptionsManager/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,KAAK,aAAa,GAAG,GAAG,CAAC;AAEzB,cAAM,cAAe,SAAQ,KAAK;IAChC,IAAI,EAAE,MAAM,CAAM;CACnB;AAOD,iBAAS,cAAc,CAAC,CAAC,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO;;;;;;;;;;;;;;;EAoCzD;AAED;;GAEG;AACH,iBAAS,eAAe,CAAC,CAAC,EAAE,GAAG,QAa9B;AAED,QAAA,MAAM,UAAU;;;;CAIf,CAAC;AAGF,eAAe,UAAU,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/ExceptionsManager/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,KAAK,aAAa,GAAG,GAAG,CAAC;AAEzB,cAAM,cAAe,SAAQ,KAAK;IAChC,IAAI,EAAE,MAAM,CAAM;CACnB;AAOD,iBAAS,cAAc,CAAC,CAAC,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO;;;;;;;;;;;;;;;EAkCzD;AAED;;GAEG;AACH,iBAAS,eAAe,CAAC,CAAC,EAAE,GAAG,QAa9B;AAED,QAAA,MAAM,UAAU;;;;CAIf,CAAC;AAEF,eAAe,UAAU,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.js
index b61a5a4..c8d44f5 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -12,34 +12,30 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 const parseErrorStack_1 = __importDefault(require("../parseErrorStack"));
 class SyntheticError extends Error {
-    constructor() {
-        super(...arguments);
-        this.name = "";
-    }
+    name = '';
 }
 /**
  * Handles the developer-visible aspect of errors and exceptions
  */
 let exceptionID = 0;
 function parseException(e, isFatal) {
-    const stack = (0, parseErrorStack_1.default)(e === null || e === void 0 ? void 0 : e.stack);
+    const stack = (0, parseErrorStack_1.default)(e?.stack);
     const currentExceptionID = ++exceptionID;
-    const originalMessage = e.message || "";
+    const originalMessage = e.message || '';
     let message = originalMessage;
     if (e.componentStack != null) {
         message += `\n\nThis error is located at:${e.componentStack}`;
     }
-    const namePrefix = e.name == null || e.name === "" ? "" : `${e.name}: `;
+    const namePrefix = e.name == null || e.name === '' ? '' : `${e.name}: `;
     if (!message.startsWith(namePrefix)) {
         message = namePrefix + message;
     }
-    message =
-        e.jsEngine == null ? message : `${message}, js engine: ${e.jsEngine}`;
+    message = e.jsEngine == null ? message : `${message}, js engine: ${e.jsEngine}`;
     const data = {
         message,
         originalMessage: message === originalMessage ? null : originalMessage,
-        name: e.name == null || e.name === "" ? null : e.name,
-        componentStack: typeof e.componentStack === "string" ? e.componentStack : null,
+        name: e.name == null || e.name === '' ? null : e.name,
+        componentStack: typeof e.componentStack === 'string' ? e.componentStack : null,
         stack,
         id: currentExceptionID,
         isFatal,
@@ -68,13 +64,12 @@ function handleException(e) {
         // `throw '<error message>'` somewhere in your codebase.
         error = new SyntheticError(e);
     }
-    require("../../LogBox").addException(parseException(error, true));
+    require('../../LogBox').default.addException(parseException(error, true));
 }
 const ErrorUtils = {
     parseException,
     handleException,
     SyntheticError,
 };
-module.exports = ErrorUtils;
 exports.default = ErrorUtils;
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.js.map
index 5b1b8a8..30d2451 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/ExceptionsManager/index.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;AAEH,yEAAiD;AAIjD,MAAM,cAAe,SAAQ,KAAK;IAAlC;;QACE,SAAI,GAAW,EAAE,CAAC;IACpB,CAAC;CAAA;AAED;;GAEG;AACH,IAAI,WAAW,GAAG,CAAC,CAAC;AAEpB,SAAS,cAAc,CAAC,CAAgB,EAAE,OAAgB;IACxD,MAAM,KAAK,GAAG,IAAA,yBAAe,EAAC,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,KAAK,CAAC,CAAC;IACxC,MAAM,kBAAkB,GAAG,EAAE,WAAW,CAAC;IACzC,MAAM,eAAe,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC;IACxC,IAAI,OAAO,GAAG,eAAe,CAAC;IAC9B,IAAI,CAAC,CAAC,cAAc,IAAI,IAAI,EAAE;QAC5B,OAAO,IAAI,gCAAgC,CAAC,CAAC,cAAc,EAAE,CAAC;KAC/D;IACD,MAAM,UAAU,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;IAExE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;QACnC,OAAO,GAAG,UAAU,GAAG,OAAO,CAAC;KAChC;IAED,OAAO;QACL,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,gBAAgB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAExE,MAAM,IAAI,GAAG;QACX,OAAO;QACP,eAAe,EAAE,OAAO,KAAK,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe;QACrE,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;QACrD,cAAc,EACZ,OAAO,CAAC,CAAC,cAAc,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI;QAChE,KAAK;QACL,EAAE,EAAE,kBAAkB;QACtB,OAAO;QACP,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,QAAQ,EAAE,CAAC,CAAC,KAAK;SAClB;KACF,CAAC;IAEF,OAAO;QACL,GAAG,IAAI;QACP,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB;KACvC,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,SAAS,eAAe,CAAC,CAAM;IAC7B,IAAI,KAAY,CAAC;IACjB,IAAI,CAAC,YAAY,KAAK,EAAE;QACtB,KAAK,GAAG,CAAC,CAAC;KACX;SAAM;QACL,kEAAkE;QAClE,qEAAqE;QACrE,mEAAmE;QACnE,wDAAwD;QACxD,KAAK,GAAG,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC;KAC/B;IAED,OAAO,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AACpE,CAAC;AAED,MAAM,UAAU,GAAG;IACjB,cAAc;IACd,eAAe;IACf,cAAc;CACf,CAAC;AAEF,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC;AAC5B,kBAAe,UAAU,CAAC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport parseErrorStack from \"../parseErrorStack\";\n\ntype ExtendedError = any;\n\nclass SyntheticError extends Error {\n  name: string = \"\";\n}\n\n/**\n * Handles the developer-visible aspect of errors and exceptions\n */\nlet exceptionID = 0;\n\nfunction parseException(e: ExtendedError, isFatal: boolean) {\n  const stack = parseErrorStack(e?.stack);\n  const currentExceptionID = ++exceptionID;\n  const originalMessage = e.message || \"\";\n  let message = originalMessage;\n  if (e.componentStack != null) {\n    message += `\\n\\nThis error is located at:${e.componentStack}`;\n  }\n  const namePrefix = e.name == null || e.name === \"\" ? \"\" : `${e.name}: `;\n\n  if (!message.startsWith(namePrefix)) {\n    message = namePrefix + message;\n  }\n\n  message =\n    e.jsEngine == null ? message : `${message}, js engine: ${e.jsEngine}`;\n\n  const data = {\n    message,\n    originalMessage: message === originalMessage ? null : originalMessage,\n    name: e.name == null || e.name === \"\" ? null : e.name,\n    componentStack:\n      typeof e.componentStack === \"string\" ? e.componentStack : null,\n    stack,\n    id: currentExceptionID,\n    isFatal,\n    extraData: {\n      jsEngine: e.jsEngine,\n      rawStack: e.stack,\n    },\n  };\n\n  return {\n    ...data,\n    isComponentError: !!e.isComponentError,\n  };\n}\n\n/**\n * Logs exceptions to the (native) console and displays them\n */\nfunction handleException(e: any) {\n  let error: Error;\n  if (e instanceof Error) {\n    error = e;\n  } else {\n    // Workaround for reporting errors caused by `throw 'some string'`\n    // Unfortunately there is no way to figure out the stacktrace in this\n    // case, so if you ended up here trying to trace an error, look for\n    // `throw '<error message>'` somewhere in your codebase.\n    error = new SyntheticError(e);\n  }\n\n  require(\"../../LogBox\").addException(parseException(error, true));\n}\n\nconst ErrorUtils = {\n  parseException,\n  handleException,\n  SyntheticError,\n};\n\nmodule.exports = ErrorUtils;\nexport default ErrorUtils;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/ExceptionsManager/index.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;AAEH,yEAAiD;AAIjD,MAAM,cAAe,SAAQ,KAAK;IAChC,IAAI,GAAW,EAAE,CAAC;CACnB;AAED;;GAEG;AACH,IAAI,WAAW,GAAG,CAAC,CAAC;AAEpB,SAAS,cAAc,CAAC,CAAgB,EAAE,OAAgB;IACxD,MAAM,KAAK,GAAG,IAAA,yBAAe,EAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACxC,MAAM,kBAAkB,GAAG,EAAE,WAAW,CAAC;IACzC,MAAM,eAAe,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC;IACxC,IAAI,OAAO,GAAG,eAAe,CAAC;IAC9B,IAAI,CAAC,CAAC,cAAc,IAAI,IAAI,EAAE;QAC5B,OAAO,IAAI,gCAAgC,CAAC,CAAC,cAAc,EAAE,CAAC;KAC/D;IACD,MAAM,UAAU,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;IAExE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;QACnC,OAAO,GAAG,UAAU,GAAG,OAAO,CAAC;KAChC;IAED,OAAO,GAAG,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,gBAAgB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAEhF,MAAM,IAAI,GAAG;QACX,OAAO;QACP,eAAe,EAAE,OAAO,KAAK,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe;QACrE,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;QACrD,cAAc,EAAE,OAAO,CAAC,CAAC,cAAc,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI;QAC9E,KAAK;QACL,EAAE,EAAE,kBAAkB;QACtB,OAAO;QACP,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,QAAQ,EAAE,CAAC,CAAC,KAAK;SAClB;KACF,CAAC;IAEF,OAAO;QACL,GAAG,IAAI;QACP,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB;KACvC,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,SAAS,eAAe,CAAC,CAAM;IAC7B,IAAI,KAAY,CAAC;IACjB,IAAI,CAAC,YAAY,KAAK,EAAE;QACtB,KAAK,GAAG,CAAC,CAAC;KACX;SAAM;QACL,kEAAkE;QAClE,qEAAqE;QACrE,mEAAmE;QACnE,wDAAwD;QACxD,KAAK,GAAG,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC;KAC/B;IAED,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAC5E,CAAC;AAED,MAAM,UAAU,GAAG;IACjB,cAAc;IACd,eAAe;IACf,cAAc;CACf,CAAC;AAEF,kBAAe,UAAU,CAAC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport parseErrorStack from '../parseErrorStack';\n\ntype ExtendedError = any;\n\nclass SyntheticError extends Error {\n  name: string = '';\n}\n\n/**\n * Handles the developer-visible aspect of errors and exceptions\n */\nlet exceptionID = 0;\n\nfunction parseException(e: ExtendedError, isFatal: boolean) {\n  const stack = parseErrorStack(e?.stack);\n  const currentExceptionID = ++exceptionID;\n  const originalMessage = e.message || '';\n  let message = originalMessage;\n  if (e.componentStack != null) {\n    message += `\\n\\nThis error is located at:${e.componentStack}`;\n  }\n  const namePrefix = e.name == null || e.name === '' ? '' : `${e.name}: `;\n\n  if (!message.startsWith(namePrefix)) {\n    message = namePrefix + message;\n  }\n\n  message = e.jsEngine == null ? message : `${message}, js engine: ${e.jsEngine}`;\n\n  const data = {\n    message,\n    originalMessage: message === originalMessage ? null : originalMessage,\n    name: e.name == null || e.name === '' ? null : e.name,\n    componentStack: typeof e.componentStack === 'string' ? e.componentStack : null,\n    stack,\n    id: currentExceptionID,\n    isFatal,\n    extraData: {\n      jsEngine: e.jsEngine,\n      rawStack: e.stack,\n    },\n  };\n\n  return {\n    ...data,\n    isComponentError: !!e.isComponentError,\n  };\n}\n\n/**\n * Logs exceptions to the (native) console and displays them\n */\nfunction handleException(e: any) {\n  let error: Error;\n  if (e instanceof Error) {\n    error = e;\n  } else {\n    // Workaround for reporting errors caused by `throw 'some string'`\n    // Unfortunately there is no way to figure out the stacktrace in this\n    // case, so if you ended up here trying to trace an error, look for\n    // `throw '<error message>'` somewhere in your codebase.\n    error = new SyntheticError(e);\n  }\n\n  require('../../LogBox').default.addException(parseException(error, true));\n}\n\nconst ErrorUtils = {\n  parseException,\n  handleException,\n  SyntheticError,\n};\n\nexport default ErrorUtils;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.d.ts
index c6cd1ad..2fbb9a4 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.d.ts
@@ -1,2 +1,3 @@
-declare const ExceptionsManager: any;
+import ExceptionsManager from 'react-native/Library/Core/ExceptionsManager';
+export default ExceptionsManager;
 //# sourceMappingURL=index.native.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.d.ts.map
index 085fc8a..12ce004 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.native.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/ExceptionsManager/index.native.ts"],"names":[],"mappings":"AAAA,QAAA,MAAM,iBAAiB,KAAyD,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.native.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/ExceptionsManager/index.native.ts"],"names":[],"mappings":"AACA,OAAO,iBAAiB,MAAM,6CAA6C,CAAC;AAE5E,eAAe,iBAAiB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.js
index 22507a0..abf91cf 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.js
@@ -1,4 +1,9 @@
 "use strict";
-const ExceptionsManager = require("react-native/Library/Core/ExceptionsManager");
-module.exports = ExceptionsManager;
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+// @ts-expect-error
+const ExceptionsManager_1 = __importDefault(require("react-native/Library/Core/ExceptionsManager"));
+exports.default = ExceptionsManager_1.default;
 //# sourceMappingURL=index.native.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.js.map
index ed91b72..d51b37e 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/ExceptionsManager/index.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/ExceptionsManager/index.native.ts"],"names":[],"mappings":";AAAA,MAAM,iBAAiB,GAAG,OAAO,CAAC,6CAA6C,CAAC,CAAC;AAEjF,MAAM,CAAC,OAAO,GAAG,iBAAiB,CAAC","sourcesContent":["const ExceptionsManager = require(\"react-native/Library/Core/ExceptionsManager\");\n\nmodule.exports = ExceptionsManager;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/ExceptionsManager/index.native.ts"],"names":[],"mappings":";;;;;AAAA,mBAAmB;AACnB,oGAA4E;AAE5E,kBAAe,2BAAiB,CAAC","sourcesContent":["// @ts-expect-error\nimport ExceptionsManager from 'react-native/Library/Core/ExceptionsManager';\n\nexport default ExceptionsManager;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.d.ts.map
index 1976960..7a8c706 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/NativeLogBox/index.tsx"],"names":[],"mappings":";;;;AAGA,wBAwBE"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/NativeLogBox/index.tsx"],"names":[],"mappings":";;;;AAGA,wBAuBE"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.js
index 547ddf5..59057da 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.js
@@ -11,10 +11,10 @@ exports.default = {
         if (currentRoot) {
             return;
         }
-        const ErrorOverlay = require("../../ErrorOverlay").default;
+        const ErrorOverlay = require('../../ErrorOverlay').default;
         // Create a new div with ID `error-overlay` element and render LogBoxInspector into it.
-        const div = document.createElement("div");
-        div.id = "error-overlay";
+        const div = document.createElement('div');
+        div.id = 'error-overlay';
         document.body.appendChild(div);
         currentRoot = client_1.default.createRoot(div);
         currentRoot.render(react_1.default.createElement(ErrorOverlay, null));
@@ -25,8 +25,8 @@ exports.default = {
             currentRoot.unmount();
             currentRoot = null;
         }
-        const div = document.getElementById("error-overlay");
-        div === null || div === void 0 ? void 0 : div.remove();
+        const div = document.getElementById('error-overlay');
+        div?.remove();
     },
 };
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.js.map
index cb98c38..e254846 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/NativeLogBox/index.tsx"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAC1B,8DAAwC;AACxC,IAAI,WAAW,GAAyB,IAAI,CAAC;AAC7C,kBAAe;IACb,IAAI;QACF,IAAI,WAAW,EAAE;YACf,OAAO;SACR;QACD,MAAM,YAAY,GAChB,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;QACxC,uFAAuF;QACvF,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,GAAG,CAAC,EAAE,GAAG,eAAe,CAAC;QACzB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAE/B,WAAW,GAAG,gBAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACvC,WAAW,CAAC,MAAM,CAAC,8BAAC,YAAY,OAAG,CAAC,CAAC;IACvC,CAAC;IACD,IAAI;QACF,qCAAqC;QACrC,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,WAAW,GAAG,IAAI,CAAC;SACpB;QACD,MAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACrD,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,EAAE,CAAC;IAChB,CAAC;CACF,CAAC","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nlet currentRoot: ReactDOM.Root | null = null;\nexport default {\n  show() {\n    if (currentRoot) {\n      return;\n    }\n    const ErrorOverlay: React.ComponentType =\n      require(\"../../ErrorOverlay\").default;\n    // Create a new div with ID `error-overlay` element and render LogBoxInspector into it.\n    const div = document.createElement(\"div\");\n    div.id = \"error-overlay\";\n    document.body.appendChild(div);\n\n    currentRoot = ReactDOM.createRoot(div);\n    currentRoot.render(<ErrorOverlay />);\n  },\n  hide() {\n    // Remove div with ID `error-overlay`\n    if (currentRoot) {\n      currentRoot.unmount();\n      currentRoot = null;\n    }\n    const div = document.getElementById(\"error-overlay\");\n    div?.remove();\n  },\n};\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/NativeLogBox/index.tsx"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAC1B,8DAAwC;AACxC,IAAI,WAAW,GAAyB,IAAI,CAAC;AAC7C,kBAAe;IACb,IAAI;QACF,IAAI,WAAW,EAAE;YACf,OAAO;SACR;QACD,MAAM,YAAY,GAAwB,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;QAChF,uFAAuF;QACvF,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,GAAG,CAAC,EAAE,GAAG,eAAe,CAAC;QACzB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAE/B,WAAW,GAAG,gBAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACvC,WAAW,CAAC,MAAM,CAAC,8BAAC,YAAY,OAAG,CAAC,CAAC;IACvC,CAAC;IACD,IAAI;QACF,qCAAqC;QACrC,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,WAAW,GAAG,IAAI,CAAC;SACpB;QACD,MAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACrD,GAAG,EAAE,MAAM,EAAE,CAAC;IAChB,CAAC;CACF,CAAC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nlet currentRoot: ReactDOM.Root | null = null;\nexport default {\n  show() {\n    if (currentRoot) {\n      return;\n    }\n    const ErrorOverlay: React.ComponentType = require('../../ErrorOverlay').default;\n    // Create a new div with ID `error-overlay` element and render LogBoxInspector into it.\n    const div = document.createElement('div');\n    div.id = 'error-overlay';\n    document.body.appendChild(div);\n\n    currentRoot = ReactDOM.createRoot(div);\n    currentRoot.render(<ErrorOverlay />);\n  },\n  hide() {\n    // Remove div with ID `error-overlay`\n    if (currentRoot) {\n      currentRoot.unmount();\n      currentRoot = null;\n    }\n    const div = document.getElementById('error-overlay');\n    div?.remove();\n  },\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.d.ts
index 11f566e..d64f430 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.d.ts
@@ -1,3 +1,3 @@
-import NativeLogBox from "react-native/Libraries/NativeModules/specs/NativeLogBox";
+import NativeLogBox from 'react-native/Libraries/NativeModules/specs/NativeLogBox';
 export default NativeLogBox;
 //# sourceMappingURL=index.native.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.d.ts.map
index 81acd73..98ed459 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.native.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/NativeLogBox/index.native.ts"],"names":[],"mappings":"AACA,OAAO,YAAY,MAAM,yDAAyD,CAAC;AAEnF,eAAe,YAAY,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.native.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/NativeLogBox/index.native.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,yDAAyD,CAAC;AAEnF,eAAe,YAAY,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.js
index 9ee6eca..bece457 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.js
@@ -3,7 +3,6 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-// @ts-expect-error
 const NativeLogBox_1 = __importDefault(require("react-native/Libraries/NativeModules/specs/NativeLogBox"));
 exports.default = NativeLogBox_1.default;
 //# sourceMappingURL=index.native.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.js.map
index 849de31..7aaa75d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/NativeLogBox/index.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/NativeLogBox/index.native.ts"],"names":[],"mappings":";;;;;AAAA,mBAAmB;AACnB,2GAAmF;AAEnF,kBAAe,sBAAY,CAAC","sourcesContent":["// @ts-expect-error\nimport NativeLogBox from \"react-native/Libraries/NativeModules/specs/NativeLogBox\";\n\nexport default NativeLogBox;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/NativeLogBox/index.native.ts"],"names":[],"mappings":";;;;;AAAA,2GAAmF;AAEnF,kBAAe,sBAAY,CAAC","sourcesContent":["import NativeLogBox from 'react-native/Libraries/NativeModules/specs/NativeLogBox';\n\nexport default NativeLogBox;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.js
index cad2ff3..c83b87b 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.js
@@ -1,12 +1,12 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 function openFileInEditor(file, lineNumber) {
-    if (process.env.NODE_ENV !== "production") {
+    if (process.env.NODE_ENV !== 'production') {
         // TODO: This is not a great URL since it now blocks users from accessing the `/open-stack-frame` url in their router
         // ideally it would be something like `/_devtools/open-stack-frame`.
-        const baseUrl = window.location.protocol + "//" + window.location.host;
-        fetch(baseUrl + "/open-stack-frame", {
-            method: "POST",
+        const baseUrl = window.location.protocol + '//' + window.location.host;
+        fetch(baseUrl + '/open-stack-frame', {
+            method: 'POST',
             body: JSON.stringify({ file, lineNumber }),
         });
     }
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.js.map
index e380c63..66054e6 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/openFileInEditor/index.ts"],"names":[],"mappings":";;AAEA,SAAS,gBAAgB,CAAC,IAAY,EAAE,UAAkB;IACxD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,qHAAqH;QACrH,oEAAoE;QACpE,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QAEvE,KAAK,CAAC,OAAO,GAAG,mBAAmB,EAAE;YACnC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;SAC3C,CAAC,CAAC;KACJ;AACH,CAAC;AAED,kBAAe,gBAAgB,CAAC","sourcesContent":["declare const process: any;\n\nfunction openFileInEditor(file: string, lineNumber: number) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // TODO: This is not a great URL since it now blocks users from accessing the `/open-stack-frame` url in their router\n    // ideally it would be something like `/_devtools/open-stack-frame`.\n    const baseUrl = window.location.protocol + \"//\" + window.location.host;\n\n    fetch(baseUrl + \"/open-stack-frame\", {\n      method: \"POST\",\n      body: JSON.stringify({ file, lineNumber }),\n    });\n  }\n}\n\nexport default openFileInEditor;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/openFileInEditor/index.ts"],"names":[],"mappings":";;AAEA,SAAS,gBAAgB,CAAC,IAAY,EAAE,UAAkB;IACxD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,qHAAqH;QACrH,oEAAoE;QACpE,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QAEvE,KAAK,CAAC,OAAO,GAAG,mBAAmB,EAAE;YACnC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;SAC3C,CAAC,CAAC;KACJ;AACH,CAAC;AAED,kBAAe,gBAAgB,CAAC","sourcesContent":["declare const process: any;\n\nfunction openFileInEditor(file: string, lineNumber: number) {\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: This is not a great URL since it now blocks users from accessing the `/open-stack-frame` url in their router\n    // ideally it would be something like `/_devtools/open-stack-frame`.\n    const baseUrl = window.location.protocol + '//' + window.location.host;\n\n    fetch(baseUrl + '/open-stack-frame', {\n      method: 'POST',\n      body: JSON.stringify({ file, lineNumber }),\n    });\n  }\n}\n\nexport default openFileInEditor;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.d.ts
index 8300520..32128c5 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.d.ts
@@ -1,3 +1,3 @@
-import openFileInEditor from "react-native/Libraries/Core/Devtools/openFileInEditor";
+import openFileInEditor from 'react-native/Libraries/Core/Devtools/openFileInEditor';
 export default openFileInEditor;
 //# sourceMappingURL=index.native.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.d.ts.map
index 9666d0f..d8a15e4 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.native.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/openFileInEditor/index.native.ts"],"names":[],"mappings":"AACA,OAAO,gBAAgB,MAAM,uDAAuD,CAAC;AAErF,eAAe,gBAAgB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.native.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/openFileInEditor/index.native.ts"],"names":[],"mappings":"AAAA,OAAO,gBAAgB,MAAM,uDAAuD,CAAC;AAErF,eAAe,gBAAgB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.js
index 39e5a88..4d56642 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.js
@@ -3,7 +3,6 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-// @ts-expect-error
 const openFileInEditor_1 = __importDefault(require("react-native/Libraries/Core/Devtools/openFileInEditor"));
 exports.default = openFileInEditor_1.default;
 //# sourceMappingURL=index.native.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.js.map
index a6223d3..23e8bfc 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/openFileInEditor/index.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/openFileInEditor/index.native.ts"],"names":[],"mappings":";;;;;AAAA,mBAAmB;AACnB,6GAAqF;AAErF,kBAAe,0BAAgB,CAAC","sourcesContent":["// @ts-expect-error\nimport openFileInEditor from \"react-native/Libraries/Core/Devtools/openFileInEditor\";\n\nexport default openFileInEditor;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/openFileInEditor/index.native.ts"],"names":[],"mappings":";;;;;AAAA,6GAAqF;AAErF,kBAAe,0BAAgB,CAAC","sourcesContent":["import openFileInEditor from 'react-native/Libraries/Core/Devtools/openFileInEditor';\n\nexport default openFileInEditor;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.d.ts
index 697b5dc..3b2be5e 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.d.ts
@@ -1,4 +1,4 @@
-import { StackFrame } from "stacktrace-parser";
+import { StackFrame } from 'stacktrace-parser';
 declare function parseErrorStack(stack?: string): (StackFrame & {
     collapse?: boolean;
 })[];
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.d.ts.map
index 93a7fda..dfafd7e 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/parseErrorStack/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAS,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAEtD,iBAAS,eAAe,CACtB,KAAK,CAAC,EAAE,MAAM,GACb,CAAC,UAAU,GAAG;IAAE,QAAQ,CAAC,EAAE,OAAO,CAAA;CAAE,CAAC,EAAE,CAqBzC;AAED,eAAe,eAAe,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/parseErrorStack/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAS,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAEtD,iBAAS,eAAe,CAAC,KAAK,CAAC,EAAE,MAAM,GAAG,CAAC,UAAU,GAAG;IAAE,QAAQ,CAAC,EAAE,OAAO,CAAA;CAAE,CAAC,EAAE,CAqBhF;AAED,eAAe,eAAe,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.js
index f8d98c5..3cb4267 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.js
@@ -8,11 +8,11 @@ function parseErrorStack(stack) {
     if (Array.isArray(stack)) {
         return stack;
     }
-    // Native support for parsing for non-standard Hermes stack traces.
-    // @ts-expect-error: HermesInternal is not a global variable, but it is injected by the Hermes VM.
-    if (global.HermesInternal) {
-        return require("./parseHermesStack").parseErrorStack(stack);
-    }
+    // This file seems to be web-only, so we can remove this.
+    // // Native support for parsing for non-standard Hermes stack traces.
+    // if (global.HermesInternal) {
+    //   return require('./parseHermesStack').parseErrorStack(stack);
+    // }
     return (0, stacktrace_parser_1.parse)(stack).map((frame) => {
         // frame.file will mostly look like `http://localhost:8081/index.bundle?platform=web&dev=true&hot=false`
         return {
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.js.map
index 734626d..12563aa 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/parseErrorStack/index.ts"],"names":[],"mappings":";;AAAA,yDAAsD;AAEtD,SAAS,eAAe,CACtB,KAAc;IAEd,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,EAAE,CAAC;KACX;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,OAAO,KAAK,CAAC;KACd;IAED,mEAAmE;IACnE,kGAAkG;IAClG,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,OAAO,OAAO,CAAC,oBAAoB,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;KAC7D;IAED,OAAO,IAAA,yBAAK,EAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;QAChC,wGAAwG;QACxG,OAAO;YACL,GAAG,KAAK;YACR,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;SACvD,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,kBAAe,eAAe,CAAC","sourcesContent":["import { parse, StackFrame } from \"stacktrace-parser\";\n\nfunction parseErrorStack(\n  stack?: string\n): (StackFrame & { collapse?: boolean })[] {\n  if (stack == null) {\n    return [];\n  }\n  if (Array.isArray(stack)) {\n    return stack;\n  }\n\n  // Native support for parsing for non-standard Hermes stack traces.\n  // @ts-expect-error: HermesInternal is not a global variable, but it is injected by the Hermes VM.\n  if (global.HermesInternal) {\n    return require(\"./parseHermesStack\").parseErrorStack(stack);\n  }\n\n  return parse(stack).map((frame) => {\n    // frame.file will mostly look like `http://localhost:8081/index.bundle?platform=web&dev=true&hot=false`\n    return {\n      ...frame,\n      column: frame.column != null ? frame.column - 1 : null,\n    };\n  });\n}\n\nexport default parseErrorStack;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/parseErrorStack/index.ts"],"names":[],"mappings":";;AAAA,yDAAsD;AAEtD,SAAS,eAAe,CAAC,KAAc;IACrC,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,EAAE,CAAC;KACX;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,OAAO,KAAK,CAAC;KACd;IAED,yDAAyD;IACzD,sEAAsE;IACtE,+BAA+B;IAC/B,iEAAiE;IACjE,IAAI;IAEJ,OAAO,IAAA,yBAAK,EAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;QAChC,wGAAwG;QACxG,OAAO;YACL,GAAG,KAAK;YACR,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;SACvD,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,kBAAe,eAAe,CAAC","sourcesContent":["import { parse, StackFrame } from 'stacktrace-parser';\n\nfunction parseErrorStack(stack?: string): (StackFrame & { collapse?: boolean })[] {\n  if (stack == null) {\n    return [];\n  }\n  if (Array.isArray(stack)) {\n    return stack;\n  }\n\n  // This file seems to be web-only, so we can remove this.\n  // // Native support for parsing for non-standard Hermes stack traces.\n  // if (global.HermesInternal) {\n  //   return require('./parseHermesStack').parseErrorStack(stack);\n  // }\n\n  return parse(stack).map((frame) => {\n    // frame.file will mostly look like `http://localhost:8081/index.bundle?platform=web&dev=true&hot=false`\n    return {\n      ...frame,\n      column: frame.column != null ? frame.column - 1 : null,\n    };\n  });\n}\n\nexport default parseErrorStack;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/parseHermesStack.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/parseHermesStack.d.ts
index 4c6ba39..391b989 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/parseHermesStack.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/parseHermesStack.d.ts
@@ -1,3 +1,3 @@
-import parseErrorStack from "react-native/Libraries/Core/Devtools/parseErrorStack";
+import parseErrorStack from 'react-native/Libraries/Core/Devtools/parseErrorStack';
 export { parseErrorStack };
 //# sourceMappingURL=parseHermesStack.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/parseHermesStack.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/parseHermesStack.js.map
index 805ca40..9d4a73f 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/parseHermesStack.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/parseErrorStack/parseHermesStack.js.map
@@ -1 +1 @@
-{"version":3,"file":"parseHermesStack.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/parseErrorStack/parseHermesStack.ts"],"names":[],"mappings":";;;;;;AAAA,2GAAmF;AAE1E,0BAFF,yBAAe,CAEE","sourcesContent":["import parseErrorStack from \"react-native/Libraries/Core/Devtools/parseErrorStack\";\n\nexport { parseErrorStack };\n"]}
\ No newline at end of file
+{"version":3,"file":"parseHermesStack.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/parseErrorStack/parseHermesStack.ts"],"names":[],"mappings":";;;;;;AAAA,2GAAmF;AAE1E,0BAFF,yBAAe,CAEE","sourcesContent":["import parseErrorStack from 'react-native/Libraries/Core/Devtools/parseErrorStack';\n\nexport { parseErrorStack };\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.d.ts
index e0b4b4a..c2ba5cc 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.d.ts
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.d.ts.map
index 3eff972..452ffd1 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/stringifySafe/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;;GAGG;AACH,wBAAgB,6BAA6B,CAAC,MAAM,EAAE;IACpD,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,cAAc,CAAC,EAAE,MAAM,CAAC;IACxB,aAAa,CAAC,EAAE,MAAM,CAAC;IACvB,kBAAkB,CAAC,EAAE,MAAM,CAAC;CAC7B,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK,MAAM,CA0FvB;AAED,QAAA,MAAM,aAAa,QA5FT,GAAG,KAAK,MAiGhB,CAAC;AAEH,eAAe,aAAa,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/stringifySafe/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;;GAGG;AACH,wBAAgB,6BAA6B,CAAC,MAAM,EAAE;IACpD,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,cAAc,CAAC,EAAE,MAAM,CAAC;IACxB,aAAa,CAAC,EAAE,MAAM,CAAC;IACvB,kBAAkB,CAAC,EAAE,MAAM,CAAC;CAC7B,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK,MAAM,CAwFvB;AAED,QAAA,MAAM,aAAa,QA1FT,GAAG,KAAK,MA+FhB,CAAC;AAEH,eAAe,aAAa,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.js
index dc30dc0..04d06c2 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -19,14 +19,14 @@ function createStringifySafeWithLimits(limits) {
         while (stack.length && this !== stack[0]) {
             stack.shift();
         }
-        if (typeof value === "string") {
-            const truncatedString = "...(truncated)...";
+        if (typeof value === 'string') {
+            const truncatedString = '...(truncated)...';
             if (value.length > maxStringLimit + truncatedString.length) {
                 return value.substring(0, maxStringLimit) + truncatedString;
             }
             return value;
         }
-        if (typeof value !== "object" || value === null) {
+        if (typeof value !== 'object' || value === null) {
             return value;
         }
         let retval = value;
@@ -37,15 +37,13 @@ function createStringifySafeWithLimits(limits) {
             else if (value.length > maxArrayLimit) {
                 retval = value
                     .slice(0, maxArrayLimit)
-                    .concat([
-                    `... extra ${value.length - maxArrayLimit} values truncated ...`,
-                ]);
+                    .concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);
             }
         }
         else {
             // Add refinement after Array.isArray call.
-            if (typeof value !== "object") {
-                throw new Error("This was already found earlier");
+            if (typeof value !== 'object') {
+                throw new Error('This was already found earlier');
             }
             const keys = Object.keys(value);
             if (stack.length >= maxDepth) {
@@ -57,7 +55,7 @@ function createStringifySafeWithLimits(limits) {
                 for (const k of keys.slice(0, maxObjectKeysLimit)) {
                     retval[k] = value[k];
                 }
-                const truncatedKey = "...(truncated keys)...";
+                const truncatedKey = '...(truncated keys)...';
                 retval[truncatedKey] = keys.length - maxObjectKeysLimit;
             }
         }
@@ -66,21 +64,21 @@ function createStringifySafeWithLimits(limits) {
     }
     return function stringifySafe(arg) {
         if (arg === undefined) {
-            return "undefined";
+            return 'undefined';
         }
         else if (arg === null) {
-            return "null";
+            return 'null';
         }
-        else if (typeof arg === "function") {
+        else if (typeof arg === 'function') {
             try {
                 return arg.toString();
             }
             catch {
-                return "[function unknown]";
+                return '[function unknown]';
             }
         }
         else if (arg instanceof Error) {
-            return arg.name + ": " + arg.message;
+            return arg.name + ': ' + arg.message;
         }
         else {
             // Perform a try catch, just in case the object has a circular
@@ -93,7 +91,7 @@ function createStringifySafeWithLimits(limits) {
                 return ret;
             }
             catch {
-                if (typeof arg.toString === "function") {
+                if (typeof arg.toString === 'function') {
                     try {
                         // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.
                         return arg.toString();
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.js.map
index 8678334..f4c5fee 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/stringifySafe/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/stringifySafe/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nexport function createStringifySafeWithLimits(limits: {\n  maxDepth?: number;\n  maxStringLimit?: number;\n  maxArrayLimit?: number;\n  maxObjectKeysLimit?: number;\n}): (foo: any) => string {\n  const {\n    maxDepth = Number.POSITIVE_INFINITY,\n    maxStringLimit = Number.POSITIVE_INFINITY,\n    maxArrayLimit = Number.POSITIVE_INFINITY,\n    maxObjectKeysLimit = Number.POSITIVE_INFINITY,\n  } = limits;\n  const stack: any[] = [];\n  function replacer(this: unknown, _key: string, value: any): any {\n    while (stack.length && this !== stack[0]) {\n      stack.shift();\n    }\n\n    if (typeof value === \"string\") {\n      const truncatedString = \"...(truncated)...\";\n      if (value.length > maxStringLimit + truncatedString.length) {\n        return value.substring(0, maxStringLimit) + truncatedString;\n      }\n      return value;\n    }\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    let retval = value;\n    if (Array.isArray(value)) {\n      if (stack.length >= maxDepth) {\n        retval = `[ ... array with ${value.length} values ... ]`;\n      } else if (value.length > maxArrayLimit) {\n        retval = value\n          .slice(0, maxArrayLimit)\n          .concat([\n            `... extra ${value.length - maxArrayLimit} values truncated ...`,\n          ]);\n      }\n    } else {\n      // Add refinement after Array.isArray call.\n      if (typeof value !== \"object\") {\n        throw new Error(\"This was already found earlier\");\n      }\n      const keys = Object.keys(value);\n      if (stack.length >= maxDepth) {\n        retval = `{ ... object with ${keys.length} keys ... }`;\n      } else if (keys.length > maxObjectKeysLimit) {\n        // Return a sample of the keys.\n        retval = {};\n        for (const k of keys.slice(0, maxObjectKeysLimit)) {\n          retval[k] = value[k];\n        }\n        const truncatedKey = \"...(truncated keys)...\";\n        retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n      }\n    }\n    stack.unshift(retval);\n    return retval;\n  }\n\n  return function stringifySafe(arg: any): string {\n    if (arg === undefined) {\n      return \"undefined\";\n    } else if (arg === null) {\n      return \"null\";\n    } else if (typeof arg === \"function\") {\n      try {\n        return arg.toString();\n      } catch {\n        return \"[function unknown]\";\n      }\n    } else if (arg instanceof Error) {\n      return arg.name + \": \" + arg.message;\n    } else {\n      // Perform a try catch, just in case the object has a circular\n      // reference or stringify throws for some other reason.\n      try {\n        const ret = JSON.stringify(arg, replacer);\n        if (ret === undefined) {\n          return '[\"' + typeof arg + '\" failed to stringify]';\n        }\n        return ret;\n      } catch {\n        if (typeof arg.toString === \"function\") {\n          try {\n            // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.\n            return arg.toString();\n          } catch {}\n        }\n      }\n    }\n    return '[\"' + typeof arg + '\" failed to stringify]';\n  };\n}\n\nconst stringifySafe = createStringifySafeWithLimits({\n  maxDepth: 10,\n  maxStringLimit: 100,\n  maxArrayLimit: 50,\n  maxObjectKeysLimit: 50,\n});\n\nexport default stringifySafe;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/stringifySafe/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nexport function createStringifySafeWithLimits(limits: {\n  maxDepth?: number;\n  maxStringLimit?: number;\n  maxArrayLimit?: number;\n  maxObjectKeysLimit?: number;\n}): (foo: any) => string {\n  const {\n    maxDepth = Number.POSITIVE_INFINITY,\n    maxStringLimit = Number.POSITIVE_INFINITY,\n    maxArrayLimit = Number.POSITIVE_INFINITY,\n    maxObjectKeysLimit = Number.POSITIVE_INFINITY,\n  } = limits;\n  const stack: any[] = [];\n  function replacer(this: unknown, _key: string, value: any): any {\n    while (stack.length && this !== stack[0]) {\n      stack.shift();\n    }\n\n    if (typeof value === 'string') {\n      const truncatedString = '...(truncated)...';\n      if (value.length > maxStringLimit + truncatedString.length) {\n        return value.substring(0, maxStringLimit) + truncatedString;\n      }\n      return value;\n    }\n    if (typeof value !== 'object' || value === null) {\n      return value;\n    }\n\n    let retval = value;\n    if (Array.isArray(value)) {\n      if (stack.length >= maxDepth) {\n        retval = `[ ... array with ${value.length} values ... ]`;\n      } else if (value.length > maxArrayLimit) {\n        retval = value\n          .slice(0, maxArrayLimit)\n          .concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);\n      }\n    } else {\n      // Add refinement after Array.isArray call.\n      if (typeof value !== 'object') {\n        throw new Error('This was already found earlier');\n      }\n      const keys = Object.keys(value);\n      if (stack.length >= maxDepth) {\n        retval = `{ ... object with ${keys.length} keys ... }`;\n      } else if (keys.length > maxObjectKeysLimit) {\n        // Return a sample of the keys.\n        retval = {};\n        for (const k of keys.slice(0, maxObjectKeysLimit)) {\n          retval[k] = value[k];\n        }\n        const truncatedKey = '...(truncated keys)...';\n        retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n      }\n    }\n    stack.unshift(retval);\n    return retval;\n  }\n\n  return function stringifySafe(arg: any): string {\n    if (arg === undefined) {\n      return 'undefined';\n    } else if (arg === null) {\n      return 'null';\n    } else if (typeof arg === 'function') {\n      try {\n        return arg.toString();\n      } catch {\n        return '[function unknown]';\n      }\n    } else if (arg instanceof Error) {\n      return arg.name + ': ' + arg.message;\n    } else {\n      // Perform a try catch, just in case the object has a circular\n      // reference or stringify throws for some other reason.\n      try {\n        const ret = JSON.stringify(arg, replacer);\n        if (ret === undefined) {\n          return '[\"' + typeof arg + '\" failed to stringify]';\n        }\n        return ret;\n      } catch {\n        if (typeof arg.toString === 'function') {\n          try {\n            // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.\n            return arg.toString();\n          } catch {}\n        }\n      }\n    }\n    return '[\"' + typeof arg + '\" failed to stringify]';\n  };\n}\n\nconst stringifySafe = createStringifySafeWithLimits({\n  maxDepth: 10,\n  maxStringLimit: 100,\n  maxArrayLimit: 50,\n  maxObjectKeysLimit: 50,\n});\n\nexport default stringifySafe;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.d.ts
index c9298e8..cb40d17 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.d.ts
@@ -1,11 +1,11 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-import { StackFrame } from "stacktrace-parser";
+import { StackFrame } from 'stacktrace-parser';
 export type CodeFrame = {
     content: string;
     location?: {
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.d.ts.map
index 835e48a..5c8b5bb 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/symbolicateStackTrace/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAE/C,MAAM,MAAM,SAAS,GAAG;IACtB,OAAO,EAAE,MAAM,CAAC;IAChB,QAAQ,CAAC,EAAE;QACT,GAAG,EAAE,MAAM,CAAC;QACZ,MAAM,EAAE,MAAM,CAAC;QACf,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;KACpB,CAAC;IACF,QAAQ,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,sBAAsB,GAAG;IACnC,KAAK,EAAE,UAAU,EAAE,CAAC;IACpB,SAAS,CAAC,EAAE,SAAS,CAAC;CACvB,CAAC;AAEF,iBAAe,qBAAqB,CAClC,KAAK,EAAE,UAAU,EAAE,GAClB,OAAO,CAAC,sBAAsB,CAAC,CAWjC;AAED,eAAe,qBAAqB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/error-overlay/modules/symbolicateStackTrace/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAE/C,MAAM,MAAM,SAAS,GAAG;IACtB,OAAO,EAAE,MAAM,CAAC;IAChB,QAAQ,CAAC,EAAE;QACT,GAAG,EAAE,MAAM,CAAC;QACZ,MAAM,EAAE,MAAM,CAAC;QACf,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;KACpB,CAAC;IACF,QAAQ,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,sBAAsB,GAAG;IACnC,KAAK,EAAE,UAAU,EAAE,CAAC;IACpB,SAAS,CAAC,EAAE,SAAS,CAAC;CACvB,CAAC;AAEF,iBAAe,qBAAqB,CAAC,KAAK,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAWzF;AAED,eAAe,qBAAqB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.js b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.js
index 33b4327..c7b3119 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.js
@@ -1,6 +1,6 @@
 "use strict";
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -8,11 +8,11 @@
  */
 Object.defineProperty(exports, "__esModule", { value: true });
 async function symbolicateStackTrace(stack) {
-    const baseUrl = typeof window === "undefined"
+    const baseUrl = typeof window === 'undefined'
         ? process.env.EXPO_DEV_SERVER_ORIGIN
-        : window.location.protocol + "//" + window.location.host;
-    const response = await fetch(baseUrl + "/symbolicate", {
-        method: "POST",
+        : window.location.protocol + '//' + window.location.host;
+    const response = await fetch(baseUrl + '/symbolicate', {
+        method: 'POST',
         body: JSON.stringify({ stack }),
     });
     return await response.json();
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.js.map
index 713ac8c..97b53dc 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/symbolicateStackTrace/index.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAmBH,KAAK,UAAU,qBAAqB,CAClC,KAAmB;IAEnB,MAAM,OAAO,GACX,OAAO,MAAM,KAAK,WAAW;QAC3B,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB;QACpC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IAE7D,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,GAAG,cAAc,EAAE;QACrD,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC;KAChC,CAAC,CAAC;IACH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC/B,CAAC;AAED,kBAAe,qBAAqB,CAAC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { StackFrame } from \"stacktrace-parser\";\n\nexport type CodeFrame = {\n  content: string;\n  location?: {\n    row: number;\n    column: number;\n    [key: string]: any;\n  };\n  fileName: string;\n};\n\nexport type SymbolicatedStackTrace = {\n  stack: StackFrame[];\n  codeFrame?: CodeFrame;\n};\n\nasync function symbolicateStackTrace(\n  stack: StackFrame[]\n): Promise<SymbolicatedStackTrace> {\n  const baseUrl =\n    typeof window === \"undefined\"\n      ? process.env.EXPO_DEV_SERVER_ORIGIN\n      : window.location.protocol + \"//\" + window.location.host;\n\n  const response = await fetch(baseUrl + \"/symbolicate\", {\n    method: \"POST\",\n    body: JSON.stringify({ stack }),\n  });\n  return await response.json();\n}\n\nexport default symbolicateStackTrace;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/symbolicateStackTrace/index.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAmBH,KAAK,UAAU,qBAAqB,CAAC,KAAmB;IACtD,MAAM,OAAO,GACX,OAAO,MAAM,KAAK,WAAW;QAC3B,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB;QACpC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IAE7D,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,GAAG,cAAc,EAAE;QACrD,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC;KAChC,CAAC,CAAC;IACH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC/B,CAAC;AAED,kBAAe,qBAAqB,CAAC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { StackFrame } from 'stacktrace-parser';\n\nexport type CodeFrame = {\n  content: string;\n  location?: {\n    row: number;\n    column: number;\n    [key: string]: any;\n  };\n  fileName: string;\n};\n\nexport type SymbolicatedStackTrace = {\n  stack: StackFrame[];\n  codeFrame?: CodeFrame;\n};\n\nasync function symbolicateStackTrace(stack: StackFrame[]): Promise<SymbolicatedStackTrace> {\n  const baseUrl =\n    typeof window === 'undefined'\n      ? process.env.EXPO_DEV_SERVER_ORIGIN\n      : window.location.protocol + '//' + window.location.host;\n\n  const response = await fetch(baseUrl + '/symbolicate', {\n    method: 'POST',\n    body: JSON.stringify({ stack }),\n  });\n  return await response.json();\n}\n\nexport default symbolicateStackTrace;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.native.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.native.d.ts
index 075e586..0583d6f 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.native.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.native.d.ts
@@ -1,3 +1,3 @@
-import symbolicateStackTrace from "react-native/Libraries/Core/Devtools/symbolicateStackTrace";
+import symbolicateStackTrace from 'react-native/Libraries/Core/Devtools/symbolicateStackTrace';
 export default symbolicateStackTrace;
 //# sourceMappingURL=index.native.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.native.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.native.js.map
index c1837f3..47dcff4 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/modules/symbolicateStackTrace/index.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/symbolicateStackTrace/index.native.ts"],"names":[],"mappings":";;;;;AAAA,uHAA+F;AAE/F,kBAAe,+BAAqB,CAAC","sourcesContent":["import symbolicateStackTrace from \"react-native/Libraries/Core/Devtools/symbolicateStackTrace\";\n\nexport default symbolicateStackTrace;\n"]}
\ No newline at end of file
+{"version":3,"file":"index.native.js","sourceRoot":"","sources":["../../../../src/error-overlay/modules/symbolicateStackTrace/index.native.ts"],"names":[],"mappings":";;;;;AAAA,uHAA+F;AAE/F,kBAAe,+BAAqB,CAAC","sourcesContent":["import symbolicateStackTrace from 'react-native/Libraries/Core/Devtools/symbolicateStackTrace';\n\nexport default symbolicateStackTrace;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.d.ts
index 2c0647b..29158e0 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.d.ts
@@ -1,5 +1,5 @@
-import type { CodeFrame } from "../Data/parseLogBoxLog";
-export declare function LogBoxInspectorCodeFrame({ codeFrame, }: {
+import type { CodeFrame } from '../Data/parseLogBoxLog';
+export declare function LogBoxInspectorCodeFrame({ codeFrame }: {
     codeFrame?: CodeFrame;
 }): JSX.Element | null;
 //# sourceMappingURL=LogBoxInspectorCodeFrame.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.d.ts.map
index b046259..5a01b96 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorCodeFrame.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorCodeFrame.tsx"],"names":[],"mappings":"AAUA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAWxD,wBAAgB,wBAAwB,CAAC,EACvC,SAAS,GACV,EAAE;IACD,SAAS,CAAC,EAAE,SAAS,CAAC;CACvB,sBAiDA"}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorCodeFrame.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorCodeFrame.tsx"],"names":[],"mappings":"AAWA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAUxD,wBAAgB,wBAAwB,CAAC,EAAE,SAAS,EAAE,EAAE;IAAE,SAAS,CAAC,EAAE,SAAS,CAAA;CAAE,sBA2ChF"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.js b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.js
index ddaa072..1090ccc 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.js
@@ -28,7 +28,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxInspectorCodeFrame = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -36,22 +36,22 @@ exports.LogBoxInspectorCodeFrame = void 0;
  */
 const react_1 = __importDefault(require("react"));
 const react_native_1 = require("react-native");
+const LogBoxInspectorSection_1 = require("./LogBoxInspectorSection");
 const AnsiHighlight_1 = require("../UI/AnsiHighlight");
 const LogBoxButton_1 = require("../UI/LogBoxButton");
 const LogBoxStyle = __importStar(require("../UI/LogBoxStyle"));
 const constants_1 = require("../UI/constants");
 const formatProjectFilePath_1 = require("../formatProjectFilePath");
 const openFileInEditor_1 = __importDefault(require("../modules/openFileInEditor"));
-const LogBoxInspectorSection_1 = require("./LogBoxInspectorSection");
-function LogBoxInspectorCodeFrame({ codeFrame, }) {
+function LogBoxInspectorCodeFrame({ codeFrame }) {
     if (codeFrame == null) {
         return null;
     }
     function getFileName() {
-        return (0, formatProjectFilePath_1.formatProjectFilePath)(process.env.EXPO_PROJECT_ROOT, codeFrame === null || codeFrame === void 0 ? void 0 : codeFrame.fileName);
+        return (0, formatProjectFilePath_1.formatProjectFilePath)(process.env.EXPO_PROJECT_ROOT, codeFrame?.fileName);
     }
     function getLocation() {
-        const location = codeFrame === null || codeFrame === void 0 ? void 0 : codeFrame.location;
+        const location = codeFrame?.location;
         if (location != null) {
             return ` (${location.row}:${location.column + 1 /* Code frame columns are zero indexed */})`;
         }
@@ -63,11 +63,10 @@ function LogBoxInspectorCodeFrame({ codeFrame, }) {
                 react_1.default.createElement(react_native_1.ScrollView, { horizontal: true },
                     react_1.default.createElement(AnsiHighlight_1.Ansi, { style: styles.content, text: codeFrame.content }))),
             react_1.default.createElement(LogBoxButton_1.LogBoxButton, { backgroundColor: {
-                    default: "transparent",
+                    default: 'transparent',
                     pressed: LogBoxStyle.getBackgroundDarkColor(1),
                 }, style: styles.button, onPress: () => {
-                    var _a, _b;
-                    (0, openFileInEditor_1.default)(codeFrame.fileName, (_b = (_a = codeFrame.location) === null || _a === void 0 ? void 0 : _a.row) !== null && _b !== void 0 ? _b : 0);
+                    (0, openFileInEditor_1.default)(codeFrame.fileName, codeFrame.location?.row ?? 0);
                 } },
                 react_1.default.createElement(react_native_1.Text, { style: styles.fileText },
                     getFileName(),
@@ -78,7 +77,7 @@ const styles = react_native_1.StyleSheet.create({
     box: {
         backgroundColor: LogBoxStyle.getBackgroundColor(),
         borderWidth: 1,
-        borderColor: "#323232",
+        borderColor: '#323232',
         marginLeft: 10,
         marginRight: 10,
         marginTop: 5,
@@ -101,9 +100,9 @@ const styles = react_native_1.StyleSheet.create({
         fontFamily: constants_1.CODE_FONT,
     },
     fileText: {
-        userSelect: "none",
+        userSelect: 'none',
         color: LogBoxStyle.getTextColor(0.5),
-        textAlign: "center",
+        textAlign: 'center',
         flex: 1,
         fontSize: 16,
         includeFontPadding: false,
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.js.map
index a352663..0c19e72 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorCodeFrame.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorCodeFrame.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorCodeFrame.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport { ScrollView, StyleSheet, Text, View } from \"react-native\";\n\nimport type { CodeFrame } from \"../Data/parseLogBoxLog\";\nimport { Ansi } from \"../UI/AnsiHighlight\";\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport { CODE_FONT } from \"../UI/constants\";\nimport { formatProjectFilePath } from \"../formatProjectFilePath\";\nimport openFileInEditor from \"../modules/openFileInEditor\";\nimport { LogBoxInspectorSection } from \"./LogBoxInspectorSection\";\n\ndeclare const process: any;\n\nexport function LogBoxInspectorCodeFrame({\n  codeFrame,\n}: {\n  codeFrame?: CodeFrame;\n}) {\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    return formatProjectFilePath(\n      process.env.EXPO_PROJECT_ROOT,\n      codeFrame?.fileName\n    );\n  }\n\n  function getLocation() {\n    const location = codeFrame?.location;\n    if (location != null) {\n      return ` (${location.row}:${\n        location.column + 1 /* Code frame columns are zero indexed */\n      })`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\">\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView horizontal>\n            <Ansi style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: \"transparent\",\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}\n        >\n          <Text style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    borderWidth: 1,\n    borderColor: \"#323232\",\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: CODE_FONT,\n  },\n  fileText: {\n    userSelect: \"none\",\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: \"center\",\n    flex: 1,\n    fontSize: 16,\n    includeFontPadding: false,\n    fontFamily: CODE_FONT,\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorCodeFrame.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorCodeFrame.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,kDAA0B;AAC1B,+CAAkE;AAElE,qEAAkE;AAElE,uDAA2C;AAC3C,qDAAkD;AAClD,+DAAiD;AACjD,+CAA4C;AAC5C,oEAAiE;AACjE,mFAA2D;AAI3D,SAAgB,wBAAwB,CAAC,EAAE,SAAS,EAA6B;IAC/E,IAAI,SAAS,IAAI,IAAI,EAAE;QACrB,OAAO,IAAI,CAAC;KACb;IAED,SAAS,WAAW;QAClB,OAAO,IAAA,6CAAqB,EAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IACnF,CAAC;IAED,SAAS,WAAW;QAClB,MAAM,QAAQ,GAAG,SAAS,EAAE,QAAQ,CAAC;QACrC,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,OAAO,KAAK,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,yCAAyC,GAAG,CAAC;SAC9F;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CACL,8BAAC,+CAAsB,IAAC,OAAO,EAAC,QAAQ;QACtC,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,GAAG;YACrB,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,KAAK;gBACvB,8BAAC,yBAAU,IAAC,UAAU;oBACpB,8BAAC,oBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,GAAI,CAC7C,CACR;YACP,8BAAC,2BAAY,IACX,eAAe,EAAE;oBACf,OAAO,EAAE,aAAa;oBACtB,OAAO,EAAE,WAAW,CAAC,sBAAsB,CAAC,CAAC,CAAC;iBAC/C,EACD,KAAK,EAAE,MAAM,CAAC,MAAM,EACpB,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAA,0BAAgB,EAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gBACrE,CAAC;gBACD,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,QAAQ;oBACzB,WAAW,EAAE;oBACb,WAAW,EAAE,CACT,CACM,CACV,CACgB,CAC1B,CAAC;AACJ,CAAC;AA3CD,4DA2CC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,GAAG,EAAE;QACH,eAAe,EAAE,WAAW,CAAC,kBAAkB,EAAE;QACjD,WAAW,EAAE,CAAC;QACd,WAAW,EAAE,SAAS;QACtB,UAAU,EAAE,EAAE;QACd,WAAW,EAAE,EAAE;QACf,SAAS,EAAE,CAAC;QACZ,YAAY,EAAE,CAAC;KAChB;IACD,KAAK,EAAE;QACL,OAAO,EAAE,EAAE;QACX,iBAAiB,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QAChD,iBAAiB,EAAE,CAAC;KACrB;IACD,MAAM,EAAE;QACN,UAAU,EAAE,EAAE;QACd,aAAa,EAAE,EAAE;KAClB;IACD,OAAO,EAAE;QACP,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,QAAQ,EAAE,EAAE;QACZ,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;QACd,UAAU,EAAE,qBAAS;KACtB;IACD,QAAQ,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,SAAS,EAAE,QAAQ;QACnB,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,EAAE;QACZ,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,qBAAS;KACtB;CACF,CAAC,CAAC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\n\nimport { LogBoxInspectorSection } from './LogBoxInspectorSection';\nimport type { CodeFrame } from '../Data/parseLogBoxLog';\nimport { Ansi } from '../UI/AnsiHighlight';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport { CODE_FONT } from '../UI/constants';\nimport { formatProjectFilePath } from '../formatProjectFilePath';\nimport openFileInEditor from '../modules/openFileInEditor';\n\ndeclare const process: any;\n\nexport function LogBoxInspectorCodeFrame({ codeFrame }: { codeFrame?: CodeFrame }) {\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    return formatProjectFilePath(process.env.EXPO_PROJECT_ROOT, codeFrame?.fileName);\n  }\n\n  function getLocation() {\n    const location = codeFrame?.location;\n    if (location != null) {\n      return ` (${location.row}:${location.column + 1 /* Code frame columns are zero indexed */})`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\">\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView horizontal>\n            <Ansi style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}>\n          <Text style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    borderWidth: 1,\n    borderColor: '#323232',\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: CODE_FONT,\n  },\n  fileText: {\n    userSelect: 'none',\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 16,\n    includeFontPadding: false,\n    fontFamily: CODE_FONT,\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.d.ts.map
index b094d27..df3b638 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorFooter.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorFooter.tsx"],"names":[],"mappings":"AAaA,KAAK,KAAK,GAAG;IACX,SAAS,EAAE,MAAM,IAAI,CAAC;IACtB,UAAU,EAAE,MAAM,IAAI,CAAC;CACxB,CAAC;AAEF,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,KAAK,eAqBjD"}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorFooter.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorFooter.tsx"],"names":[],"mappings":"AAaA,KAAK,KAAK,GAAG;IACX,SAAS,EAAE,MAAM,IAAI,CAAC;IACtB,UAAU,EAAE,MAAM,IAAI,CAAC;CACxB,CAAC;AAEF,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,KAAK,eAmBjD"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.js b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.js
index dd6aee3..02ec419 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.js
@@ -28,81 +28,84 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxInspectorFooter = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-const react_views_1 = require("@bacons/react-views");
 const react_1 = __importDefault(require("react"));
+const react_native_1 = require("react-native");
 const LogContext_1 = require("../Data/LogContext");
 const LogBoxStyle = __importStar(require("../UI/LogBoxStyle"));
 function LogBoxInspectorFooter(props) {
     const log = (0, LogContext_1.useSelectedLog)();
-    if (["static", "syntax"].includes(log.level)) {
-        return (react_1.default.createElement(react_views_1.View, { style: styles.root },
-            react_1.default.createElement(react_views_1.View, { style: styles.button },
-                react_1.default.createElement(react_views_1.Text, { style: styles.syntaxErrorText }, "This error cannot be dismissed."))));
+    if (['static', 'syntax'].includes(log.level)) {
+        return (react_1.default.createElement(react_native_1.View, { style: styles.root },
+            react_1.default.createElement(react_native_1.View, { style: styles.button },
+                react_1.default.createElement(react_native_1.Text, { style: styles.syntaxErrorText }, "This error cannot be dismissed."))));
     }
-    return (react_1.default.createElement(react_views_1.View, { style: styles.root },
+    return (react_1.default.createElement(react_native_1.View, { style: styles.root },
         react_1.default.createElement(FooterButton, { text: "Dismiss", onPress: props.onDismiss }),
         react_1.default.createElement(FooterButton, { text: "Minimize", onPress: props.onMinimize })));
 }
 exports.LogBoxInspectorFooter = LogBoxInspectorFooter;
-function FooterButton({ text, onPress, }) {
-    return (react_1.default.createElement(react_views_1.Pressable, { onPress: onPress, style: { flex: 1 } }, ({ hovered, pressed }) => (react_1.default.createElement(react_views_1.View, { style: [
+function FooterButton({ text, onPress }) {
+    return (react_1.default.createElement(react_native_1.Pressable, { onPress: onPress, style: { flex: 1 } }, ({ 
+    /** @ts-expect-error: react-native types are broken. */
+    hovered, pressed, }) => (react_1.default.createElement(react_native_1.View, { style: [
             buttonStyles.safeArea,
             {
-                transitionDuration: "150ms",
+                // @ts-expect-error: web-only type
+                transitionDuration: '150ms',
                 backgroundColor: pressed
-                    ? "#323232"
+                    ? '#323232'
                     : hovered
-                        ? "#111111"
+                        ? '#111111'
                         : LogBoxStyle.getBackgroundColor(),
             },
         ] },
-        react_1.default.createElement(react_views_1.View, { style: buttonStyles.content },
-            react_1.default.createElement(react_views_1.Text, { style: buttonStyles.label }, text))))));
+        react_1.default.createElement(react_native_1.View, { style: buttonStyles.content },
+            react_1.default.createElement(react_native_1.Text, { style: buttonStyles.label }, text))))));
 }
-const buttonStyles = react_views_1.StyleSheet.create({
+const buttonStyles = react_native_1.StyleSheet.create({
     safeArea: {
         flex: 1,
         borderTopWidth: 1,
-        borderColor: "#323232",
+        borderColor: '#323232',
         // paddingBottom: DeviceInfo.getConstants().isIPhoneX_deprecated ? 30 : 0,
     },
     content: {
-        alignItems: "center",
+        alignItems: 'center',
         height: 48,
-        justifyContent: "center",
+        justifyContent: 'center',
     },
     label: {
-        userSelect: "none",
+        userSelect: 'none',
         color: LogBoxStyle.getTextColor(1),
         fontSize: 14,
         includeFontPadding: false,
         lineHeight: 20,
     },
 });
-const styles = react_views_1.StyleSheet.create({
+const styles = react_native_1.StyleSheet.create({
     root: {
         backgroundColor: LogBoxStyle.getBackgroundColor(1),
         boxShadow: `0 -2px 0 2px #000`,
-        flexDirection: "row",
+        flexDirection: 'row',
     },
     button: {
         flex: 1,
     },
     syntaxErrorText: {
-        textAlign: "center",
-        width: "100%",
+        textAlign: 'center',
+        width: '100%',
         height: 48,
         fontSize: 14,
         lineHeight: 20,
         paddingTop: 20,
         paddingBottom: 50,
-        fontStyle: "italic",
+        fontStyle: 'italic',
         color: LogBoxStyle.getTextColor(0.6),
     },
 });
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.js.map
index 2e0652c..c9e3c2b 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorFooter.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorFooter.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorFooter.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Pressable, StyleSheet, Text, View } from \"@bacons/react-views\";\nimport React from \"react\";\n\nimport { useSelectedLog } from \"../Data/LogContext\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  onDismiss: () => void;\n  onMinimize: () => void;\n};\n\nexport function LogBoxInspectorFooter(props: Props) {\n  const log = useSelectedLog();\n\n  if ([\"static\", \"syntax\"].includes(log.level)) {\n    return (\n      <View style={styles.root}>\n        <View style={styles.button}>\n          <Text style={styles.syntaxErrorText}>\n            This error cannot be dismissed.\n          </Text>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.root}>\n      <FooterButton text=\"Dismiss\" onPress={props.onDismiss} />\n      <FooterButton text=\"Minimize\" onPress={props.onMinimize} />\n    </View>\n  );\n}\n\nfunction FooterButton({\n  text,\n  onPress,\n}: {\n  onPress: () => void;\n  text: string;\n}) {\n  return (\n    <Pressable onPress={onPress} style={{ flex: 1 }}>\n      {({ hovered, pressed }) => (\n        <View\n          style={[\n            buttonStyles.safeArea,\n            {\n              transitionDuration: \"150ms\",\n              backgroundColor: pressed\n                ? \"#323232\"\n                : hovered\n                ? \"#111111\"\n                : LogBoxStyle.getBackgroundColor(),\n            },\n          ]}\n        >\n          <View style={buttonStyles.content}>\n            <Text style={buttonStyles.label}>{text}</Text>\n          </View>\n        </View>\n      )}\n    </Pressable>\n  );\n}\n\nconst buttonStyles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    borderTopWidth: 1,\n    borderColor: \"#323232\",\n    // paddingBottom: DeviceInfo.getConstants().isIPhoneX_deprecated ? 30 : 0,\n  },\n  content: {\n    alignItems: \"center\",\n    height: 48,\n    justifyContent: \"center\",\n  },\n  label: {\n    userSelect: \"none\",\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n});\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    boxShadow: `0 -2px 0 2px #000`,\n    flexDirection: \"row\",\n  },\n  button: {\n    flex: 1,\n  },\n  syntaxErrorText: {\n    textAlign: \"center\",\n    width: \"100%\",\n    height: 48,\n    fontSize: 14,\n    lineHeight: 20,\n    paddingTop: 20,\n    paddingBottom: 50,\n    fontStyle: \"italic\",\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorFooter.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorFooter.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { Pressable, StyleSheet, Text, View } from 'react-native';\n\nimport { useSelectedLog } from '../Data/LogContext';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  onDismiss: () => void;\n  onMinimize: () => void;\n};\n\nexport function LogBoxInspectorFooter(props: Props) {\n  const log = useSelectedLog();\n\n  if (['static', 'syntax'].includes(log.level)) {\n    return (\n      <View style={styles.root}>\n        <View style={styles.button}>\n          <Text style={styles.syntaxErrorText}>This error cannot be dismissed.</Text>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.root}>\n      <FooterButton text=\"Dismiss\" onPress={props.onDismiss} />\n      <FooterButton text=\"Minimize\" onPress={props.onMinimize} />\n    </View>\n  );\n}\n\nfunction FooterButton({ text, onPress }: { onPress: () => void; text: string }) {\n  return (\n    <Pressable onPress={onPress} style={{ flex: 1 }}>\n      {({\n        /** @ts-expect-error: react-native types are broken. */\n        hovered,\n        pressed,\n      }) => (\n        <View\n          style={[\n            buttonStyles.safeArea,\n            {\n              // @ts-expect-error: web-only type\n              transitionDuration: '150ms',\n              backgroundColor: pressed\n                ? '#323232'\n                : hovered\n                ? '#111111'\n                : LogBoxStyle.getBackgroundColor(),\n            },\n          ]}>\n          <View style={buttonStyles.content}>\n            <Text style={buttonStyles.label}>{text}</Text>\n          </View>\n        </View>\n      )}\n    </Pressable>\n  );\n}\n\nconst buttonStyles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    borderTopWidth: 1,\n    borderColor: '#323232',\n    // paddingBottom: DeviceInfo.getConstants().isIPhoneX_deprecated ? 30 : 0,\n  },\n  content: {\n    alignItems: 'center',\n    height: 48,\n    justifyContent: 'center',\n  },\n  label: {\n    userSelect: 'none',\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n});\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    boxShadow: `0 -2px 0 2px #000`,\n    flexDirection: 'row',\n  },\n  button: {\n    flex: 1,\n  },\n  syntaxErrorText: {\n    textAlign: 'center',\n    width: '100%',\n    height: 48,\n    fontSize: 14,\n    lineHeight: 20,\n    paddingTop: 20,\n    paddingBottom: 50,\n    fontStyle: 'italic',\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.d.ts
index c3b5eb1..5837223 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.d.ts
@@ -1,4 +1,4 @@
-import type { LogLevel } from "../Data/LogBoxLog";
+import type { LogLevel } from '../Data/LogBoxLog';
 type Props = {
     onSelectIndex: (selectedIndex: number) => void;
     level: LogLevel;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.d.ts.map
index 114190b..cc69404 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorHeader.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorHeader.tsx"],"names":[],"mappings":"AAiBA,OAAO,KAAK,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAKlD,KAAK,KAAK,GAAG;IACX,aAAa,EAAE,CAAC,aAAa,EAAE,MAAM,KAAK,IAAI,CAAC;IAC/C,KAAK,EAAE,QAAQ,CAAC;CACjB,CAAC;AAEF,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,KAAK,eA0CjD"}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorHeader.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorHeader.tsx"],"names":[],"mappings":"AAUA,OAAO,KAAK,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAKlD,KAAK,KAAK,GAAG;IACX,aAAa,EAAE,CAAC,aAAa,EAAE,MAAM,KAAK,IAAI,CAAC;IAC/C,KAAK,EAAE,QAAQ,CAAC;CACjB,CAAC;AAEF,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,KAAK,eA0CjD"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.js b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.js
index 161ac6e..b21ed05 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.js
@@ -28,7 +28,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxInspectorHeader = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -42,7 +42,7 @@ const LogBoxStyle = __importStar(require("../UI/LogBoxStyle"));
 function LogBoxInspectorHeader(props) {
     const { selectedLogIndex: selectedIndex, logs } = (0, LogContext_1.useLogs)();
     const total = logs.length;
-    if (props.level === "syntax") {
+    if (props.level === 'syntax') {
         return (react_1.default.createElement(react_native_1.View, { style: [styles.safeArea, styles[props.level]] },
             react_1.default.createElement(react_native_1.View, { style: styles.header },
                 react_1.default.createElement(react_native_1.View, { style: styles.title },
@@ -53,41 +53,41 @@ function LogBoxInspectorHeader(props) {
     const titleText = `Log ${selectedIndex + 1} of ${total}`;
     return (react_1.default.createElement(react_native_1.View, { style: [styles.safeArea, styles[props.level]] },
         react_1.default.createElement(react_native_1.View, { style: styles.header },
-            react_1.default.createElement(LogBoxInspectorHeaderButton, { disabled: total <= 1, level: props.level, image: require("@expo/metro-runtime/assets/chevron-left.png"), onPress: () => props.onSelectIndex(prevIndex) }),
+            react_1.default.createElement(LogBoxInspectorHeaderButton, { disabled: total <= 1, level: props.level, image: require('@expo/metro-runtime/assets/chevron-left.png'), onPress: () => props.onSelectIndex(prevIndex) }),
             react_1.default.createElement(react_native_1.View, { style: styles.title },
                 react_1.default.createElement(react_native_1.Text, { style: styles.titleText }, titleText)),
-            react_1.default.createElement(LogBoxInspectorHeaderButton, { disabled: total <= 1, level: props.level, image: require("@expo/metro-runtime/assets/chevron-right.png"), onPress: () => props.onSelectIndex(nextIndex) }))));
+            react_1.default.createElement(LogBoxInspectorHeaderButton, { disabled: total <= 1, level: props.level, image: require('@expo/metro-runtime/assets/chevron-right.png'), onPress: () => props.onSelectIndex(nextIndex) }))));
 }
 exports.LogBoxInspectorHeader = LogBoxInspectorHeader;
 const backgroundForLevel = (level) => ({
     warn: {
-        default: "transparent",
+        default: 'transparent',
         pressed: LogBoxStyle.getWarningDarkColor(),
     },
     error: {
-        default: "transparent",
+        default: 'transparent',
         pressed: LogBoxStyle.getErrorDarkColor(),
     },
     fatal: {
-        default: "transparent",
+        default: 'transparent',
         pressed: LogBoxStyle.getFatalDarkColor(),
     },
     syntax: {
-        default: "transparent",
+        default: 'transparent',
         pressed: LogBoxStyle.getFatalDarkColor(),
     },
     static: {
-        default: "transparent",
+        default: 'transparent',
         pressed: LogBoxStyle.getFatalDarkColor(),
     },
-}[level]);
+})[level];
 function LogBoxInspectorHeaderButton(props) {
     return (react_1.default.createElement(LogBoxButton_1.LogBoxButton, { backgroundColor: backgroundForLevel(props.level), onPress: props.disabled ? undefined : props.onPress, style: headerStyles.button }, props.disabled ? null : (react_1.default.createElement(react_native_1.Image, { source: props.image, tintColor: LogBoxStyle.getTextColor(), style: headerStyles.buttonImage }))));
 }
 const headerStyles = react_native_1.StyleSheet.create({
     button: {
-        alignItems: "center",
-        justifyContent: "center",
+        alignItems: 'center',
+        justifyContent: 'center',
         aspectRatio: 1,
         marginRight: 6,
         marginLeft: 6,
@@ -115,8 +115,8 @@ const styles = react_native_1.StyleSheet.create({
         backgroundColor: LogBoxStyle.getErrorColor(),
     },
     header: {
-        flexDirection: "row",
-        alignItems: "center",
+        flexDirection: 'row',
+        alignItems: 'center',
         paddingHorizontal: 8,
         height: react_native_1.Platform.select({
             default: 48,
@@ -124,19 +124,19 @@ const styles = react_native_1.StyleSheet.create({
         }),
     },
     title: {
-        alignItems: "center",
+        alignItems: 'center',
         flex: 1,
-        justifyContent: "center",
+        justifyContent: 'center',
     },
     titleText: {
         color: LogBoxStyle.getTextColor(),
         fontSize: 16,
-        fontWeight: "600",
+        fontWeight: '600',
         includeFontPadding: false,
         lineHeight: 20,
     },
     safeArea: {
-        paddingTop: react_native_1.Platform.OS !== "ios" ? react_native_1.StatusBar.currentHeight : 40,
+        paddingTop: react_native_1.Platform.OS !== 'ios' ? react_native_1.StatusBar.currentHeight : 40,
     },
 });
 //# sourceMappingURL=LogBoxInspectorHeader.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.js.map
index 5cbfe4a..0f818cb 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorHeader.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorHeader.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport {\n  Image,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\n\nimport type { LogLevel } from \"../Data/LogBoxLog\";\nimport { useLogs } from \"../Data/LogContext\";\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  onSelectIndex: (selectedIndex: number) => void;\n  level: LogLevel;\n};\n\nexport function LogBoxInspectorHeader(props: Props) {\n  const { selectedLogIndex: selectedIndex, logs } = useLogs();\n  const total = logs.length;\n\n  if (props.level === \"syntax\") {\n    return (\n      <View style={[styles.safeArea, styles[props.level]]}>\n        <View style={styles.header}>\n          <View style={styles.title}>\n            <Text style={styles.titleText}>Failed to compile</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  const prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  const nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n\n  const titleText = `Log ${selectedIndex + 1} of ${total}`;\n\n  return (\n    <View style={[styles.safeArea, styles[props.level]]}>\n      <View style={styles.header}>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require(\"@expo/metro-runtime/assets/chevron-left.png\")}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.title}>\n          <Text style={styles.titleText}>{titleText}</Text>\n        </View>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require(\"@expo/metro-runtime/assets/chevron-right.png\")}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    static: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  }[level]);\n\nfunction LogBoxInspectorHeaderButton(props: {\n  disabled: boolean;\n  image: number;\n  level: LogLevel;\n  onPress?: () => void;\n}) {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? undefined : props.onPress}\n      style={headerStyles.button}\n    >\n      {props.disabled ? null : (\n        <Image\n          source={props.image}\n          tintColor={LogBoxStyle.getTextColor()}\n          style={headerStyles.buttonImage}\n        />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    aspectRatio: 1,\n    marginRight: 6,\n    marginLeft: 6,\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  static: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(),\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n\n    paddingHorizontal: 8,\n    height: Platform.select({\n      default: 48,\n      ios: 44,\n    }),\n  },\n  title: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: \"600\",\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  safeArea: {\n    paddingTop: Platform.OS !== \"ios\" ? StatusBar.currentHeight : 40,\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorHeader.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { Image, Platform, StatusBar, StyleSheet, Text, View } from 'react-native';\n\nimport type { LogLevel } from '../Data/LogBoxLog';\nimport { useLogs } from '../Data/LogContext';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  onSelectIndex: (selectedIndex: number) => void;\n  level: LogLevel;\n};\n\nexport function LogBoxInspectorHeader(props: Props) {\n  const { selectedLogIndex: selectedIndex, logs } = useLogs();\n  const total = logs.length;\n\n  if (props.level === 'syntax') {\n    return (\n      <View style={[styles.safeArea, styles[props.level]]}>\n        <View style={styles.header}>\n          <View style={styles.title}>\n            <Text style={styles.titleText}>Failed to compile</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  const prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  const nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n\n  const titleText = `Log ${selectedIndex + 1} of ${total}`;\n\n  return (\n    <View style={[styles.safeArea, styles[props.level]]}>\n      <View style={styles.header}>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require('@expo/metro-runtime/assets/chevron-left.png')}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.title}>\n          <Text style={styles.titleText}>{titleText}</Text>\n        </View>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require('@expo/metro-runtime/assets/chevron-right.png')}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    static: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  })[level];\n\nfunction LogBoxInspectorHeaderButton(props: {\n  disabled: boolean;\n  image: number;\n  level: LogLevel;\n  onPress?: () => void;\n}) {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? undefined : props.onPress}\n      style={headerStyles.button}>\n      {props.disabled ? null : (\n        <Image\n          source={props.image}\n          tintColor={LogBoxStyle.getTextColor()}\n          style={headerStyles.buttonImage}\n        />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    aspectRatio: 1,\n    marginRight: 6,\n    marginLeft: 6,\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  static: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(),\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    paddingHorizontal: 8,\n    height: Platform.select({\n      default: 48,\n      ios: 44,\n    }),\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  safeArea: {\n    paddingTop: Platform.OS !== 'ios' ? StatusBar.currentHeight : 40,\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.d.ts
index 37360a3..dd0aaec 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.d.ts
@@ -1,5 +1,5 @@
-import type { LogLevel } from "../Data/LogBoxLog";
-import type { Message } from "../Data/parseLogBoxLog";
+import type { LogLevel } from '../Data/LogBoxLog';
+import type { Message } from '../Data/parseLogBoxLog';
 type Props = {
     collapsed: boolean;
     message: Message;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.d.ts.map
index 3936b9a..a65953f 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorMessageHeader.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorMessageHeader.tsx"],"names":[],"mappings":"AAUA,OAAO,KAAK,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,KAAK,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAItD,KAAK,KAAK,GAAG;IACX,SAAS,EAAE,OAAO,CAAC;IACnB,OAAO,EAAE,OAAO,CAAC;IACjB,KAAK,EAAE,QAAQ,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,MAAM,IAAI,CAAC;CACrB,CAAC;AAmBF,wBAAgB,4BAA4B,CAAC,KAAK,EAAE,KAAK,eAkBxD"}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorMessageHeader.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorMessageHeader.tsx"],"names":[],"mappings":"AAUA,OAAO,KAAK,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,KAAK,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAItD,KAAK,KAAK,GAAG;IACX,SAAS,EAAE,OAAO,CAAC;IACnB,OAAO,EAAE,OAAO,CAAC;IACjB,KAAK,EAAE,QAAQ,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,MAAM,IAAI,CAAC;CACrB,CAAC;AAmBF,wBAAgB,4BAA4B,CAAC,KAAK,EAAE,KAAK,eAgBxD"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.js b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.js
index dd41c1c..7970fd0 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.js
@@ -28,7 +28,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxInspectorMessageHeader = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -64,13 +64,13 @@ const styles = react_native_1.StyleSheet.create({
         fontSize: 14,
         includeFontPadding: false,
         lineHeight: 20,
-        fontWeight: "500",
+        fontWeight: '500',
         paddingHorizontal: 12,
         paddingBottom: 10,
     },
     heading: {
-        alignItems: "center",
-        flexDirection: "row",
+        alignItems: 'center',
+        flexDirection: 'row',
         paddingHorizontal: 12,
         marginTop: 10,
         marginBottom: 5,
@@ -78,7 +78,7 @@ const styles = react_native_1.StyleSheet.create({
     headingText: {
         flex: 1,
         fontSize: 20,
-        fontWeight: "600",
+        fontWeight: '600',
         includeFontPadding: false,
         lineHeight: 28,
     },
@@ -103,7 +103,7 @@ const styles = react_native_1.StyleSheet.create({
     collapse: {
         color: LogBoxStyle.getTextColor(0.7),
         fontSize: 14,
-        fontWeight: "300",
+        fontWeight: '300',
         lineHeight: 12,
     },
     button: {
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.js.map
index 0eaf0eb..644d52e 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorMessageHeader.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorMessageHeader.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorMessageHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport type { LogLevel } from \"../Data/LogBoxLog\";\nimport type { Message } from \"../Data/parseLogBoxLog\";\nimport { LogBoxMessage } from \"../UI/LogBoxMessage\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  collapsed: boolean;\n  message: Message;\n  level: LogLevel;\n  title: string;\n  onPress: () => void;\n};\n\nconst SHOW_MORE_MESSAGE_LENGTH = 300;\n\nfunction ShowMoreButton({\n  message,\n  collapsed,\n  onPress,\n}: Pick<Props, \"collapsed\" | \"message\" | \"onPress\">) {\n  if (message.content.length < SHOW_MORE_MESSAGE_LENGTH || !collapsed) {\n    return null;\n  }\n  return (\n    <Text style={styles.collapse} onPress={onPress}>\n      ... See More\n    </Text>\n  );\n}\n\nexport function LogBoxInspectorMessageHeader(props: Props) {\n  return (\n    <View style={styles.body}>\n      <View style={styles.heading}>\n        <Text style={[styles.headingText, styles[props.level]]}>\n          {props.title}\n        </Text>\n      </View>\n      <Text style={styles.bodyText}>\n        <LogBoxMessage\n          maxLength={props.collapsed ? SHOW_MORE_MESSAGE_LENGTH : Infinity}\n          message={props.message}\n          style={styles.messageText}\n        />\n        <ShowMoreButton {...props} />\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  body: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    boxShadow: `0 2px 0 2px #00000080`,\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontWeight: \"500\",\n    paddingHorizontal: 12,\n    paddingBottom: 10,\n  },\n  heading: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingHorizontal: 12,\n    marginTop: 10,\n    marginBottom: 5,\n  },\n  headingText: {\n    flex: 1,\n    fontSize: 20,\n    fontWeight: \"600\",\n    includeFontPadding: false,\n    lineHeight: 28,\n  },\n  warn: {\n    color: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    color: LogBoxStyle.getErrorColor(1),\n  },\n  fatal: {\n    color: LogBoxStyle.getFatalColor(1),\n  },\n  syntax: {\n    color: LogBoxStyle.getFatalColor(1),\n  },\n  static: {\n    color: LogBoxStyle.getFatalColor(1),\n  },\n  messageText: {\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 14,\n    fontWeight: \"300\",\n    lineHeight: 12,\n  },\n  button: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 3,\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorMessageHeader.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorMessageHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport type { LogLevel } from '../Data/LogBoxLog';\nimport type { Message } from '../Data/parseLogBoxLog';\nimport { LogBoxMessage } from '../UI/LogBoxMessage';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  collapsed: boolean;\n  message: Message;\n  level: LogLevel;\n  title: string;\n  onPress: () => void;\n};\n\nconst SHOW_MORE_MESSAGE_LENGTH = 300;\n\nfunction ShowMoreButton({\n  message,\n  collapsed,\n  onPress,\n}: Pick<Props, 'collapsed' | 'message' | 'onPress'>) {\n  if (message.content.length < SHOW_MORE_MESSAGE_LENGTH || !collapsed) {\n    return null;\n  }\n  return (\n    <Text style={styles.collapse} onPress={onPress}>\n      ... See More\n    </Text>\n  );\n}\n\nexport function LogBoxInspectorMessageHeader(props: Props) {\n  return (\n    <View style={styles.body}>\n      <View style={styles.heading}>\n        <Text style={[styles.headingText, styles[props.level]]}>{props.title}</Text>\n      </View>\n      <Text style={styles.bodyText}>\n        <LogBoxMessage\n          maxLength={props.collapsed ? SHOW_MORE_MESSAGE_LENGTH : Infinity}\n          message={props.message}\n          style={styles.messageText}\n        />\n        <ShowMoreButton {...props} />\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  body: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    boxShadow: `0 2px 0 2px #00000080`,\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontWeight: '500',\n    paddingHorizontal: 12,\n    paddingBottom: 10,\n  },\n  heading: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    marginTop: 10,\n    marginBottom: 5,\n  },\n  headingText: {\n    flex: 1,\n    fontSize: 20,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 28,\n  },\n  warn: {\n    color: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    color: LogBoxStyle.getErrorColor(1),\n  },\n  fatal: {\n    color: LogBoxStyle.getFatalColor(1),\n  },\n  syntax: {\n    color: LogBoxStyle.getFatalColor(1),\n  },\n  static: {\n    color: LogBoxStyle.getFatalColor(1),\n  },\n  messageText: {\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 14,\n    fontWeight: '300',\n    lineHeight: 12,\n  },\n  button: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 3,\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.d.ts
index d490e1d..38af8fa 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.d.ts
@@ -1,11 +1,11 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-import React from "react";
+import React from 'react';
 type Props = {
     heading: string;
     children: React.ReactNode;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.js b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.js
index fdd5fba..f047980 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.js
@@ -28,7 +28,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxInspectorSection = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -50,8 +50,8 @@ const styles = react_native_1.StyleSheet.create({
         marginTop: 15,
     },
     heading: {
-        alignItems: "center",
-        flexDirection: "row",
+        alignItems: 'center',
+        flexDirection: 'row',
         paddingHorizontal: 12,
         marginBottom: 10,
     },
@@ -59,7 +59,7 @@ const styles = react_native_1.StyleSheet.create({
         color: LogBoxStyle.getTextColor(1),
         flex: 1,
         fontSize: 18,
-        fontWeight: "600",
+        fontWeight: '600',
         includeFontPadding: false,
         lineHeight: 20,
     },
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.js.map
index c87f1e7..9ce2beb 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSection.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorSection.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorSection.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,kDAA0B;AAC1B,+CAAsD;AAEtD,+DAAiD;AAQjD,SAAgB,sBAAsB,CAAC,KAAY;IACjD,OAAO,CACL,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,OAAO;QACzB,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,OAAO;YACzB,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,WAAW,IAAG,KAAK,CAAC,OAAO,CAAQ;YACtD,KAAK,CAAC,MAAM,CACR;QACP,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,IAAI,IAAG,KAAK,CAAC,QAAQ,CAAQ,CAC5C,CACR,CAAC;AACJ,CAAC;AAVD,wDAUC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,OAAO,EAAE;QACP,SAAS,EAAE,EAAE;KACd;IACD,OAAO,EAAE;QACP,UAAU,EAAE,QAAQ;QACpB,aAAa,EAAE,KAAK;QACpB,iBAAiB,EAAE,EAAE;QACrB,YAAY,EAAE,EAAE;KACjB;IACD,WAAW,EAAE;QACX,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;KACf;IACD,IAAI,EAAE;QACJ,aAAa,EAAE,EAAE;KAClB;CACF,CAAC,CAAC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  heading: string;\n  children: React.ReactNode;\n  action?: any;\n};\n\nexport function LogBoxInspectorSection(props: Props) {\n  return (\n    <View style={styles.section}>\n      <View style={styles.heading}>\n        <Text style={styles.headingText}>{props.heading}</Text>\n        {props.action}\n      </View>\n      <View style={styles.body}>{props.children}</View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  section: {\n    marginTop: 15,\n  },\n  heading: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingHorizontal: 12,\n    marginBottom: 10,\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 18,\n    fontWeight: \"600\",\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  body: {\n    paddingBottom: 10,\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorSection.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorSection.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,kDAA0B;AAC1B,+CAAsD;AAEtD,+DAAiD;AAQjD,SAAgB,sBAAsB,CAAC,KAAY;IACjD,OAAO,CACL,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,OAAO;QACzB,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,OAAO;YACzB,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,WAAW,IAAG,KAAK,CAAC,OAAO,CAAQ;YACtD,KAAK,CAAC,MAAM,CACR;QACP,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,IAAI,IAAG,KAAK,CAAC,QAAQ,CAAQ,CAC5C,CACR,CAAC;AACJ,CAAC;AAVD,wDAUC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,OAAO,EAAE;QACP,SAAS,EAAE,EAAE;KACd;IACD,OAAO,EAAE;QACP,UAAU,EAAE,QAAQ;QACpB,aAAa,EAAE,KAAK;QACpB,iBAAiB,EAAE,EAAE;QACrB,YAAY,EAAE,EAAE;KACjB;IACD,WAAW,EAAE;QACX,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;KACf;IACD,IAAI,EAAE;QACJ,aAAa,EAAE,EAAE;KAClB;CACF,CAAC,CAAC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  heading: string;\n  children: React.ReactNode;\n  action?: any;\n};\n\nexport function LogBoxInspectorSection(props: Props) {\n  return (\n    <View style={styles.section}>\n      <View style={styles.heading}>\n        <Text style={styles.headingText}>{props.heading}</Text>\n        {props.action}\n      </View>\n      <View style={styles.body}>{props.children}</View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  section: {\n    marginTop: 15,\n  },\n  heading: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    marginBottom: 10,\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 18,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  body: {\n    paddingBottom: 10,\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.d.ts
index 038cb44..5ed43d9 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.d.ts
@@ -1,7 +1,7 @@
-import { GestureResponderEvent } from "react-native";
+import { GestureResponderEvent } from 'react-native';
 type Props = {
     onPress?: ((event: GestureResponderEvent) => void) | null;
-    status: "COMPLETE" | "FAILED" | "NONE" | "PENDING";
+    status: 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING';
 };
 export declare function LogBoxInspectorSourceMapStatus(props: Props): JSX.Element | null;
 export {};
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.d.ts.map
index 6f3a2e9..f17df82 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorSourceMapStatus.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorSourceMapStatus.tsx"],"names":[],"mappings":"AAQA,OAAO,EAGL,qBAAqB,EAGtB,MAAM,cAAc,CAAC;AAKtB,KAAK,KAAK,GAAG;IACX,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,qBAAqB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC;IAC1D,MAAM,EAAE,UAAU,GAAG,QAAQ,GAAG,MAAM,GAAG,SAAS,CAAC;CACpD,CAAC;AAEF,wBAAgB,8BAA8B,CAAC,KAAK,EAAE,KAAK,sBAuF1D"}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorSourceMapStatus.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorSourceMapStatus.tsx"],"names":[],"mappings":"AAQA,OAAO,EAAoB,qBAAqB,EAAoB,MAAM,cAAc,CAAC;AAKzF,KAAK,KAAK,GAAG;IACX,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,qBAAqB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC;IAC1D,MAAM,EAAE,UAAU,GAAG,QAAQ,GAAG,MAAM,GAAG,SAAS,CAAC;CACpD,CAAC;AAEF,wBAAgB,8BAA8B,CAAC,KAAK,EAAE,KAAK,sBAsF1D"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.js b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.js
index b36c3d8..c0a0619 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.js
@@ -25,7 +25,7 @@ var __importStar = (this && this.__importStar) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxInspectorSourceMapStatus = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -41,7 +41,7 @@ function LogBoxInspectorSourceMapStatus(props) {
         rotate: null,
     });
     (0, react_1.useEffect)(() => {
-        if (props.status === "PENDING") {
+        if (props.status === 'PENDING') {
             if (state.animation == null) {
                 const animated = new react_native_1.Animated.Value(0);
                 const animation = react_native_1.Animated.loop(react_native_1.Animated.timing(animated, {
@@ -54,7 +54,7 @@ function LogBoxInspectorSourceMapStatus(props) {
                     animation,
                     rotate: animated.interpolate({
                         inputRange: [0, 1],
-                        outputRange: ["0deg", "360deg"],
+                        outputRange: ['0deg', '360deg'],
                     }),
                 });
                 animation.start();
@@ -78,25 +78,25 @@ function LogBoxInspectorSourceMapStatus(props) {
     let image;
     let color;
     switch (props.status) {
-        case "FAILED":
-            image = require("@expo/metro-runtime/assets/alert-triangle.png");
+        case 'FAILED':
+            image = require('@expo/metro-runtime/assets/alert-triangle.png');
             color = LogBoxStyle.getErrorColor(1);
             break;
-        case "PENDING":
-            image = require("@expo/metro-runtime/assets/loader.png");
+        case 'PENDING':
+            image = require('@expo/metro-runtime/assets/loader.png');
             color = LogBoxStyle.getWarningColor(1);
             break;
     }
-    if (props.status === "COMPLETE" || image == null) {
+    if (props.status === 'COMPLETE' || image == null) {
         return null;
     }
     return (react_1.default.createElement(LogBoxButton_1.LogBoxButton, { backgroundColor: {
-            default: "transparent",
+            default: 'transparent',
             pressed: LogBoxStyle.getBackgroundColor(1),
         }, hitSlop: { bottom: 8, left: 8, right: 8, top: 8 }, onPress: props.onPress, style: styles.root },
-        react_1.default.createElement(react_native_1.Animated.Image, { source: image, tintColor: color !== null && color !== void 0 ? color : LogBoxStyle.getTextColor(0.4), style: [
+        react_1.default.createElement(react_native_1.Animated.Image, { source: image, tintColor: color ?? LogBoxStyle.getTextColor(0.4), style: [
                 styles.image,
-                state.rotate == null || props.status !== "PENDING"
+                state.rotate == null || props.status !== 'PENDING'
                     ? null
                     : { transform: [{ rotate: state.rotate }] },
             ] }),
@@ -105,9 +105,9 @@ function LogBoxInspectorSourceMapStatus(props) {
 exports.LogBoxInspectorSourceMapStatus = LogBoxInspectorSourceMapStatus;
 const styles = react_native_1.StyleSheet.create({
     root: {
-        alignItems: "center",
+        alignItems: 'center',
         borderRadius: 12,
-        flexDirection: "row",
+        flexDirection: 'row',
         height: 24,
         paddingHorizontal: 8,
     },
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.js.map
index b2e1037..496435a 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorSourceMapStatus.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorSourceMapStatus.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorSourceMapStatus.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  StyleSheet,\n  Text,\n} from \"react-native\";\n\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  onPress?: ((event: GestureResponderEvent) => void) | null;\n  status: \"COMPLETE\" | \"FAILED\" | \"NONE\" | \"PENDING\";\n};\n\nexport function LogBoxInspectorSourceMapStatus(props: Props) {\n  const [state, setState] = useState<{\n    animation: null | Animated.CompositeAnimation;\n    rotate: null | Animated.AnimatedInterpolation<string>;\n  }>({\n    animation: null,\n    rotate: null,\n  });\n\n  useEffect(() => {\n    if (props.status === \"PENDING\") {\n      if (state.animation == null) {\n        const animated = new Animated.Value(0);\n        const animation = Animated.loop(\n          Animated.timing(animated, {\n            duration: 2000,\n            easing: Easing.linear,\n            toValue: 1,\n            useNativeDriver: true,\n          })\n        );\n        setState({\n          animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\"0deg\", \"360deg\"],\n          }),\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null,\n        });\n      }\n    }\n\n    return () => {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n\n  let image;\n  let color;\n  switch (props.status) {\n    case \"FAILED\":\n      image = require(\"@expo/metro-runtime/assets/alert-triangle.png\");\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case \"PENDING\":\n      image = require(\"@expo/metro-runtime/assets/loader.png\");\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n\n  if (props.status === \"COMPLETE\" || image == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: \"transparent\",\n        pressed: LogBoxStyle.getBackgroundColor(1),\n      }}\n      hitSlop={{ bottom: 8, left: 8, right: 8, top: 8 }}\n      onPress={props.onPress}\n      style={styles.root}\n    >\n      <Animated.Image\n        source={image}\n        tintColor={color ?? LogBoxStyle.getTextColor(0.4)}\n        style={[\n          styles.image,\n          state.rotate == null || props.status !== \"PENDING\"\n            ? null\n            : { transform: [{ rotate: state.rotate }] },\n        ]}\n      />\n      <Text style={[styles.text, { color }]}>Source Map</Text>\n    </LogBoxButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: \"center\",\n    borderRadius: 12,\n    flexDirection: \"row\",\n    height: 24,\n    paddingHorizontal: 8,\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4,\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorSourceMapStatus.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorSourceMapStatus.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState } from 'react';\nimport { Animated, Easing, GestureResponderEvent, StyleSheet, Text } from 'react-native';\n\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  onPress?: ((event: GestureResponderEvent) => void) | null;\n  status: 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING';\n};\n\nexport function LogBoxInspectorSourceMapStatus(props: Props) {\n  const [state, setState] = useState<{\n    animation: null | Animated.CompositeAnimation;\n    rotate: null | Animated.AnimatedInterpolation<string>;\n  }>({\n    animation: null,\n    rotate: null,\n  });\n\n  useEffect(() => {\n    if (props.status === 'PENDING') {\n      if (state.animation == null) {\n        const animated = new Animated.Value(0);\n        const animation = Animated.loop(\n          Animated.timing(animated, {\n            duration: 2000,\n            easing: Easing.linear,\n            toValue: 1,\n            useNativeDriver: true,\n          })\n        );\n        setState({\n          animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null,\n        });\n      }\n    }\n\n    return () => {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n\n  let image;\n  let color;\n  switch (props.status) {\n    case 'FAILED':\n      image = require('@expo/metro-runtime/assets/alert-triangle.png');\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case 'PENDING':\n      image = require('@expo/metro-runtime/assets/loader.png');\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n\n  if (props.status === 'COMPLETE' || image == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: 'transparent',\n        pressed: LogBoxStyle.getBackgroundColor(1),\n      }}\n      hitSlop={{ bottom: 8, left: 8, right: 8, top: 8 }}\n      onPress={props.onPress}\n      style={styles.root}>\n      <Animated.Image\n        source={image}\n        tintColor={color ?? LogBoxStyle.getTextColor(0.4)}\n        style={[\n          styles.image,\n          state.rotate == null || props.status !== 'PENDING'\n            ? null\n            : { transform: [{ rotate: state.rotate }] },\n        ]}\n      />\n      <Text style={[styles.text, { color }]}>Source Map</Text>\n    </LogBoxButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    paddingHorizontal: 8,\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4,\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.d.ts
index fcde232..90d2ff6 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.d.ts
@@ -1,5 +1,5 @@
-import { GestureResponderEvent } from "react-native";
-import { StackFrame } from "stacktrace-parser";
+import { GestureResponderEvent } from 'react-native';
+import { StackFrame } from 'stacktrace-parser';
 type Props = {
     frame: StackFrame & {
         collapse?: boolean;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.d.ts.map
index 6f16c8e..0e0c11e 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorStackFrame.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrame.tsx"],"names":[],"mappings":"AAQA,OAAO,EAAE,qBAAqB,EAA0B,MAAM,cAAc,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAS/C,KAAK,KAAK,GAAG;IACX,KAAK,EAAE,UAAU,GAAG;QAAE,QAAQ,CAAC,EAAE,OAAO,CAAA;KAAE,CAAC;IAC3C,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,qBAAqB,KAAK,IAAI,CAAC;CAClD,CAAC;AAEF,wBAAgB,yBAAyB,CAAC,KAAK,EAAE,KAAK,eA6BrD"}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorStackFrame.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrame.tsx"],"names":[],"mappings":"AAQA,OAAO,EAAE,qBAAqB,EAA0B,MAAM,cAAc,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAS/C,KAAK,KAAK,GAAG;IACX,KAAK,EAAE,UAAU,GAAG;QAAE,QAAQ,CAAC,EAAE,OAAO,CAAA;KAAE,CAAC;IAC3C,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,qBAAqB,KAAK,IAAI,CAAC;CAClD,CAAC;AAEF,wBAAgB,yBAAyB,CAAC,KAAK,EAAE,KAAK,eAsBrD"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.js b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.js
index cdb87e2..4bdf608 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.js
@@ -28,7 +28,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxInspectorStackFrame = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -45,8 +45,8 @@ function LogBoxInspectorStackFrame(props) {
     const location = (0, formatProjectFilePath_1.getStackFormattedLocation)(process.env.EXPO_PROJECT_ROOT, frame);
     return (react_1.default.createElement(react_native_1.View, { style: styles.frameContainer },
         react_1.default.createElement(LogBoxButton_1.LogBoxButton, { backgroundColor: {
-                default: "transparent",
-                pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : "transparent",
+                default: 'transparent',
+                pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent',
             }, onPress: onPress, style: styles.frame },
             react_1.default.createElement(react_native_1.Text, { style: [styles.name, frame.collapse === true && styles.dim] }, frame.methodName),
             react_1.default.createElement(react_native_1.Text, { ellipsizeMode: "middle", numberOfLines: 1, style: [styles.location, frame.collapse === true && styles.dim] }, location))));
@@ -54,7 +54,7 @@ function LogBoxInspectorStackFrame(props) {
 exports.LogBoxInspectorStackFrame = LogBoxInspectorStackFrame;
 const styles = react_native_1.StyleSheet.create({
     frameContainer: {
-        flexDirection: "row",
+        flexDirection: 'row',
         paddingHorizontal: 15,
     },
     frame: {
@@ -64,32 +64,32 @@ const styles = react_native_1.StyleSheet.create({
         borderRadius: 5,
     },
     lineLocation: {
-        flexDirection: "row",
+        flexDirection: 'row',
     },
     name: {
         color: LogBoxStyle.getTextColor(1),
         fontSize: 14,
         includeFontPadding: false,
         lineHeight: 18,
-        fontWeight: "400",
+        fontWeight: '400',
         fontFamily: constants_1.CODE_FONT,
     },
     location: {
         color: LogBoxStyle.getTextColor(0.8),
         fontSize: 12,
-        fontWeight: "300",
+        fontWeight: '300',
         includeFontPadding: false,
         lineHeight: 16,
         paddingLeft: 10,
     },
     dim: {
         color: LogBoxStyle.getTextColor(0.4),
-        fontWeight: "300",
+        fontWeight: '300',
     },
     line: {
         color: LogBoxStyle.getTextColor(0.8),
         fontSize: 12,
-        fontWeight: "300",
+        fontWeight: '300',
         includeFontPadding: false,
         lineHeight: 16,
     },
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.js.map
index dce5c39..22c3ba3 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrame.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorStackFrame.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrame.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,kDAA0B;AAC1B,+CAA6E;AAG7E,qDAAkD;AAClD,+DAAiD;AACjD,+CAA4C;AAC5C,oEAAqE;AASrE,SAAgB,yBAAyB,CAAC,KAAY;IACpD,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,QAAQ,GAAG,IAAA,iDAAyB,EACxC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAC7B,KAAK,CACN,CAAC;IACF,OAAO,CACL,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,cAAc;QAChC,8BAAC,2BAAY,IACX,eAAe,EAAE;gBACf,OAAO,EAAE,aAAa;gBACtB,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa;aACrE,EACD,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,MAAM,CAAC,KAAK;YAEnB,8BAAC,mBAAI,IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,IAC9D,KAAK,CAAC,UAAU,CACZ;YACP,8BAAC,mBAAI,IACH,aAAa,EAAC,QAAQ,EACtB,aAAa,EAAE,CAAC,EAChB,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,IAE9D,QAAQ,CACJ,CACM,CACV,CACR,CAAC;AACJ,CAAC;AA7BD,8DA6BC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,cAAc,EAAE;QACd,aAAa,EAAE,KAAK;QACpB,iBAAiB,EAAE,EAAE;KACtB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,CAAC;QACP,eAAe,EAAE,CAAC;QAClB,iBAAiB,EAAE,EAAE;QACrB,YAAY,EAAE,CAAC;KAChB;IACD,YAAY,EAAE;QACZ,aAAa,EAAE,KAAK;KACrB;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,QAAQ,EAAE,EAAE;QACZ,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;QACd,UAAU,EAAE,KAAK;QACjB,UAAU,EAAE,qBAAS;KACtB;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;QACd,WAAW,EAAE,EAAE;KAChB;IACD,GAAG,EAAE;QACH,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,UAAU,EAAE,KAAK;KAClB;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;KACf;CACF,CAAC,CAAC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport { GestureResponderEvent, StyleSheet, Text, View } from \"react-native\";\nimport { StackFrame } from \"stacktrace-parser\";\n\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport { CODE_FONT } from \"../UI/constants\";\nimport { getStackFormattedLocation } from \"../formatProjectFilePath\";\n\ndeclare const process: any;\n\ntype Props = {\n  frame: StackFrame & { collapse?: boolean };\n  onPress?: (event: GestureResponderEvent) => void;\n};\n\nexport function LogBoxInspectorStackFrame(props: Props) {\n  const { frame, onPress } = props;\n  const location = getStackFormattedLocation(\n    process.env.EXPO_PROJECT_ROOT,\n    frame\n  );\n  return (\n    <View style={styles.frameContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: \"transparent\",\n          pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : \"transparent\",\n        }}\n        onPress={onPress}\n        style={styles.frame}\n      >\n        <Text style={[styles.name, frame.collapse === true && styles.dim]}>\n          {frame.methodName}\n        </Text>\n        <Text\n          ellipsizeMode=\"middle\"\n          numberOfLines={1}\n          style={[styles.location, frame.collapse === true && styles.dim]}\n        >\n          {location}\n        </Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: \"row\",\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  lineLocation: {\n    flexDirection: \"row\",\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: \"400\",\n    fontFamily: CODE_FONT,\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: \"300\",\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: \"300\",\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: \"300\",\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorStackFrame.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrame.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,kDAA0B;AAC1B,+CAA6E;AAG7E,qDAAkD;AAClD,+DAAiD;AACjD,+CAA4C;AAC5C,oEAAqE;AASrE,SAAgB,yBAAyB,CAAC,KAAY;IACpD,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,QAAQ,GAAG,IAAA,iDAAyB,EAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;IACjF,OAAO,CACL,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,cAAc;QAChC,8BAAC,2BAAY,IACX,eAAe,EAAE;gBACf,OAAO,EAAE,aAAa;gBACtB,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa;aACrE,EACD,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,8BAAC,mBAAI,IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,IAAG,KAAK,CAAC,UAAU,CAAQ;YAC5F,8BAAC,mBAAI,IACH,aAAa,EAAC,QAAQ,EACtB,aAAa,EAAE,CAAC,EAChB,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,IAC9D,QAAQ,CACJ,CACM,CACV,CACR,CAAC;AACJ,CAAC;AAtBD,8DAsBC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,cAAc,EAAE;QACd,aAAa,EAAE,KAAK;QACpB,iBAAiB,EAAE,EAAE;KACtB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,CAAC;QACP,eAAe,EAAE,CAAC;QAClB,iBAAiB,EAAE,EAAE;QACrB,YAAY,EAAE,CAAC;KAChB;IACD,YAAY,EAAE;QACZ,aAAa,EAAE,KAAK;KACrB;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,QAAQ,EAAE,EAAE;QACZ,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;QACd,UAAU,EAAE,KAAK;QACjB,UAAU,EAAE,qBAAS;KACtB;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;QACd,WAAW,EAAE,EAAE;KAChB;IACD,GAAG,EAAE;QACH,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,UAAU,EAAE,KAAK;KAClB;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;KACf;CACF,CAAC,CAAC","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { GestureResponderEvent, StyleSheet, Text, View } from 'react-native';\nimport { StackFrame } from 'stacktrace-parser';\n\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport { CODE_FONT } from '../UI/constants';\nimport { getStackFormattedLocation } from '../formatProjectFilePath';\n\ndeclare const process: any;\n\ntype Props = {\n  frame: StackFrame & { collapse?: boolean };\n  onPress?: (event: GestureResponderEvent) => void;\n};\n\nexport function LogBoxInspectorStackFrame(props: Props) {\n  const { frame, onPress } = props;\n  const location = getStackFormattedLocation(process.env.EXPO_PROJECT_ROOT, frame);\n  return (\n    <View style={styles.frameContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent',\n        }}\n        onPress={onPress}\n        style={styles.frame}>\n        <Text style={[styles.name, frame.collapse === true && styles.dim]}>{frame.methodName}</Text>\n        <Text\n          ellipsizeMode=\"middle\"\n          numberOfLines={1}\n          style={[styles.location, frame.collapse === true && styles.dim]}>\n          {location}\n        </Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  lineLocation: {\n    flexDirection: 'row',\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    fontFamily: CODE_FONT,\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: '300',\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.d.ts
index 4bee0b6..e7a45c6 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.d.ts
@@ -1,5 +1,5 @@
-import type { StackType } from "../Data/LogBoxLog";
-import type { Stack } from "../Data/LogBoxSymbolication";
+import type { StackType } from '../Data/LogBoxLog';
+import type { Stack } from '../Data/LogBoxSymbolication';
 type Props = {
     type: StackType;
     onRetry: () => void;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.d.ts.map
index 0f84bf0..cafd233 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorStackFrames.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrames.tsx"],"names":[],"mappings":"AAUA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AASzD,KAAK,KAAK,GAAG;IACX,IAAI,EAAE,SAAS,CAAC;IAChB,OAAO,EAAE,MAAM,IAAI,CAAC;CACrB,CAAC;AAEF,wBAAgB,kBAAkB,CAChC,WAAW,EAAE,KAAK,EAClB,SAAS,EAAE,OAAO,GACjB,MAAM,CA+BR;AAED,wBAAgB,0BAA0B,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,KAAK,sBAgDlE"}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorStackFrames.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrames.tsx"],"names":[],"mappings":"AAaA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AAMzD,KAAK,KAAK,GAAG;IACX,IAAI,EAAE,SAAS,CAAC;IAChB,OAAO,EAAE,MAAM,IAAI,CAAC;CACrB,CAAC;AAEF,wBAAgB,kBAAkB,CAAC,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,GAAG,MAAM,CA2BjF;AAED,wBAAgB,0BAA0B,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,KAAK,sBA4ClE"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.js b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.js
index a7cce03..cdcd8a9 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.js
@@ -28,7 +28,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.LogBoxInspectorStackFrames = exports.getCollapseMessage = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -36,16 +36,16 @@ exports.LogBoxInspectorStackFrames = exports.getCollapseMessage = void 0;
  */
 const react_1 = __importStar(require("react"));
 const react_native_1 = require("react-native");
+const LogBoxInspectorSection_1 = require("./LogBoxInspectorSection");
+const LogBoxInspectorSourceMapStatus_1 = require("./LogBoxInspectorSourceMapStatus");
+const LogBoxInspectorStackFrame_1 = require("./LogBoxInspectorStackFrame");
 const LogContext_1 = require("../Data/LogContext");
 const LogBoxButton_1 = require("../UI/LogBoxButton");
 const LogBoxStyle = __importStar(require("../UI/LogBoxStyle"));
 const openFileInEditor_1 = __importDefault(require("../modules/openFileInEditor"));
-const LogBoxInspectorSection_1 = require("./LogBoxInspectorSection");
-const LogBoxInspectorSourceMapStatus_1 = require("./LogBoxInspectorSourceMapStatus");
-const LogBoxInspectorStackFrame_1 = require("./LogBoxInspectorStackFrame");
 function getCollapseMessage(stackFrames, collapsed) {
     if (stackFrames.length === 0) {
-        return "No frames to show";
+        return 'No frames to show';
     }
     const collapsedCount = stackFrames.reduce((count, { collapse }) => {
         if (collapse === true) {
@@ -54,13 +54,13 @@ function getCollapseMessage(stackFrames, collapsed) {
         return count;
     }, 0);
     if (collapsedCount === 0) {
-        return "Showing all frames";
+        return 'Showing all frames';
     }
-    const framePlural = `frame${collapsedCount > 1 ? "s" : ""}`;
+    const framePlural = `frame${collapsedCount > 1 ? 's' : ''}`;
     if (collapsedCount === stackFrames.length) {
         return collapsed
-            ? `See${collapsedCount > 1 ? " all " : " "}${collapsedCount} collapsed ${framePlural}`
-            : `Collapse${collapsedCount > 1 ? " all " : " "}${collapsedCount} ${framePlural}`;
+            ? `See${collapsedCount > 1 ? ' all ' : ' '}${collapsedCount} collapsed ${framePlural}`
+            : `Collapse${collapsedCount > 1 ? ' all ' : ' '}${collapsedCount} ${framePlural}`;
     }
     else {
         return collapsed
@@ -70,27 +70,24 @@ function getCollapseMessage(stackFrames, collapsed) {
 }
 exports.getCollapseMessage = getCollapseMessage;
 function LogBoxInspectorStackFrames({ onRetry, type }) {
-    var _a;
     const log = (0, LogContext_1.useSelectedLog)();
     const [collapsed, setCollapsed] = (0, react_1.useState)(() => {
-        var _a;
         // Only collapse frames initially if some frames are not collapsed.
-        return (_a = log.getAvailableStack(type)) === null || _a === void 0 ? void 0 : _a.some(({ collapse }) => !collapse);
+        return log.getAvailableStack(type)?.some(({ collapse }) => !collapse);
     });
     function getStackList() {
-        var _a;
         if (collapsed === true) {
-            return (_a = log.getAvailableStack(type)) === null || _a === void 0 ? void 0 : _a.filter(({ collapse }) => !collapse);
+            return log.getAvailableStack(type)?.filter(({ collapse }) => !collapse);
         }
         else {
             return log.getAvailableStack(type);
         }
     }
-    if (((_a = log.getAvailableStack(type)) === null || _a === void 0 ? void 0 : _a.length) === 0) {
+    if (log.getAvailableStack(type)?.length === 0) {
         return null;
     }
-    return (react_1.default.createElement(LogBoxInspectorSection_1.LogBoxInspectorSection, { heading: type === "component" ? "Component Stack" : "Call Stack", action: react_1.default.createElement(LogBoxInspectorSourceMapStatus_1.LogBoxInspectorSourceMapStatus, { onPress: log.symbolicated[type].status === "FAILED" ? onRetry : null, status: log.symbolicated[type].status }) },
-        log.symbolicated[type].status !== "COMPLETE" && (react_1.default.createElement(react_native_1.View, { style: stackStyles.hintBox },
+    return (react_1.default.createElement(LogBoxInspectorSection_1.LogBoxInspectorSection, { heading: type === 'component' ? 'Component Stack' : 'Call Stack', action: react_1.default.createElement(LogBoxInspectorSourceMapStatus_1.LogBoxInspectorSourceMapStatus, { onPress: log.symbolicated[type].status === 'FAILED' ? onRetry : null, status: log.symbolicated[type].status }) },
+        log.symbolicated[type].status !== 'COMPLETE' && (react_1.default.createElement(react_native_1.View, { style: stackStyles.hintBox },
             react_1.default.createElement(react_native_1.Text, { style: stackStyles.hintText }, "This call stack is not symbolicated. Some features are unavailable such as viewing the function name or tapping to open files."))),
         react_1.default.createElement(StackFrameList, { list: getStackList(), status: log.symbolicated[type].status }),
         react_1.default.createElement(StackFrameFooter, { onPress: () => setCollapsed(!collapsed), message: getCollapseMessage(log.getAvailableStack(type), !!collapsed) })));
@@ -99,15 +96,15 @@ exports.LogBoxInspectorStackFrames = LogBoxInspectorStackFrames;
 function StackFrameList({ list, status, }) {
     return list.map((frame, index) => {
         const { file, lineNumber } = frame;
-        return (react_1.default.createElement(LogBoxInspectorStackFrame_1.LogBoxInspectorStackFrame, { key: index, frame: frame, onPress: status === "COMPLETE" && file != null && lineNumber != null
+        return (react_1.default.createElement(LogBoxInspectorStackFrame_1.LogBoxInspectorStackFrame, { key: index, frame: frame, onPress: status === 'COMPLETE' && file != null && lineNumber != null
                 ? () => (0, openFileInEditor_1.default)(file, lineNumber)
                 : undefined }));
     });
 }
-function StackFrameFooter({ message, onPress, }) {
+function StackFrameFooter({ message, onPress }) {
     return (react_1.default.createElement(react_native_1.View, { style: stackStyles.collapseContainer },
         react_1.default.createElement(LogBoxButton_1.LogBoxButton, { backgroundColor: {
-                default: "transparent",
+                default: 'transparent',
                 pressed: LogBoxStyle.getBackgroundColor(1),
             }, onPress: onPress, style: stackStyles.collapseButton },
             react_1.default.createElement(react_native_1.Text, { style: stackStyles.collapse }, message))));
@@ -117,8 +114,8 @@ const stackStyles = react_native_1.StyleSheet.create({
         marginTop: 15,
     },
     heading: {
-        alignItems: "center",
-        flexDirection: "row",
+        alignItems: 'center',
+        flexDirection: 'row',
         paddingHorizontal: 12,
         marginBottom: 10,
     },
@@ -126,7 +123,7 @@ const stackStyles = react_native_1.StyleSheet.create({
         color: LogBoxStyle.getTextColor(1),
         flex: 1,
         fontSize: 20,
-        fontWeight: "600",
+        fontWeight: '600',
         includeFontPadding: false,
         lineHeight: 20,
     },
@@ -138,7 +135,7 @@ const stackStyles = react_native_1.StyleSheet.create({
         fontSize: 14,
         includeFontPadding: false,
         lineHeight: 18,
-        fontWeight: "500",
+        fontWeight: '500',
         paddingHorizontal: 27,
     },
     hintText: {
@@ -146,7 +143,7 @@ const stackStyles = react_native_1.StyleSheet.create({
         fontSize: 13,
         includeFontPadding: false,
         lineHeight: 18,
-        fontWeight: "400",
+        fontWeight: '400',
         marginHorizontal: 10,
     },
     hintBox: {
@@ -159,7 +156,7 @@ const stackStyles = react_native_1.StyleSheet.create({
     },
     collapseContainer: {
         marginLeft: 15,
-        flexDirection: "row",
+        flexDirection: 'row',
     },
     collapseButton: {
         borderRadius: 5,
@@ -167,7 +164,7 @@ const stackStyles = react_native_1.StyleSheet.create({
     collapse: {
         color: LogBoxStyle.getTextColor(0.7),
         fontSize: 12,
-        fontWeight: "300",
+        fontWeight: '300',
         lineHeight: 20,
         marginTop: 0,
         paddingHorizontal: 10,
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.js.map
index f7d0d57..18117ab 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames.js.map
@@ -1 +1 @@
-{"version":3,"file":"LogBoxInspectorStackFrames.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrames.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport type { StackType } from \"../Data/LogBoxLog\";\nimport type { Stack } from \"../Data/LogBoxSymbolication\";\nimport { useSelectedLog } from \"../Data/LogContext\";\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport openFileInEditor from \"../modules/openFileInEditor\";\nimport { LogBoxInspectorSection } from \"./LogBoxInspectorSection\";\nimport { LogBoxInspectorSourceMapStatus } from \"./LogBoxInspectorSourceMapStatus\";\nimport { LogBoxInspectorStackFrame } from \"./LogBoxInspectorStackFrame\";\n\ntype Props = {\n  type: StackType;\n  onRetry: () => void;\n};\n\nexport function getCollapseMessage(\n  stackFrames: Stack,\n  collapsed: boolean\n): string {\n  if (stackFrames.length === 0) {\n    return \"No frames to show\";\n  }\n\n  const collapsedCount = stackFrames.reduce((count, { collapse }) => {\n    if (collapse === true) {\n      return count + 1;\n    }\n\n    return count;\n  }, 0);\n\n  if (collapsedCount === 0) {\n    return \"Showing all frames\";\n  }\n\n  const framePlural = `frame${collapsedCount > 1 ? \"s\" : \"\"}`;\n  if (collapsedCount === stackFrames.length) {\n    return collapsed\n      ? `See${\n          collapsedCount > 1 ? \" all \" : \" \"\n        }${collapsedCount} collapsed ${framePlural}`\n      : `Collapse${\n          collapsedCount > 1 ? \" all \" : \" \"\n        }${collapsedCount} ${framePlural}`;\n  } else {\n    return collapsed\n      ? `See ${collapsedCount} more ${framePlural}`\n      : `Collapse ${collapsedCount} ${framePlural}`;\n  }\n}\n\nexport function LogBoxInspectorStackFrames({ onRetry, type }: Props) {\n  const log = useSelectedLog();\n\n  const [collapsed, setCollapsed] = useState(() => {\n    // Only collapse frames initially if some frames are not collapsed.\n    return log.getAvailableStack(type)?.some(({ collapse }) => !collapse);\n  });\n\n  function getStackList() {\n    if (collapsed === true) {\n      return log.getAvailableStack(type)?.filter(({ collapse }) => !collapse);\n    } else {\n      return log.getAvailableStack(type);\n    }\n  }\n\n  if (log.getAvailableStack(type)?.length === 0) {\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection\n      heading={type === \"component\" ? \"Component Stack\" : \"Call Stack\"}\n      action={\n        <LogBoxInspectorSourceMapStatus\n          onPress={log.symbolicated[type].status === \"FAILED\" ? onRetry : null}\n          status={log.symbolicated[type].status}\n        />\n      }\n    >\n      {log.symbolicated[type].status !== \"COMPLETE\" && (\n        <View style={stackStyles.hintBox}>\n          <Text style={stackStyles.hintText}>\n            This call stack is not symbolicated. Some features are unavailable\n            such as viewing the function name or tapping to open files.\n          </Text>\n        </View>\n      )}\n      <StackFrameList\n        list={getStackList()!}\n        status={log.symbolicated[type].status}\n      />\n      <StackFrameFooter\n        onPress={() => setCollapsed(!collapsed)}\n        message={getCollapseMessage(log.getAvailableStack(type)!, !!collapsed)}\n      />\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction StackFrameList({\n  list,\n  status,\n}: {\n  list: Stack;\n  status: \"NONE\" | \"PENDING\" | \"COMPLETE\" | \"FAILED\";\n}): any {\n  return list.map((frame, index) => {\n    const { file, lineNumber } = frame;\n    return (\n      <LogBoxInspectorStackFrame\n        key={index}\n        frame={frame}\n        onPress={\n          status === \"COMPLETE\" && file != null && lineNumber != null\n            ? () => openFileInEditor(file, lineNumber)\n            : undefined\n        }\n      />\n    );\n  });\n}\n\nfunction StackFrameFooter({\n  message,\n  onPress,\n}: {\n  message: string;\n  onPress: () => void;\n}) {\n  return (\n    <View style={stackStyles.collapseContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: \"transparent\",\n          pressed: LogBoxStyle.getBackgroundColor(1),\n        }}\n        onPress={onPress}\n        style={stackStyles.collapseButton}\n      >\n        <Text style={stackStyles.collapse}>{message}</Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst stackStyles = StyleSheet.create({\n  section: {\n    marginTop: 15,\n  },\n  heading: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingHorizontal: 12,\n    marginBottom: 10,\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 20,\n    fontWeight: \"600\",\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  body: {\n    paddingBottom: 10,\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: \"500\",\n    paddingHorizontal: 27,\n  },\n  hintText: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 13,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: \"400\",\n    marginHorizontal: 10,\n  },\n  hintBox: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginHorizontal: 10,\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: \"row\",\n  },\n  collapseButton: {\n    borderRadius: 5,\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: \"300\",\n    lineHeight: 20,\n    marginTop: 0,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"LogBoxInspectorStackFrames.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrames.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { LogBoxInspectorSection } from './LogBoxInspectorSection';\nimport { LogBoxInspectorSourceMapStatus } from './LogBoxInspectorSourceMapStatus';\nimport { LogBoxInspectorStackFrame } from './LogBoxInspectorStackFrame';\nimport type { StackType } from '../Data/LogBoxLog';\nimport type { Stack } from '../Data/LogBoxSymbolication';\nimport { useSelectedLog } from '../Data/LogContext';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport openFileInEditor from '../modules/openFileInEditor';\n\ntype Props = {\n  type: StackType;\n  onRetry: () => void;\n};\n\nexport function getCollapseMessage(stackFrames: Stack, collapsed: boolean): string {\n  if (stackFrames.length === 0) {\n    return 'No frames to show';\n  }\n\n  const collapsedCount = stackFrames.reduce((count, { collapse }) => {\n    if (collapse === true) {\n      return count + 1;\n    }\n\n    return count;\n  }, 0);\n\n  if (collapsedCount === 0) {\n    return 'Showing all frames';\n  }\n\n  const framePlural = `frame${collapsedCount > 1 ? 's' : ''}`;\n  if (collapsedCount === stackFrames.length) {\n    return collapsed\n      ? `See${collapsedCount > 1 ? ' all ' : ' '}${collapsedCount} collapsed ${framePlural}`\n      : `Collapse${collapsedCount > 1 ? ' all ' : ' '}${collapsedCount} ${framePlural}`;\n  } else {\n    return collapsed\n      ? `See ${collapsedCount} more ${framePlural}`\n      : `Collapse ${collapsedCount} ${framePlural}`;\n  }\n}\n\nexport function LogBoxInspectorStackFrames({ onRetry, type }: Props) {\n  const log = useSelectedLog();\n\n  const [collapsed, setCollapsed] = useState(() => {\n    // Only collapse frames initially if some frames are not collapsed.\n    return log.getAvailableStack(type)?.some(({ collapse }) => !collapse);\n  });\n\n  function getStackList() {\n    if (collapsed === true) {\n      return log.getAvailableStack(type)?.filter(({ collapse }) => !collapse);\n    } else {\n      return log.getAvailableStack(type);\n    }\n  }\n\n  if (log.getAvailableStack(type)?.length === 0) {\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection\n      heading={type === 'component' ? 'Component Stack' : 'Call Stack'}\n      action={\n        <LogBoxInspectorSourceMapStatus\n          onPress={log.symbolicated[type].status === 'FAILED' ? onRetry : null}\n          status={log.symbolicated[type].status}\n        />\n      }>\n      {log.symbolicated[type].status !== 'COMPLETE' && (\n        <View style={stackStyles.hintBox}>\n          <Text style={stackStyles.hintText}>\n            This call stack is not symbolicated. Some features are unavailable such as viewing the\n            function name or tapping to open files.\n          </Text>\n        </View>\n      )}\n      <StackFrameList list={getStackList()!} status={log.symbolicated[type].status} />\n      <StackFrameFooter\n        onPress={() => setCollapsed(!collapsed)}\n        message={getCollapseMessage(log.getAvailableStack(type)!, !!collapsed)}\n      />\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction StackFrameList({\n  list,\n  status,\n}: {\n  list: Stack;\n  status: 'NONE' | 'PENDING' | 'COMPLETE' | 'FAILED';\n}): any {\n  return list.map((frame, index) => {\n    const { file, lineNumber } = frame;\n    return (\n      <LogBoxInspectorStackFrame\n        key={index}\n        frame={frame}\n        onPress={\n          status === 'COMPLETE' && file != null && lineNumber != null\n            ? () => openFileInEditor(file, lineNumber)\n            : undefined\n        }\n      />\n    );\n  });\n}\n\nfunction StackFrameFooter({ message, onPress }: { message: string; onPress: () => void }) {\n  return (\n    <View style={stackStyles.collapseContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundColor(1),\n        }}\n        onPress={onPress}\n        style={stackStyles.collapseButton}>\n        <Text style={stackStyles.collapse}>{message}</Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst stackStyles = StyleSheet.create({\n  section: {\n    marginTop: 15,\n  },\n  heading: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    marginBottom: 10,\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 20,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  body: {\n    paddingBottom: 10,\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '500',\n    paddingHorizontal: 27,\n  },\n  hintText: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 13,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    marginHorizontal: 10,\n  },\n  hintBox: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginHorizontal: 10,\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row',\n  },\n  collapseButton: {\n    borderRadius: 5,\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.d.ts
index 534aa7c..cf11d0a 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.d.ts
@@ -1,8 +1,8 @@
-import { LogBoxLog } from "../Data/LogBoxLog";
+import { LogBoxLog } from '../Data/LogBoxLog';
 type Props = {
     log: LogBoxLog;
     totalLogCount: number;
-    level: "warn" | "error";
+    level: 'warn' | 'error';
     onPressOpen: () => void;
     onPressDismiss: () => void;
 };
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.d.ts.map
index 0cd0ef0..bd74f7d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorToast.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToast.tsx"],"names":[],"mappings":"AAWA,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAI9C,KAAK,KAAK,GAAG;IACX,GAAG,EAAE,SAAS,CAAC;IACf,aAAa,EAAE,MAAM,CAAC;IACtB,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC;IACxB,WAAW,EAAE,MAAM,IAAI,CAAC;IACxB,cAAc,EAAE,MAAM,IAAI,CAAC;CAC5B,CAAC;AAUF,wBAAgB,UAAU,CAAC,KAAK,EAAE,KAAK,eA8BtC"}
\ No newline at end of file
+{"version":3,"file":"ErrorToast.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToast.tsx"],"names":[],"mappings":"AAYA,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAG9C,KAAK,KAAK,GAAG;IACX,GAAG,EAAE,SAAS,CAAC;IACf,aAAa,EAAE,MAAM,CAAC;IACtB,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC;IACxB,WAAW,EAAE,MAAM,IAAI,CAAC;IACxB,cAAc,EAAE,MAAM,IAAI,CAAC;CAC5B,CAAC;AAUF,wBAAgB,UAAU,CAAC,KAAK,EAAE,KAAK,eAkCtC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.js b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.js
index 1b938a7..617bd51 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.js
@@ -25,36 +25,39 @@ var __importStar = (this && this.__importStar) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ErrorToast = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-const react_views_1 = require("@bacons/react-views");
 const react_1 = __importStar(require("react"));
+const react_native_1 = require("react-native");
+const ErrorToastMessage_1 = require("./ErrorToastMessage");
 const LogBoxData = __importStar(require("../Data/LogBoxData"));
 const LogBoxStyle = __importStar(require("../UI/LogBoxStyle"));
-const ErrorToastMessage_1 = require("./ErrorToastMessage");
 function useSymbolicatedLog(log) {
     // Eagerly symbolicate so the stack is available when pressing to inspect.
     (0, react_1.useEffect)(() => {
-        LogBoxData.symbolicateLogLazy("stack", log);
-        LogBoxData.symbolicateLogLazy("component", log);
+        LogBoxData.symbolicateLogLazy('stack', log);
+        LogBoxData.symbolicateLogLazy('component', log);
     }, [log]);
 }
 function ErrorToast(props) {
     const { totalLogCount, level, log } = props;
     useSymbolicatedLog(log);
-    return (react_1.default.createElement(react_views_1.View, { style: toastStyles.container },
-        react_1.default.createElement(react_views_1.Pressable, { style: { flex: 1 }, onPress: props.onPressOpen }, ({ hovered, pressed }) => (react_1.default.createElement(react_views_1.View, { style: [
+    return (react_1.default.createElement(react_native_1.View, { style: toastStyles.container },
+        react_1.default.createElement(react_native_1.Pressable, { style: { flex: 1 }, onPress: props.onPressOpen }, ({ 
+        /** @ts-expect-error: react-native types are broken. */
+        hovered, pressed, }) => (react_1.default.createElement(react_native_1.View, { style: [
                 toastStyles.press,
                 {
-                    transitionDuration: "150ms",
+                    // @ts-expect-error: web-only type
+                    transitionDuration: '150ms',
                     backgroundColor: pressed
-                        ? "#323232"
+                        ? '#323232'
                         : hovered
-                            ? "#111111"
+                            ? '#111111'
                             : LogBoxStyle.getBackgroundColor(),
                 },
             ] },
@@ -64,25 +67,23 @@ function ErrorToast(props) {
 }
 exports.ErrorToast = ErrorToast;
 function Count({ count, level }) {
-    return (react_1.default.createElement(react_views_1.View, { style: [countStyles.inside, countStyles[level]] },
-        react_1.default.createElement(react_views_1.Text, { style: countStyles.text }, count <= 1 ? "!" : count)));
+    return (react_1.default.createElement(react_native_1.View, { style: [countStyles.inside, countStyles[level]] },
+        react_1.default.createElement(react_native_1.Text, { style: countStyles.text }, count <= 1 ? '!' : count)));
 }
 function Dismiss({ onPress }) {
-    return (react_1.default.createElement(react_views_1.Pressable, { style: {
+    return (react_1.default.createElement(react_native_1.Pressable, { style: {
             marginLeft: 5,
         }, hitSlop: {
             top: 12,
             right: 10,
             bottom: 12,
             left: 10,
-        }, onPress: onPress }, ({ hovered, pressed }) => (react_1.default.createElement(react_views_1.View, { style: [
-            dismissStyles.press,
-            hovered && { opacity: 0.8 },
-            pressed && { opacity: 0.5 },
-        ] },
-        react_1.default.createElement(react_views_1.Image, { source: require("@expo/metro-runtime/assets/close.png"), style: dismissStyles.image })))));
+        }, onPress: onPress }, ({ 
+    /** @ts-expect-error: react-native types are broken. */
+    hovered, pressed, }) => (react_1.default.createElement(react_native_1.View, { style: [dismissStyles.press, hovered && { opacity: 0.8 }, pressed && { opacity: 0.5 }] },
+        react_1.default.createElement(react_native_1.Image, { source: require('@expo/metro-runtime/assets/close.png'), style: dismissStyles.image })))));
 }
-const countStyles = react_views_1.StyleSheet.create({
+const countStyles = react_native_1.StyleSheet.create({
     warn: {
         backgroundColor: LogBoxStyle.getWarningColor(1),
     },
@@ -98,45 +99,45 @@ const countStyles = react_views_1.StyleSheet.create({
         aspectRatio: 1,
         paddingHorizontal: 4,
         borderRadius: 11,
-        justifyContent: "center",
-        alignItems: "center",
+        justifyContent: 'center',
+        alignItems: 'center',
     },
     text: {
         color: LogBoxStyle.getTextColor(1),
         fontSize: 14,
         lineHeight: 18,
-        textAlign: "center",
-        fontWeight: "600",
+        textAlign: 'center',
+        fontWeight: '600',
         textShadow: `0px 0px 3px ${LogBoxStyle.getBackgroundColor(0.8)}`,
     },
 });
-const dismissStyles = react_views_1.StyleSheet.create({
+const dismissStyles = react_native_1.StyleSheet.create({
     press: {
-        backgroundColor: "#323232",
+        backgroundColor: '#323232',
         height: 20,
         width: 20,
         borderRadius: 25,
-        alignItems: "center",
-        justifyContent: "center",
+        alignItems: 'center',
+        justifyContent: 'center',
     },
     image: {
         height: 8,
         width: 8,
     },
 });
-const toastStyles = react_views_1.StyleSheet.create({
+const toastStyles = react_native_1.StyleSheet.create({
     container: {
         height: 48,
-        justifyContent: "center",
+        justifyContent: 'center',
         marginBottom: 4,
     },
     press: {
         borderWidth: 1,
         borderRadius: 8,
-        overflow: "hidden",
-        flexDirection: "row",
-        alignItems: "center",
-        borderColor: "#323232",
+        overflow: 'hidden',
+        flexDirection: 'row',
+        alignItems: 'center',
+        borderColor: '#323232',
         backgroundColor: LogBoxStyle.getBackgroundColor(),
         flex: 1,
         paddingHorizontal: 12,
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.js.map
index 6ccc3ce..d37c81c 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToast.js.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorToast.js","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToast.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Image, Pressable, StyleSheet, Text, View } from \"@bacons/react-views\";\nimport React, { useEffect } from \"react\";\n\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport { LogBoxLog } from \"../Data/LogBoxLog\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport { ErrorToastMessage } from \"./ErrorToastMessage\";\n\ntype Props = {\n  log: LogBoxLog;\n  totalLogCount: number;\n  level: \"warn\" | \"error\";\n  onPressOpen: () => void;\n  onPressDismiss: () => void;\n};\n\nfunction useSymbolicatedLog(log: LogBoxLog) {\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  useEffect(() => {\n    LogBoxData.symbolicateLogLazy(\"stack\", log);\n    LogBoxData.symbolicateLogLazy(\"component\", log);\n  }, [log]);\n}\n\nexport function ErrorToast(props: Props) {\n  const { totalLogCount, level, log } = props;\n\n  useSymbolicatedLog(log);\n\n  return (\n    <View style={toastStyles.container}>\n      <Pressable style={{ flex: 1 }} onPress={props.onPressOpen}>\n        {({ hovered, pressed }) => (\n          <View\n            style={[\n              toastStyles.press,\n              {\n                transitionDuration: \"150ms\",\n                backgroundColor: pressed\n                  ? \"#323232\"\n                  : hovered\n                  ? \"#111111\"\n                  : LogBoxStyle.getBackgroundColor(),\n              },\n            ]}\n          >\n            <Count count={totalLogCount} level={level} />\n            <ErrorToastMessage message={log.message} />\n            <Dismiss onPress={props.onPressDismiss} />\n          </View>\n        )}\n      </Pressable>\n    </View>\n  );\n}\n\nfunction Count({ count, level }: { count: number; level: Props[\"level\"] }) {\n  return (\n    <View style={[countStyles.inside, countStyles[level]]}>\n      <Text style={countStyles.text}>{count <= 1 ? \"!\" : count}</Text>\n    </View>\n  );\n}\n\nfunction Dismiss({ onPress }: { onPress: () => void }) {\n  return (\n    <Pressable\n      style={{\n        marginLeft: 5,\n      }}\n      hitSlop={{\n        top: 12,\n        right: 10,\n        bottom: 12,\n        left: 10,\n      }}\n      onPress={onPress}\n    >\n      {({ hovered, pressed }) => (\n        <View\n          style={[\n            dismissStyles.press,\n            hovered && { opacity: 0.8 },\n            pressed && { opacity: 0.5 },\n          ]}\n        >\n          <Image\n            source={require(\"@expo/metro-runtime/assets/close.png\")}\n            style={dismissStyles.image}\n          />\n        </View>\n      )}\n    </Pressable>\n  );\n}\n\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1),\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1),\n  },\n  inside: {\n    marginRight: 8,\n    minWidth: 22,\n    aspectRatio: 1,\n    paddingHorizontal: 4,\n    borderRadius: 11,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    textShadow: `0px 0px 3px ${LogBoxStyle.getBackgroundColor(0.8)}`,\n  },\n});\n\nconst dismissStyles = StyleSheet.create({\n  press: {\n    backgroundColor: \"#323232\",\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  image: {\n    height: 8,\n    width: 8,\n  },\n});\n\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    justifyContent: \"center\",\n    marginBottom: 4,\n  },\n  press: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#323232\",\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"ErrorToast.js","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToast.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect } from 'react';\nimport { Image, Pressable, StyleSheet, Text, View } from 'react-native';\n\nimport { ErrorToastMessage } from './ErrorToastMessage';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport { LogBoxLog } from '../Data/LogBoxLog';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  log: LogBoxLog;\n  totalLogCount: number;\n  level: 'warn' | 'error';\n  onPressOpen: () => void;\n  onPressDismiss: () => void;\n};\n\nfunction useSymbolicatedLog(log: LogBoxLog) {\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  useEffect(() => {\n    LogBoxData.symbolicateLogLazy('stack', log);\n    LogBoxData.symbolicateLogLazy('component', log);\n  }, [log]);\n}\n\nexport function ErrorToast(props: Props) {\n  const { totalLogCount, level, log } = props;\n\n  useSymbolicatedLog(log);\n\n  return (\n    <View style={toastStyles.container}>\n      <Pressable style={{ flex: 1 }} onPress={props.onPressOpen}>\n        {({\n          /** @ts-expect-error: react-native types are broken. */\n          hovered,\n          pressed,\n        }) => (\n          <View\n            style={[\n              toastStyles.press,\n              {\n                // @ts-expect-error: web-only type\n                transitionDuration: '150ms',\n                backgroundColor: pressed\n                  ? '#323232'\n                  : hovered\n                  ? '#111111'\n                  : LogBoxStyle.getBackgroundColor(),\n              },\n            ]}>\n            <Count count={totalLogCount} level={level} />\n            <ErrorToastMessage message={log.message} />\n            <Dismiss onPress={props.onPressDismiss} />\n          </View>\n        )}\n      </Pressable>\n    </View>\n  );\n}\n\nfunction Count({ count, level }: { count: number; level: Props['level'] }) {\n  return (\n    <View style={[countStyles.inside, countStyles[level]]}>\n      <Text style={countStyles.text}>{count <= 1 ? '!' : count}</Text>\n    </View>\n  );\n}\n\nfunction Dismiss({ onPress }: { onPress: () => void }) {\n  return (\n    <Pressable\n      style={{\n        marginLeft: 5,\n      }}\n      hitSlop={{\n        top: 12,\n        right: 10,\n        bottom: 12,\n        left: 10,\n      }}\n      onPress={onPress}>\n      {({\n        /** @ts-expect-error: react-native types are broken. */\n        hovered,\n        pressed,\n      }) => (\n        <View\n          style={[dismissStyles.press, hovered && { opacity: 0.8 }, pressed && { opacity: 0.5 }]}>\n          <Image\n            source={require('@expo/metro-runtime/assets/close.png')}\n            style={dismissStyles.image}\n          />\n        </View>\n      )}\n    </Pressable>\n  );\n}\n\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1),\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1),\n  },\n  inside: {\n    marginRight: 8,\n    minWidth: 22,\n    aspectRatio: 1,\n    paddingHorizontal: 4,\n    borderRadius: 11,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    textShadow: `0px 0px 3px ${LogBoxStyle.getBackgroundColor(0.8)}`,\n  },\n});\n\nconst dismissStyles = StyleSheet.create({\n  press: {\n    backgroundColor: '#323232',\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    height: 8,\n    width: 8,\n  },\n});\n\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    justifyContent: 'center',\n    marginBottom: 4,\n  },\n  press: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#323232',\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.d.ts
index 6322107..e933c12 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.d.ts
@@ -1,4 +1,4 @@
-import React from "react";
+import React from 'react';
 export default function ErrorToastContainer({ children, }: {
     children: React.ReactNode;
 }): React.ReactElement;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.js.map
index 1ec30e2..aa99913 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.js.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorToastContainer.js","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastContainer.tsx"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAE1B,SAAwB,mBAAmB,CAAC,EAC1C,QAAQ,GAGT;IACC,OAAO,8DAAG,QAAQ,CAAI,CAAC;AACzB,CAAC;AAND,sCAMC","sourcesContent":["import React from \"react\";\n\nexport default function ErrorToastContainer({\n  children,\n}: {\n  children: React.ReactNode;\n}): React.ReactElement {\n  return <>{children}</>;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"ErrorToastContainer.js","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastContainer.tsx"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAE1B,SAAwB,mBAAmB,CAAC,EAC1C,QAAQ,GAGT;IACC,OAAO,8DAAG,QAAQ,CAAI,CAAC;AACzB,CAAC;AAND,sCAMC","sourcesContent":["import React from 'react';\n\nexport default function ErrorToastContainer({\n  children,\n}: {\n  children: React.ReactNode;\n}): React.ReactElement {\n  return <>{children}</>;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.d.ts
index dcc6c1b..fe3c090 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.d.ts
@@ -1,11 +1,11 @@
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
-import React from "react";
+import React from 'react';
 export declare function ErrorToastContainer(): JSX.Element | null;
 declare const _default: React.Component<object, {}, any>;
 export default _default;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.d.ts.map
index 839c618..eee837d 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorToastContainer.web.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastContainer.web.tsx"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,KAA+B,MAAM,OAAO,CAAC;AASpD,wBAAgB,mBAAmB,uBAOlC;;AAsED,wBAAgE"}
\ No newline at end of file
+{"version":3,"file":"ErrorToastContainer.web.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastContainer.web.tsx"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,KAA+B,MAAM,OAAO,CAAC;AASpD,wBAAgB,mBAAmB,uBAOlC;;AAoED,wBAAgE"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.js b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.js
index 66f1d3b..0329d20 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.js
@@ -25,7 +25,7 @@ var __importStar = (this && this.__importStar) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ErrorToastContainer = void 0;
 /**
- * Copyright (c) Evan Bacon.
+ * Copyright (c) 650 Industries.
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
  * This source code is licensed under the MIT license found in the
@@ -33,10 +33,10 @@ exports.ErrorToastContainer = void 0;
  */
 const react_1 = __importStar(require("react"));
 const react_native_1 = require("react-native");
+const ErrorToast_1 = require("./ErrorToast");
 const LogBoxData = __importStar(require("../Data/LogBoxData"));
 const LogContext_1 = require("../Data/LogContext");
 const useRejectionHandler_1 = require("../useRejectionHandler");
-const ErrorToast_1 = require("./ErrorToast");
 function ErrorToastContainer() {
     (0, useRejectionHandler_1.useRejectionHandler)();
     const { logs, isDisabled } = (0, LogContext_1.useLogs)();
@@ -64,8 +64,8 @@ function ErrorToastStack({ logs }) {
         }
         setSelectedLog(index);
     }
-    const warnings = (0, react_1.useMemo)(() => logs.filter((log) => log.level === "warn"), [logs]);
-    const errors = (0, react_1.useMemo)(() => logs.filter((log) => log.level === "error" || log.level === "fatal"), [logs]);
+    const warnings = (0, react_1.useMemo)(() => logs.filter((log) => log.level === 'warn'), [logs]);
+    const errors = (0, react_1.useMemo)(() => logs.filter((log) => log.level === 'error' || log.level === 'fatal'), [logs]);
     return (react_1.default.createElement(react_native_1.View, { style: styles.list },
         warnings.length > 0 && (react_1.default.createElement(ErrorToast_1.ErrorToast, { log: warnings[warnings.length - 1], level: "warn", totalLogCount: warnings.length, onPressOpen: () => openLog(warnings[warnings.length - 1]), onPressDismiss: onDismissWarns })),
         errors.length > 0 && (react_1.default.createElement(ErrorToast_1.ErrorToast, { log: errors[errors.length - 1], level: "error", totalLogCount: errors.length, onPressOpen: () => openLog(errors[errors.length - 1]), onPressDismiss: onDismissErrors }))));
@@ -75,8 +75,9 @@ const styles = react_native_1.StyleSheet.create({
         bottom: 6,
         left: 10,
         right: 10,
-        position: "absolute",
         maxWidth: 320,
+        // @ts-expect-error
+        position: 'fixed',
     },
 });
 exports.default = LogBoxData.withSubscription(ErrorToastContainer);
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.js.map
index ead7c5d..4c13320 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastContainer.web.js.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorToastContainer.web.js","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastContainer.web.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useCallback, useMemo } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport { LogBoxLog } from \"../Data/LogBoxLog\";\nimport { useLogs } from \"../Data/LogContext\";\nimport { useRejectionHandler } from \"../useRejectionHandler\";\nimport { ErrorToast } from \"./ErrorToast\";\n\nexport function ErrorToastContainer() {\n  useRejectionHandler();\n  const { logs, isDisabled } = useLogs();\n  if (!logs.length || isDisabled) {\n    return null;\n  }\n  return <ErrorToastStack logs={logs} />;\n}\n\nfunction ErrorToastStack({ logs }: { logs: LogBoxLog[] }) {\n  const onDismissWarns = useCallback(() => {\n    LogBoxData.clearWarnings();\n  }, []);\n\n  const onDismissErrors = useCallback(() => {\n    LogBoxData.clearErrors();\n  }, []);\n\n  const setSelectedLog = useCallback((index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n\n  function openLog(log: LogBoxLog) {\n    let index = logs.length - 1;\n\n    // Stop at zero because if we don't find any log, we'll open the first log.\n    while (index > 0 && logs[index] !== log) {\n      index -= 1;\n    }\n    setSelectedLog(index);\n  }\n\n  const warnings = useMemo(\n    () => logs.filter((log) => log.level === \"warn\"),\n    [logs]\n  );\n\n  const errors = useMemo(\n    () => logs.filter((log) => log.level === \"error\" || log.level === \"fatal\"),\n    [logs]\n  );\n\n  return (\n    <View style={styles.list}>\n      {warnings.length > 0 && (\n        <ErrorToast\n          log={warnings[warnings.length - 1]}\n          level=\"warn\"\n          totalLogCount={warnings.length}\n          onPressOpen={() => openLog(warnings[warnings.length - 1])}\n          onPressDismiss={onDismissWarns}\n        />\n      )}\n\n      {errors.length > 0 && (\n        <ErrorToast\n          log={errors[errors.length - 1]}\n          level=\"error\"\n          totalLogCount={errors.length}\n          onPressOpen={() => openLog(errors[errors.length - 1])}\n          onPressDismiss={onDismissErrors}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    bottom: 6,\n    left: 10,\n    right: 10,\n    position: \"absolute\",\n    maxWidth: 320,\n  },\n});\n\nexport default LogBoxData.withSubscription(ErrorToastContainer);\n"]}
\ No newline at end of file
+{"version":3,"file":"ErrorToastContainer.web.js","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastContainer.web.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { ErrorToast } from './ErrorToast';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport { LogBoxLog } from '../Data/LogBoxLog';\nimport { useLogs } from '../Data/LogContext';\nimport { useRejectionHandler } from '../useRejectionHandler';\n\nexport function ErrorToastContainer() {\n  useRejectionHandler();\n  const { logs, isDisabled } = useLogs();\n  if (!logs.length || isDisabled) {\n    return null;\n  }\n  return <ErrorToastStack logs={logs} />;\n}\n\nfunction ErrorToastStack({ logs }: { logs: LogBoxLog[] }) {\n  const onDismissWarns = useCallback(() => {\n    LogBoxData.clearWarnings();\n  }, []);\n\n  const onDismissErrors = useCallback(() => {\n    LogBoxData.clearErrors();\n  }, []);\n\n  const setSelectedLog = useCallback((index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n\n  function openLog(log: LogBoxLog) {\n    let index = logs.length - 1;\n\n    // Stop at zero because if we don't find any log, we'll open the first log.\n    while (index > 0 && logs[index] !== log) {\n      index -= 1;\n    }\n    setSelectedLog(index);\n  }\n\n  const warnings = useMemo(() => logs.filter((log) => log.level === 'warn'), [logs]);\n\n  const errors = useMemo(\n    () => logs.filter((log) => log.level === 'error' || log.level === 'fatal'),\n    [logs]\n  );\n\n  return (\n    <View style={styles.list}>\n      {warnings.length > 0 && (\n        <ErrorToast\n          log={warnings[warnings.length - 1]}\n          level=\"warn\"\n          totalLogCount={warnings.length}\n          onPressOpen={() => openLog(warnings[warnings.length - 1])}\n          onPressDismiss={onDismissWarns}\n        />\n      )}\n\n      {errors.length > 0 && (\n        <ErrorToast\n          log={errors[errors.length - 1]}\n          level=\"error\"\n          totalLogCount={errors.length}\n          onPressOpen={() => openLog(errors[errors.length - 1])}\n          onPressDismiss={onDismissErrors}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    bottom: 6,\n    left: 10,\n    right: 10,\n    maxWidth: 320,\n    // @ts-expect-error\n    position: 'fixed',\n  },\n});\n\nexport default LogBoxData.withSubscription(ErrorToastContainer);\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.d.ts
index 31a10c1..6364da5 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.d.ts
@@ -1,4 +1,4 @@
-import type { Message as MessageType } from "../Data/parseLogBoxLog";
+import type { Message as MessageType } from '../Data/parseLogBoxLog';
 export declare function ErrorToastMessage({ message }: {
     message?: MessageType;
 }): JSX.Element;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.d.ts.map
index a5f53f9..7fdebea 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorToastMessage.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastMessage.tsx"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,OAAO,IAAI,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAIrE,wBAAgB,iBAAiB,CAAC,EAAE,OAAO,EAAE,EAAE;IAAE,OAAO,CAAC,EAAE,WAAW,CAAA;CAAE,eAYvE"}
\ No newline at end of file
+{"version":3,"file":"ErrorToastMessage.d.ts","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastMessage.tsx"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,OAAO,IAAI,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAIrE,wBAAgB,iBAAiB,CAAC,EAAE,OAAO,EAAE,EAAE;IAAE,OAAO,CAAC,EAAE,WAAW,CAAA;CAAE,eAMvE"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.js b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.js
index 1e7c031..5764f98 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.js
@@ -27,17 +27,17 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ErrorToastMessage = void 0;
-const react_views_1 = require("@bacons/react-views");
 const react_1 = __importDefault(require("react"));
+const react_native_1 = require("react-native");
 const LogBoxMessage_1 = require("../UI/LogBoxMessage");
 const LogBoxStyle = __importStar(require("../UI/LogBoxStyle"));
 function ErrorToastMessage({ message }) {
-    return (react_1.default.createElement(react_views_1.Text, { numberOfLines: 1, style: styles.text }, message && (react_1.default.createElement(LogBoxMessage_1.LogBoxMessage, { plaintext: true, message: message, style: styles.substitutionText }))));
+    return (react_1.default.createElement(react_native_1.Text, { numberOfLines: 1, style: styles.text }, message && react_1.default.createElement(LogBoxMessage_1.LogBoxMessage, { plaintext: true, message: message, style: styles.substitutionText })));
 }
 exports.ErrorToastMessage = ErrorToastMessage;
-const styles = react_views_1.StyleSheet.create({
+const styles = react_native_1.StyleSheet.create({
     text: {
-        userSelect: "none",
+        userSelect: 'none',
         paddingLeft: 8,
         color: LogBoxStyle.getTextColor(1),
         flex: 1,
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.js.map
index ad1d0c5..d0bb4e3 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/toast/ErrorToastMessage.js.map
@@ -1 +1 @@
-{"version":3,"file":"ErrorToastMessage.js","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastMessage.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAuD;AACvD,kDAA0B;AAG1B,uDAAoD;AACpD,+DAAiD;AAEjD,SAAgB,iBAAiB,CAAC,EAAE,OAAO,EAA6B;IACtE,OAAO,CACL,8BAAC,kBAAI,IAAC,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,IACvC,OAAO,IAAI,CACV,8BAAC,6BAAa,IACZ,SAAS,QACT,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,MAAM,CAAC,gBAAgB,GAC9B,CACH,CACI,CACR,CAAC;AACJ,CAAC;AAZD,8CAYC;AAED,MAAM,MAAM,GAAG,wBAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,EAAE;QACJ,UAAU,EAAE,MAAM;QAClB,WAAW,EAAE,CAAC;QACd,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,EAAE;KACf;IACD,gBAAgB,EAAE;QAChB,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;KACrC;CACF,CAAC,CAAC","sourcesContent":["import { StyleSheet, Text } from \"@bacons/react-views\";\nimport React from \"react\";\n\nimport type { Message as MessageType } from \"../Data/parseLogBoxLog\";\nimport { LogBoxMessage } from \"../UI/LogBoxMessage\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\nexport function ErrorToastMessage({ message }: { message?: MessageType }) {\n  return (\n    <Text numberOfLines={1} style={styles.text}>\n      {message && (\n        <LogBoxMessage\n          plaintext\n          message={message}\n          style={styles.substitutionText}\n        />\n      )}\n    </Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    userSelect: \"none\",\n    paddingLeft: 8,\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22,\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n});\n"]}
\ No newline at end of file
+{"version":3,"file":"ErrorToastMessage.js","sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToastMessage.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAA0B;AAC1B,+CAAgD;AAGhD,uDAAoD;AACpD,+DAAiD;AAEjD,SAAgB,iBAAiB,CAAC,EAAE,OAAO,EAA6B;IACtE,OAAO,CACL,8BAAC,mBAAI,IAAC,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,IACvC,OAAO,IAAI,8BAAC,6BAAa,IAAC,SAAS,QAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,gBAAgB,GAAI,CACpF,CACR,CAAC;AACJ,CAAC;AAND,8CAMC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,EAAE;QACJ,UAAU,EAAE,MAAM;QAClB,WAAW,EAAE,CAAC;QACd,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,EAAE;KACf;IACD,gBAAgB,EAAE;QAChB,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;KACrC;CACF,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text } from 'react-native';\n\nimport type { Message as MessageType } from '../Data/parseLogBoxLog';\nimport { LogBoxMessage } from '../UI/LogBoxMessage';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\nexport function ErrorToastMessage({ message }: { message?: MessageType }) {\n  return (\n    <Text numberOfLines={1} style={styles.text}>\n      {message && <LogBoxMessage plaintext message={message} style={styles.substitutionText} />}\n    </Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    userSelect: 'none',\n    paddingLeft: 8,\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22,\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.d.ts b/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.d.ts
index ac72ee7..a8e95ce 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.d.ts
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.d.ts
@@ -1,3 +1,3 @@
-import React from "react";
+import React from 'react';
 export declare function useRejectionHandler(): React.MutableRefObject<boolean>;
 //# sourceMappingURL=useRejectionHandler.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.d.ts.map b/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.d.ts.map
index d3977d4..0567e63 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"useRejectionHandler.d.ts","sourceRoot":"","sources":["../../src/error-overlay/useRejectionHandler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAoB1B,wBAAgB,mBAAmB,oCA6ClC"}
\ No newline at end of file
+{"version":3,"file":"useRejectionHandler.d.ts","sourceRoot":"","sources":["../../src/error-overlay/useRejectionHandler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAuB1B,wBAAgB,mBAAmB,oCAqClC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.js b/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.js
index 688f87a..a2c1448 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.js
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.js
@@ -10,13 +10,16 @@ function useStackTraceLimit(limit) {
     const current = react_1.default.useRef(0);
     react_1.default.useEffect(() => {
         try {
+            // @ts-expect-error: StackTraceLimit is not defined in the Error type
             const currentLimit = Error.stackTraceLimit;
+            // @ts-expect-error: StackTraceLimit is not defined in the Error type
             Error.stackTraceLimit = limit;
             current.current = currentLimit;
         }
         catch { }
         return () => {
             try {
+                // @ts-expect-error: StackTraceLimit is not defined in the Error type
                 Error.stackTraceLimit = current.current;
             }
             catch { }
@@ -29,29 +32,25 @@ function useRejectionHandler() {
     react_1.default.useEffect(() => {
         function onUnhandledError(ev) {
             hasError.current = true;
-            const error = ev === null || ev === void 0 ? void 0 : ev.error;
-            if (!error ||
-                !(error instanceof Error) ||
-                typeof error.stack !== "string") {
+            const error = ev?.error;
+            if (!error || !(error instanceof Error) || typeof error.stack !== 'string') {
                 return;
             }
             ExceptionsManager_1.default.handleException(error);
         }
         function onUnhandledRejection(ev) {
             hasError.current = true;
-            const reason = ev === null || ev === void 0 ? void 0 : ev.reason;
-            if (!reason ||
-                !(reason instanceof Error) ||
-                typeof reason.stack !== "string") {
+            const reason = ev?.reason;
+            if (!reason || !(reason instanceof Error) || typeof reason.stack !== 'string') {
                 return;
             }
             ExceptionsManager_1.default.handleException(reason);
         }
-        window.addEventListener("unhandledrejection", onUnhandledRejection);
-        window.addEventListener("error", onUnhandledError);
+        window.addEventListener('unhandledrejection', onUnhandledRejection);
+        window.addEventListener('error', onUnhandledError);
         return () => {
-            window.removeEventListener("error", onUnhandledError);
-            window.removeEventListener("unhandledrejection", onUnhandledRejection);
+            window.removeEventListener('error', onUnhandledError);
+            window.removeEventListener('unhandledrejection', onUnhandledRejection);
         };
     }, []);
     return hasError;
diff --git a/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.js.map b/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.js.map
index b4ce12a..d570f80 100644
--- a/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.js.map
+++ b/node_modules/@expo/metro-runtime/build/error-overlay/useRejectionHandler.js.map
@@ -1 +1 @@
-{"version":3,"file":"useRejectionHandler.js","sourceRoot":"","sources":["../../src/error-overlay/useRejectionHandler.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAE1B,oFAA4D;AAE5D,SAAS,kBAAkB,CAAC,KAAa;IACvC,MAAM,OAAO,GAAG,eAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI;YACF,MAAM,YAAY,GAAG,KAAK,CAAC,eAAe,CAAC;YAC3C,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;YAC9B,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC;SAChC;QAAC,MAAM,GAAE;QACV,OAAO,GAAG,EAAE;YACV,IAAI;gBACF,KAAK,CAAC,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC;aACzC;YAAC,MAAM,GAAE;QACZ,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACd,CAAC;AAED,SAAgB,mBAAmB;IACjC,MAAM,QAAQ,GAAG,eAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAErC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IAEvB,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,SAAS,gBAAgB,CAAC,EAAc;YACtC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;YAExB,MAAM,KAAK,GAAG,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,KAAK,CAAC;YACxB,IACE,CAAC,KAAK;gBACN,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC;gBACzB,OAAO,KAAK,CAAC,KAAK,KAAK,QAAQ,EAC/B;gBACA,OAAO;aACR;YAED,2BAAiB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC;QAED,SAAS,oBAAoB,CAAC,EAAyB;YACrD,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;YAExB,MAAM,MAAM,GAAG,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,MAAM,CAAC;YAC1B,IACE,CAAC,MAAM;gBACP,CAAC,CAAC,MAAM,YAAY,KAAK,CAAC;gBAC1B,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,EAChC;gBACA,OAAO;aACR;YAED,2BAAiB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAAC;QACpE,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;QACnD,OAAO,GAAG,EAAE;YACV,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;YACtD,MAAM,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAAC;QACzE,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,QAAQ,CAAC;AAClB,CAAC;AA7CD,kDA6CC","sourcesContent":["import React from \"react\";\n\nimport ExceptionsManager from \"./modules/ExceptionsManager\";\n\nfunction useStackTraceLimit(limit: number) {\n  const current = React.useRef(0);\n  React.useEffect(() => {\n    try {\n      const currentLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = limit;\n      current.current = currentLimit;\n    } catch {}\n    return () => {\n      try {\n        Error.stackTraceLimit = current.current;\n      } catch {}\n    };\n  }, [limit]);\n}\n\nexport function useRejectionHandler() {\n  const hasError = React.useRef(false);\n\n  useStackTraceLimit(35);\n\n  React.useEffect(() => {\n    function onUnhandledError(ev: ErrorEvent) {\n      hasError.current = true;\n\n      const error = ev?.error;\n      if (\n        !error ||\n        !(error instanceof Error) ||\n        typeof error.stack !== \"string\"\n      ) {\n        return;\n      }\n\n      ExceptionsManager.handleException(error);\n    }\n\n    function onUnhandledRejection(ev: PromiseRejectionEvent) {\n      hasError.current = true;\n\n      const reason = ev?.reason;\n      if (\n        !reason ||\n        !(reason instanceof Error) ||\n        typeof reason.stack !== \"string\"\n      ) {\n        return;\n      }\n\n      ExceptionsManager.handleException(reason);\n    }\n\n    window.addEventListener(\"unhandledrejection\", onUnhandledRejection);\n    window.addEventListener(\"error\", onUnhandledError);\n    return () => {\n      window.removeEventListener(\"error\", onUnhandledError);\n      window.removeEventListener(\"unhandledrejection\", onUnhandledRejection);\n    };\n  }, []);\n\n  return hasError;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"useRejectionHandler.js","sourceRoot":"","sources":["../../src/error-overlay/useRejectionHandler.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAE1B,oFAA4D;AAE5D,SAAS,kBAAkB,CAAC,KAAa;IACvC,MAAM,OAAO,GAAG,eAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI;YACF,qEAAqE;YACrE,MAAM,YAAY,GAAG,KAAK,CAAC,eAAe,CAAC;YAC3C,qEAAqE;YACrE,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;YAC9B,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC;SAChC;QAAC,MAAM,GAAE;QACV,OAAO,GAAG,EAAE;YACV,IAAI;gBACF,qEAAqE;gBACrE,KAAK,CAAC,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC;aACzC;YAAC,MAAM,GAAE;QACZ,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACd,CAAC;AAED,SAAgB,mBAAmB;IACjC,MAAM,QAAQ,GAAG,eAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAErC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IAEvB,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,SAAS,gBAAgB,CAAC,EAAc;YACtC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;YAExB,MAAM,KAAK,GAAG,EAAE,EAAE,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,QAAQ,EAAE;gBAC1E,OAAO;aACR;YAED,2BAAiB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC;QAED,SAAS,oBAAoB,CAAC,EAAyB;YACrD,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;YAExB,MAAM,MAAM,GAAG,EAAE,EAAE,MAAM,CAAC;YAC1B,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,YAAY,KAAK,CAAC,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,EAAE;gBAC7E,OAAO;aACR;YAED,2BAAiB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAAC;QACpE,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;QACnD,OAAO,GAAG,EAAE;YACV,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;YACtD,MAAM,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAAC;QACzE,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,QAAQ,CAAC;AAClB,CAAC;AArCD,kDAqCC","sourcesContent":["import React from 'react';\n\nimport ExceptionsManager from './modules/ExceptionsManager';\n\nfunction useStackTraceLimit(limit: number) {\n  const current = React.useRef(0);\n  React.useEffect(() => {\n    try {\n      // @ts-expect-error: StackTraceLimit is not defined in the Error type\n      const currentLimit = Error.stackTraceLimit;\n      // @ts-expect-error: StackTraceLimit is not defined in the Error type\n      Error.stackTraceLimit = limit;\n      current.current = currentLimit;\n    } catch {}\n    return () => {\n      try {\n        // @ts-expect-error: StackTraceLimit is not defined in the Error type\n        Error.stackTraceLimit = current.current;\n      } catch {}\n    };\n  }, [limit]);\n}\n\nexport function useRejectionHandler() {\n  const hasError = React.useRef(false);\n\n  useStackTraceLimit(35);\n\n  React.useEffect(() => {\n    function onUnhandledError(ev: ErrorEvent) {\n      hasError.current = true;\n\n      const error = ev?.error;\n      if (!error || !(error instanceof Error) || typeof error.stack !== 'string') {\n        return;\n      }\n\n      ExceptionsManager.handleException(error);\n    }\n\n    function onUnhandledRejection(ev: PromiseRejectionEvent) {\n      hasError.current = true;\n\n      const reason = ev?.reason;\n      if (!reason || !(reason instanceof Error) || typeof reason.stack !== 'string') {\n        return;\n      }\n\n      ExceptionsManager.handleException(reason);\n    }\n\n    window.addEventListener('unhandledrejection', onUnhandledRejection);\n    window.addEventListener('error', onUnhandledError);\n    return () => {\n      window.removeEventListener('error', onUnhandledError);\n      window.removeEventListener('unhandledrejection', onUnhandledRejection);\n    };\n  }, []);\n\n  return hasError;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/getDevServer.d.ts.map b/node_modules/@expo/metro-runtime/build/getDevServer.d.ts.map
index 8c005a9..23441c6 100644
--- a/node_modules/@expo/metro-runtime/build/getDevServer.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/getDevServer.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"getDevServer.d.ts","sourceRoot":"","sources":["../src/getDevServer.ts"],"names":[],"mappings":"AAGA,QAAA,MAAM,YAAY;;IAcd,0DAA0D;;;CAkB7D,CAAC;AAGF,eAAe,YAAY,CAAC"}
\ No newline at end of file
+{"version":3,"file":"getDevServer.d.ts","sourceRoot":"","sources":["../src/getDevServer.ts"],"names":[],"mappings":"AAGA,QAAA,MAAM,YAAY;;IAcd,0DAA0D;;;CAkB7D,CAAC;AAEF,eAAe,YAAY,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/getDevServer.js b/node_modules/@expo/metro-runtime/build/getDevServer.js
index 23c9e8c..ffdd560 100644
--- a/node_modules/@expo/metro-runtime/build/getDevServer.js
+++ b/node_modules/@expo/metro-runtime/build/getDevServer.js
@@ -10,8 +10,8 @@ const getDevServer = () => {
     if (!expo_modules_core_1.Platform.isDOMAvailable) {
         return {
             bundleLoadedFromServer: true,
-            fullBundleUrl: "",
-            url: "",
+            fullBundleUrl: '',
+            url: '',
         };
     }
     return {
@@ -19,19 +19,18 @@ const getDevServer = () => {
         bundleLoadedFromServer: true,
         /** URL but ensures that platform query param is added. */
         get fullBundleUrl() {
-            if ((document === null || document === void 0 ? void 0 : document.currentScript) && "src" in document.currentScript) {
+            if (document?.currentScript && 'src' in document.currentScript) {
                 return document.currentScript.src;
             }
             const url = window.location.toString();
             const query = qs_1.default.parse(url);
             return (location.origin +
                 location.pathname +
-                "?" +
+                '?' +
                 qs_1.default.stringify({ ...query, platform: expo_modules_core_1.Platform.OS }));
         },
         url: location.origin + location.pathname,
     };
 };
-module.exports = getDevServer;
 exports.default = getDevServer;
 //# sourceMappingURL=getDevServer.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/getDevServer.js.map b/node_modules/@expo/metro-runtime/build/getDevServer.js.map
index 0d7e871..4648876 100644
--- a/node_modules/@expo/metro-runtime/build/getDevServer.js.map
+++ b/node_modules/@expo/metro-runtime/build/getDevServer.js.map
@@ -1 +1 @@
-{"version":3,"file":"getDevServer.js","sourceRoot":"","sources":["../src/getDevServer.ts"],"names":[],"mappings":";;;;;AAAA,yDAA6C;AAC7C,4CAAoB;AAEpB,MAAM,YAAY,GAAG,GAAG,EAAE;IACxB,kBAAkB;IAClB,IAAI,CAAC,4BAAQ,CAAC,cAAc,EAAE;QAC5B,OAAO;YACL,sBAAsB,EAAE,IAAI;YAC5B,aAAa,EAAE,EAAE;YACjB,GAAG,EAAE,EAAE;SACR,CAAC;KACH;IAED,OAAO;QACL,4DAA4D;QAC5D,sBAAsB,EAAE,IAAI;QAE5B,0DAA0D;QAC1D,IAAI,aAAa;YACf,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,KAAI,KAAK,IAAI,QAAQ,CAAC,aAAa,EAAE;gBAC9D,OAAO,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;aACnC;YAED,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACvC,MAAM,KAAK,GAAG,YAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE5B,OAAO,CACL,QAAQ,CAAC,MAAM;gBACf,QAAQ,CAAC,QAAQ;gBACjB,GAAG;gBACH,YAAE,CAAC,SAAS,CAAC,EAAE,GAAG,KAAK,EAAE,QAAQ,EAAE,4BAAQ,CAAC,EAAE,EAAE,CAAC,CAClD,CAAC;QACJ,CAAC;QACD,GAAG,EAAE,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ;KACzC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC;AAC9B,kBAAe,YAAY,CAAC","sourcesContent":["import { Platform } from \"expo-modules-core\";\nimport qs from \"qs\";\n\nconst getDevServer = () => {\n  // Disable for SSR\n  if (!Platform.isDOMAvailable) {\n    return {\n      bundleLoadedFromServer: true,\n      fullBundleUrl: \"\",\n      url: \"\",\n    };\n  }\n\n  return {\n    // The bundle is always loaded from a server in the browser.\n    bundleLoadedFromServer: true,\n\n    /** URL but ensures that platform query param is added. */\n    get fullBundleUrl() {\n      if (document?.currentScript && \"src\" in document.currentScript) {\n        return document.currentScript.src;\n      }\n\n      const url = window.location.toString();\n      const query = qs.parse(url);\n\n      return (\n        location.origin +\n        location.pathname +\n        \"?\" +\n        qs.stringify({ ...query, platform: Platform.OS })\n      );\n    },\n    url: location.origin + location.pathname,\n  };\n};\n\nmodule.exports = getDevServer;\nexport default getDevServer;\n"]}
\ No newline at end of file
+{"version":3,"file":"getDevServer.js","sourceRoot":"","sources":["../src/getDevServer.ts"],"names":[],"mappings":";;;;;AAAA,yDAA6C;AAC7C,4CAAoB;AAEpB,MAAM,YAAY,GAAG,GAAG,EAAE;IACxB,kBAAkB;IAClB,IAAI,CAAC,4BAAQ,CAAC,cAAc,EAAE;QAC5B,OAAO;YACL,sBAAsB,EAAE,IAAI;YAC5B,aAAa,EAAE,EAAE;YACjB,GAAG,EAAE,EAAE;SACR,CAAC;KACH;IAED,OAAO;QACL,4DAA4D;QAC5D,sBAAsB,EAAE,IAAI;QAE5B,0DAA0D;QAC1D,IAAI,aAAa;YACf,IAAI,QAAQ,EAAE,aAAa,IAAI,KAAK,IAAI,QAAQ,CAAC,aAAa,EAAE;gBAC9D,OAAO,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;aACnC;YAED,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACvC,MAAM,KAAK,GAAG,YAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE5B,OAAO,CACL,QAAQ,CAAC,MAAM;gBACf,QAAQ,CAAC,QAAQ;gBACjB,GAAG;gBACH,YAAE,CAAC,SAAS,CAAC,EAAE,GAAG,KAAK,EAAE,QAAQ,EAAE,4BAAQ,CAAC,EAAE,EAAE,CAAC,CAClD,CAAC;QACJ,CAAC;QACD,GAAG,EAAE,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ;KACzC,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { Platform } from 'expo-modules-core';\nimport qs from 'qs';\n\nconst getDevServer = () => {\n  // Disable for SSR\n  if (!Platform.isDOMAvailable) {\n    return {\n      bundleLoadedFromServer: true,\n      fullBundleUrl: '',\n      url: '',\n    };\n  }\n\n  return {\n    // The bundle is always loaded from a server in the browser.\n    bundleLoadedFromServer: true,\n\n    /** URL but ensures that platform query param is added. */\n    get fullBundleUrl() {\n      if (document?.currentScript && 'src' in document.currentScript) {\n        return document.currentScript.src;\n      }\n\n      const url = window.location.toString();\n      const query = qs.parse(url);\n\n      return (\n        location.origin +\n        location.pathname +\n        '?' +\n        qs.stringify({ ...query, platform: Platform.OS })\n      );\n    },\n    url: location.origin + location.pathname,\n  };\n};\n\nexport default getDevServer;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/getDevServer.native.d.ts b/node_modules/@expo/metro-runtime/build/getDevServer.native.d.ts
index cc06c51..fc5ce4f 100644
--- a/node_modules/@expo/metro-runtime/build/getDevServer.native.d.ts
+++ b/node_modules/@expo/metro-runtime/build/getDevServer.native.d.ts
@@ -1 +1,3 @@
+import getDevServer from 'react-native/Libraries/Core/Devtools/getDevServer';
+export default getDevServer;
 //# sourceMappingURL=getDevServer.native.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/getDevServer.native.d.ts.map b/node_modules/@expo/metro-runtime/build/getDevServer.native.d.ts.map
index c7c5cf8..72ec7f6 100644
--- a/node_modules/@expo/metro-runtime/build/getDevServer.native.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/getDevServer.native.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"getDevServer.native.d.ts","sourceRoot":"","sources":["../src/getDevServer.native.ts"],"names":[],"mappings":""}
\ No newline at end of file
+{"version":3,"file":"getDevServer.native.d.ts","sourceRoot":"","sources":["../src/getDevServer.native.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,mDAAmD,CAAC;AAE7E,eAAe,YAAY,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/getDevServer.native.js b/node_modules/@expo/metro-runtime/build/getDevServer.native.js
index 2645e21..17b6406 100644
--- a/node_modules/@expo/metro-runtime/build/getDevServer.native.js
+++ b/node_modules/@expo/metro-runtime/build/getDevServer.native.js
@@ -1,3 +1,8 @@
 "use strict";
-module.exports = require("react-native/Libraries/Core/Devtools/getDevServer");
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+const getDevServer_1 = __importDefault(require("react-native/Libraries/Core/Devtools/getDevServer"));
+exports.default = getDevServer_1.default;
 //# sourceMappingURL=getDevServer.native.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/getDevServer.native.js.map b/node_modules/@expo/metro-runtime/build/getDevServer.native.js.map
index 7d3cac3..aec9b33 100644
--- a/node_modules/@expo/metro-runtime/build/getDevServer.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/getDevServer.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"getDevServer.native.js","sourceRoot":"","sources":["../src/getDevServer.native.ts"],"names":[],"mappings":";AAAA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,mDAAmD,CAAC,CAAC","sourcesContent":["module.exports = require(\"react-native/Libraries/Core/Devtools/getDevServer\");\n"]}
\ No newline at end of file
+{"version":3,"file":"getDevServer.native.js","sourceRoot":"","sources":["../src/getDevServer.native.ts"],"names":[],"mappings":";;;;;AAAA,qGAA6E;AAE7E,kBAAe,sBAAY,CAAC","sourcesContent":["import getDevServer from 'react-native/Libraries/Core/Devtools/getDevServer';\n\nexport default getDevServer;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/index.d.ts b/node_modules/@expo/metro-runtime/build/index.d.ts
index cc8e0c9..8479ef8 100644
--- a/node_modules/@expo/metro-runtime/build/index.d.ts
+++ b/node_modules/@expo/metro-runtime/build/index.d.ts
@@ -1,3 +1,2 @@
-import "./location/install";
-import "./effects";
+import './location/install';
 //# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/index.d.ts.map b/node_modules/@expo/metro-runtime/build/index.d.ts.map
index 3be4b9d..109fc6d 100644
--- a/node_modules/@expo/metro-runtime/build/index.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,oBAAoB,CAAC;AAE5B,OAAO,WAAW,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,oBAAoB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/index.js b/node_modules/@expo/metro-runtime/build/index.js
index a0c20bd..98fd6fc 100644
--- a/node_modules/@expo/metro-runtime/build/index.js
+++ b/node_modules/@expo/metro-runtime/build/index.js
@@ -1,12 +1,12 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 require("./location/install");
-// IMPORT POSITION MATTERS FOR FAST REFRESH ON WEB
-require("./effects");
 // Ensure this is removed in production.
 // TODO: Enable in production.
-if (process.env.NODE_ENV !== "production") {
+if (process.env.NODE_ENV !== 'production') {
+    // IMPORT POSITION MATTERS FOR FAST REFRESH ON WEB
+    require('./effects');
     // vvv EVERYTHING ELSE vvv
-    require("./async-require");
+    require('./async-require');
 }
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/index.js.map b/node_modules/@expo/metro-runtime/build/index.js.map
index 03418a6..d68fff0 100644
--- a/node_modules/@expo/metro-runtime/build/index.js.map
+++ b/node_modules/@expo/metro-runtime/build/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,8BAA4B;AAC5B,kDAAkD;AAClD,qBAAmB;AAEnB,wCAAwC;AACxC,8BAA8B;AAC9B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,0BAA0B;IAC1B,OAAO,CAAC,iBAAiB,CAAC,CAAC;CAC5B","sourcesContent":["import \"./location/install\";\n// IMPORT POSITION MATTERS FOR FAST REFRESH ON WEB\nimport \"./effects\";\n\n// Ensure this is removed in production.\n// TODO: Enable in production.\nif (process.env.NODE_ENV !== \"production\") {\n  // vvv EVERYTHING ELSE vvv\n  require(\"./async-require\");\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,8BAA4B;AAE5B,wCAAwC;AACxC,8BAA8B;AAC9B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,kDAAkD;IAClD,OAAO,CAAC,WAAW,CAAC,CAAC;IACrB,0BAA0B;IAC1B,OAAO,CAAC,iBAAiB,CAAC,CAAC;CAC5B","sourcesContent":["import './location/install';\n\n// Ensure this is removed in production.\n// TODO: Enable in production.\nif (process.env.NODE_ENV !== 'production') {\n  // IMPORT POSITION MATTERS FOR FAST REFRESH ON WEB\n  require('./effects');\n  // vvv EVERYTHING ELSE vvv\n  require('./async-require');\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/location/Location.native.d.ts.map b/node_modules/@expo/metro-runtime/build/location/Location.native.d.ts.map
index 32b6f4c..7ad89b2 100644
--- a/node_modules/@expo/metro-runtime/build/location/Location.native.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/location/Location.native.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Location.native.d.ts","sourceRoot":"","sources":["../../src/location/Location.native.ts"],"names":[],"mappings":"AAsNA,wBAAgB,eAAe,CAAC,IAAI,EAAE,MAAM,QAE3C;AAED,wBAAgB,OAAO,SAgBtB"}
\ No newline at end of file
+{"version":3,"file":"Location.native.d.ts","sourceRoot":"","sources":["../../src/location/Location.native.ts"],"names":[],"mappings":"AAoLA,wBAAgB,eAAe,CAAC,IAAI,EAAE,MAAM,QAE3C;AAED,wBAAgB,OAAO,SAgBtB"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/location/Location.native.js b/node_modules/@expo/metro-runtime/build/location/Location.native.js
index f077064..09d38a9 100644
--- a/node_modules/@expo/metro-runtime/build/location/Location.native.js
+++ b/node_modules/@expo/metro-runtime/build/location/Location.native.js
@@ -24,16 +24,16 @@ class Location {
         // @ts-expect-error
         href);
         // @ts-expect-error
-        url.username = "";
+        url.username = '';
         // @ts-expect-error
-        url.password = "";
+        url.password = '';
         Object.defineProperties(this, {
             hash: {
                 get() {
                     return url.hash;
                 },
                 set() {
-                    throw new DOMException(`Cannot set "location.hash".`, "NotSupportedError");
+                    throw new DOMException(`Cannot set "location.hash".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -42,7 +42,7 @@ class Location {
                     return url.host;
                 },
                 set() {
-                    throw new DOMException(`Cannot set "location.host".`, "NotSupportedError");
+                    throw new DOMException(`Cannot set "location.host".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -51,7 +51,7 @@ class Location {
                     return url.hostname;
                 },
                 set() {
-                    throw new DOMException(`Cannot set "location.hostname".`, "NotSupportedError");
+                    throw new DOMException(`Cannot set "location.hostname".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -60,7 +60,7 @@ class Location {
                     return url.href;
                 },
                 set() {
-                    throw new DOMException(`Cannot set "location.href".`, "NotSupportedError");
+                    throw new DOMException(`Cannot set "location.href".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -75,7 +75,7 @@ class Location {
                     return url.pathname;
                 },
                 set() {
-                    throw new DOMException(`Cannot set "location.pathname".`, "NotSupportedError");
+                    throw new DOMException(`Cannot set "location.pathname".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -84,7 +84,7 @@ class Location {
                     return url.port;
                 },
                 set() {
-                    throw new DOMException(`Cannot set "location.port".`, "NotSupportedError");
+                    throw new DOMException(`Cannot set "location.port".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -93,7 +93,7 @@ class Location {
                     return url.protocol;
                 },
                 set() {
-                    throw new DOMException(`Cannot set "location.protocol".`, "NotSupportedError");
+                    throw new DOMException(`Cannot set "location.protocol".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -103,7 +103,7 @@ class Location {
                     return url.search;
                 },
                 set() {
-                    throw new DOMException(`Cannot set "location.search".`, "NotSupportedError");
+                    throw new DOMException(`Cannot set "location.search".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -119,29 +119,30 @@ class Location {
             },
             assign: {
                 value: function assign() {
-                    throw new DOMException(`Cannot call "location.assign()".`, "NotSupportedError");
+                    throw new DOMException(`Cannot call "location.assign()".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
             reload: {
                 value: function reload() {
-                    if (process.env.NODE_ENV !== "production") {
+                    if (process.env.NODE_ENV !== 'production') {
                         // NOTE: This does change how native fast refresh works. The upstream metro-runtime will check
                         // if `location.reload` exists before falling back on an implementation that is nearly identical to
                         // this. The main difference is that on iOS there is a "reason" message sent, but at the time of writing
                         // this, that message is unused (ref: `RCTTriggerReloadCommandNotification`).
-                        const DevSettings = require("react-native").DevSettings;
+                        const DevSettings = require('react-native')
+                            .DevSettings;
                         return DevSettings.reload();
                     }
                     else {
-                        throw new DOMException(`Cannot call "location.reload()".`, "NotSupportedError");
+                        throw new DOMException(`Cannot call "location.reload()".`, 'NotSupportedError');
                     }
                 },
                 enumerable: true,
             },
             replace: {
                 value: function replace() {
-                    throw new DOMException(`Cannot call "location.replace()".`, "NotSupportedError");
+                    throw new DOMException(`Cannot call "location.replace()".`, 'NotSupportedError');
                 },
                 enumerable: true,
             },
@@ -151,7 +152,7 @@ class Location {
                 },
                 enumerable: true,
             },
-            [Symbol.for("Expo.privateCustomInspect")]: {
+            [Symbol.for('Expo.privateCustomInspect')]: {
                 value(inspect) {
                     const object = {
                         hash: this.hash,
@@ -172,7 +173,7 @@ class Location {
 }
 Object.defineProperties(Location.prototype, {
     [Symbol.toString()]: {
-        value: "Location",
+        value: 'Location',
         configurable: true,
     },
 });
@@ -182,17 +183,17 @@ function setLocationHref(href) {
 }
 exports.setLocationHref = setLocationHref;
 function install() {
-    Object.defineProperty(global, "Location", {
+    Object.defineProperty(global, 'Location', {
         value: Location,
         configurable: true,
         writable: true,
     });
-    Object.defineProperty(window, "location", {
+    Object.defineProperty(window, 'location', {
         get() {
             return location;
         },
         set() {
-            throw new DOMException(`Cannot set "location".`, "NotSupportedError");
+            throw new DOMException(`Cannot set "location".`, 'NotSupportedError');
         },
         enumerable: true,
     });
diff --git a/node_modules/@expo/metro-runtime/build/location/Location.native.js.map b/node_modules/@expo/metro-runtime/build/location/Location.native.js.map
index 2e2296f..6bb6180 100644
--- a/node_modules/@expo/metro-runtime/build/location/Location.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/location/Location.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"Location.native.js","sourceRoot":"","sources":["../../src/location/Location.native.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright © 2023 650 Industries.\n// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.\n\nimport URL from \"url-parse\";\n\nclass DOMException extends Error {\n  constructor(message: string, name: string) {\n    super(message);\n    this.name = name;\n  }\n}\n\n// The differences between the definitions of `Location` and `WorkerLocation`\n// are because of the `LegacyUnforgeable` attribute only specified upon\n// `Location`'s properties. See:\n// - https://html.spec.whatwg.org/multipage/history.html#the-location-interface\n// - https://heycam.github.io/webidl/#LegacyUnforgeable\nclass Location {\n  constructor(href: string | null = null) {\n    const url = new URL(\n      // @ts-expect-error\n      href\n    );\n    // @ts-expect-error\n    url.username = \"\";\n    // @ts-expect-error\n    url.password = \"\";\n    Object.defineProperties(this, {\n      hash: {\n        get() {\n          return url.hash;\n        },\n        set() {\n          throw new DOMException(\n            `Cannot set \"location.hash\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      host: {\n        get() {\n          return url.host;\n        },\n        set() {\n          throw new DOMException(\n            `Cannot set \"location.host\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      hostname: {\n        get() {\n          return url.hostname;\n        },\n        set() {\n          throw new DOMException(\n            `Cannot set \"location.hostname\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      href: {\n        get() {\n          return url.href;\n        },\n        set() {\n          throw new DOMException(\n            `Cannot set \"location.href\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      origin: {\n        get() {\n          return url.origin;\n        },\n        enumerable: true,\n      },\n      pathname: {\n        get() {\n          return url.pathname;\n        },\n        set() {\n          throw new DOMException(\n            `Cannot set \"location.pathname\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      port: {\n        get() {\n          return url.port;\n        },\n        set() {\n          throw new DOMException(\n            `Cannot set \"location.port\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      protocol: {\n        get() {\n          return url.protocol;\n        },\n        set() {\n          throw new DOMException(\n            `Cannot set \"location.protocol\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      search: {\n        get() {\n          // @ts-expect-error\n          return url.search;\n        },\n        set() {\n          throw new DOMException(\n            `Cannot set \"location.search\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      ancestorOrigins: {\n        get() {\n          return {\n            length: 0,\n            item: () => null,\n            contains: () => false,\n          };\n        },\n        enumerable: true,\n      },\n      assign: {\n        value: function assign() {\n          throw new DOMException(\n            `Cannot call \"location.assign()\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      reload: {\n        value: function reload() {\n          if (process.env.NODE_ENV !== \"production\") {\n            // NOTE: This does change how native fast refresh works. The upstream metro-runtime will check\n            // if `location.reload` exists before falling back on an implementation that is nearly identical to\n            // this. The main difference is that on iOS there is a \"reason\" message sent, but at the time of writing\n            // this, that message is unused (ref: `RCTTriggerReloadCommandNotification`).\n            const DevSettings = (\n              require(\"react-native\") as typeof import(\"react-native\")\n            ).DevSettings;\n            return DevSettings.reload();\n          } else {\n            throw new DOMException(\n              `Cannot call \"location.reload()\".`,\n              \"NotSupportedError\"\n            );\n          }\n        },\n        enumerable: true,\n      },\n      replace: {\n        value: function replace() {\n          throw new DOMException(\n            `Cannot call \"location.replace()\".`,\n            \"NotSupportedError\"\n          );\n        },\n        enumerable: true,\n      },\n      toString: {\n        value: function toString() {\n          return url.href;\n        },\n        enumerable: true,\n      },\n      [Symbol.for(\"Expo.privateCustomInspect\")]: {\n        value(inspect: any) {\n          const object = {\n            hash: this.hash,\n            host: this.host,\n            hostname: this.hostname,\n            href: this.href,\n            origin: this.origin,\n            pathname: this.pathname,\n            port: this.port,\n            protocol: this.protocol,\n            search: this.search,\n          };\n          return `${this.constructor.name} ${inspect(object)}`;\n        },\n      },\n    });\n  }\n}\n\nObject.defineProperties(Location.prototype, {\n  [Symbol.toString()]: {\n    value: \"Location\",\n    configurable: true,\n  },\n});\n\nlet location: Location | undefined = undefined;\n\nexport function setLocationHref(href: string) {\n  location = new Location(href);\n}\n\nexport function install() {\n  Object.defineProperty(global, \"Location\", {\n    value: Location,\n    configurable: true,\n    writable: true,\n  });\n\n  Object.defineProperty(window, \"location\", {\n    get() {\n      return location;\n    },\n    set() {\n      throw new DOMException(`Cannot set \"location\".`, \"NotSupportedError\");\n    },\n    enumerable: true,\n  });\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"Location.native.js","sourceRoot":"","sources":["../../src/location/Location.native.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright © 2023 650 Industries.\n// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.\n\nimport URL from 'url-parse';\n\nclass DOMException extends Error {\n  constructor(message: string, name: string) {\n    super(message);\n    this.name = name;\n  }\n}\n\n// The differences between the definitions of `Location` and `WorkerLocation`\n// are because of the `LegacyUnforgeable` attribute only specified upon\n// `Location`'s properties. See:\n// - https://html.spec.whatwg.org/multipage/history.html#the-location-interface\n// - https://heycam.github.io/webidl/#LegacyUnforgeable\nclass Location {\n  constructor(href: string | null = null) {\n    const url = new URL(\n      // @ts-expect-error\n      href\n    );\n    // @ts-expect-error\n    url.username = '';\n    // @ts-expect-error\n    url.password = '';\n    Object.defineProperties(this, {\n      hash: {\n        get() {\n          return url.hash;\n        },\n        set() {\n          throw new DOMException(`Cannot set \"location.hash\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      host: {\n        get() {\n          return url.host;\n        },\n        set() {\n          throw new DOMException(`Cannot set \"location.host\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      hostname: {\n        get() {\n          return url.hostname;\n        },\n        set() {\n          throw new DOMException(`Cannot set \"location.hostname\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      href: {\n        get() {\n          return url.href;\n        },\n        set() {\n          throw new DOMException(`Cannot set \"location.href\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      origin: {\n        get() {\n          return url.origin;\n        },\n        enumerable: true,\n      },\n      pathname: {\n        get() {\n          return url.pathname;\n        },\n        set() {\n          throw new DOMException(`Cannot set \"location.pathname\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      port: {\n        get() {\n          return url.port;\n        },\n        set() {\n          throw new DOMException(`Cannot set \"location.port\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      protocol: {\n        get() {\n          return url.protocol;\n        },\n        set() {\n          throw new DOMException(`Cannot set \"location.protocol\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      search: {\n        get() {\n          // @ts-expect-error\n          return url.search;\n        },\n        set() {\n          throw new DOMException(`Cannot set \"location.search\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      ancestorOrigins: {\n        get() {\n          return {\n            length: 0,\n            item: () => null,\n            contains: () => false,\n          };\n        },\n        enumerable: true,\n      },\n      assign: {\n        value: function assign() {\n          throw new DOMException(`Cannot call \"location.assign()\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      reload: {\n        value: function reload() {\n          if (process.env.NODE_ENV !== 'production') {\n            // NOTE: This does change how native fast refresh works. The upstream metro-runtime will check\n            // if `location.reload` exists before falling back on an implementation that is nearly identical to\n            // this. The main difference is that on iOS there is a \"reason\" message sent, but at the time of writing\n            // this, that message is unused (ref: `RCTTriggerReloadCommandNotification`).\n            const DevSettings = (require('react-native') as typeof import('react-native'))\n              .DevSettings;\n            return DevSettings.reload();\n          } else {\n            throw new DOMException(`Cannot call \"location.reload()\".`, 'NotSupportedError');\n          }\n        },\n        enumerable: true,\n      },\n      replace: {\n        value: function replace() {\n          throw new DOMException(`Cannot call \"location.replace()\".`, 'NotSupportedError');\n        },\n        enumerable: true,\n      },\n      toString: {\n        value: function toString() {\n          return url.href;\n        },\n        enumerable: true,\n      },\n      [Symbol.for('Expo.privateCustomInspect')]: {\n        value(inspect: any) {\n          const object = {\n            hash: this.hash,\n            host: this.host,\n            hostname: this.hostname,\n            href: this.href,\n            origin: this.origin,\n            pathname: this.pathname,\n            port: this.port,\n            protocol: this.protocol,\n            search: this.search,\n          };\n          return `${this.constructor.name} ${inspect(object)}`;\n        },\n      },\n    });\n  }\n}\n\nObject.defineProperties(Location.prototype, {\n  [Symbol.toString()]: {\n    value: 'Location',\n    configurable: true,\n  },\n});\n\nlet location: Location | undefined = undefined;\n\nexport function setLocationHref(href: string) {\n  location = new Location(href);\n}\n\nexport function install() {\n  Object.defineProperty(global, 'Location', {\n    value: Location,\n    configurable: true,\n    writable: true,\n  });\n\n  Object.defineProperty(window, 'location', {\n    get() {\n      return location;\n    },\n    set() {\n      throw new DOMException(`Cannot set \"location\".`, 'NotSupportedError');\n    },\n    enumerable: true,\n  });\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/location/install.js b/node_modules/@expo/metro-runtime/build/location/install.js
index 24323b0..3c7cff6 100644
--- a/node_modules/@expo/metro-runtime/build/location/install.js
+++ b/node_modules/@expo/metro-runtime/build/location/install.js
@@ -1,2 +1 @@
-"use strict";
 //# sourceMappingURL=install.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/location/install.native.d.ts b/node_modules/@expo/metro-runtime/build/location/install.native.d.ts
index d9ee86e..a8b49ca 100644
--- a/node_modules/@expo/metro-runtime/build/location/install.native.d.ts
+++ b/node_modules/@expo/metro-runtime/build/location/install.native.d.ts
@@ -1,2 +1,2 @@
-import "react-native/Libraries/Core/InitializeCore";
+import 'react-native/Libraries/Core/InitializeCore';
 //# sourceMappingURL=install.native.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/location/install.native.js b/node_modules/@expo/metro-runtime/build/location/install.native.js
index 7305e1b..7997a12 100644
--- a/node_modules/@expo/metro-runtime/build/location/install.native.js
+++ b/node_modules/@expo/metro-runtime/build/location/install.native.js
@@ -2,65 +2,59 @@
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
-var _a, _b;
 Object.defineProperty(exports, "__esModule", { value: true });
 // This MUST be first to ensure that `fetch` is defined in the React Native environment.
 require("react-native/Libraries/Core/InitializeCore");
 const expo_constants_1 = __importDefault(require("expo-constants"));
 const url_parse_1 = __importDefault(require("url-parse"));
-const getDevServer_1 = __importDefault(require("../getDevServer"));
 const Location_1 = require("./Location");
+const getDevServer_1 = __importDefault(require("../getDevServer"));
 let hasWarned = false;
 const manifest = expo_constants_1.default.expoConfig;
 // Add a development warning for fetch requests with relative paths
 // to ensure developers are aware of the need to configure a production
 // base URL in the Expo config (app.json) under `expo.extra.router.origin`.
 function warnProductionOriginNotConfigured(requestUrl) {
-    var _a, _b;
     if (hasWarned) {
         return;
     }
     hasWarned = true;
-    if (!((_b = (_a = manifest === null || manifest === void 0 ? void 0 : manifest.extra) === null || _a === void 0 ? void 0 : _a.router) === null || _b === void 0 ? void 0 : _b.origin)) {
+    if (!manifest?.extra?.router?.origin) {
         console.warn(`The relative fetch request "${requestUrl}" will not work in production until the Expo Router Config Plugin (app.json) is configured with the \`origin\` prop set to the base URL of your web server, e.g. \`{ plugins: [["expo-router", { origin: "..." }]] }\`. [Learn more](https://expo.github.io/router/docs/lab/runtime-location)`);
     }
 }
 // TODO: This would be better if native and tied as close to the JS engine as possible, i.e. it should
 // reflect the exact location of the JS file that was executed.
 function getBaseUrl() {
-    var _a, _b, _c;
-    if (process.env.NODE_ENV !== "production") {
+    if (process.env.NODE_ENV !== 'production') {
         // e.g. http://localhost:19006
-        return (_a = (0, getDevServer_1.default)().url) === null || _a === void 0 ? void 0 : _a.replace(/\/$/, "");
+        return (0, getDevServer_1.default)().url?.replace(/\/$/, '');
     }
     // TODO: Make it official by moving out of `extra`
-    const productionBaseUrl = (_c = (_b = manifest === null || manifest === void 0 ? void 0 : manifest.extra) === null || _b === void 0 ? void 0 : _b.router) === null || _c === void 0 ? void 0 : _c.origin;
+    const productionBaseUrl = manifest?.extra?.router?.origin;
     if (!productionBaseUrl) {
         return null;
     }
     // Ensure no trailing slash
-    return productionBaseUrl === null || productionBaseUrl === void 0 ? void 0 : productionBaseUrl.replace(/\/$/, "");
+    return productionBaseUrl?.replace(/\/$/, '');
 }
 function wrapFetchWithWindowLocation(fetch) {
     if (fetch.__EXPO_BASE_URL_POLYFILLED) {
         return fetch;
     }
     const _fetch = (...props) => {
-        var _a, _b;
-        if (props[0] && typeof props[0] === "string" && props[0].startsWith("/")) {
-            if (process.env.NODE_ENV !== "production") {
+        if (props[0] && typeof props[0] === 'string' && props[0].startsWith('/')) {
+            if (process.env.NODE_ENV !== 'production') {
                 warnProductionOriginNotConfigured(props[0]);
             }
-            props[0] = new url_parse_1.default(props[0], (_a = window.location) === null || _a === void 0 ? void 0 : _a.origin).toString();
+            props[0] = new url_parse_1.default(props[0], window.location?.origin).toString();
         }
-        else if (props[0] && typeof props[0] === "object") {
-            if (props[0].url &&
-                typeof props[0].url === "string" &&
-                props[0].url.startsWith("/")) {
-                if (process.env.NODE_ENV !== "production") {
+        else if (props[0] && typeof props[0] === 'object') {
+            if (props[0].url && typeof props[0].url === 'string' && props[0].url.startsWith('/')) {
+                if (process.env.NODE_ENV !== 'production') {
                     warnProductionOriginNotConfigured(props[0]);
                 }
-                props[0].url = new url_parse_1.default(props[0].url, (_b = window.location) === null || _b === void 0 ? void 0 : _b.origin).toString();
+                props[0].url = new url_parse_1.default(props[0].url, window.location?.origin).toString();
             }
         }
         return fetch(...props);
@@ -68,9 +62,9 @@ function wrapFetchWithWindowLocation(fetch) {
     _fetch.__EXPO_BASE_URL_POLYFILLED = true;
     return _fetch;
 }
-if (((_b = (_a = manifest === null || manifest === void 0 ? void 0 : manifest.extra) === null || _a === void 0 ? void 0 : _a.router) === null || _b === void 0 ? void 0 : _b.origin) !== false) {
+if (manifest?.extra?.router?.origin !== false) {
     // Polyfill window.location in native runtimes.
-    if (typeof window !== "undefined" && !window.location) {
+    if (typeof window !== 'undefined' && !window.location) {
         const url = getBaseUrl();
         if (url) {
             (0, Location_1.setLocationHref)(url);
@@ -78,7 +72,7 @@ if (((_b = (_a = manifest === null || manifest === void 0 ? void 0 : manifest.ex
         }
     }
     // Polyfill native fetch to support relative URLs
-    Object.defineProperty(global, "fetch", {
+    Object.defineProperty(global, 'fetch', {
         value: wrapFetchWithWindowLocation(fetch),
     });
 }
diff --git a/node_modules/@expo/metro-runtime/build/location/install.native.js.map b/node_modules/@expo/metro-runtime/build/location/install.native.js.map
index 9bb27b3..9f4eb4c 100644
--- a/node_modules/@expo/metro-runtime/build/location/install.native.js.map
+++ b/node_modules/@expo/metro-runtime/build/location/install.native.js.map
@@ -1 +1 @@
-{"version":3,"file":"install.native.js","sourceRoot":"","sources":["../../src/location/install.native.ts"],"names":[],"mappings":"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","sourcesContent":["// This MUST be first to ensure that `fetch` is defined in the React Native environment.\nimport \"react-native/Libraries/Core/InitializeCore\";\n\nimport Constants from \"expo-constants\";\nimport URL from \"url-parse\";\n\nimport getDevServer from \"../getDevServer\";\nimport { install, setLocationHref } from \"./Location\";\n\nlet hasWarned = false;\n\nconst manifest = Constants.expoConfig as Record<string, any> | null;\n\n// Add a development warning for fetch requests with relative paths\n// to ensure developers are aware of the need to configure a production\n// base URL in the Expo config (app.json) under `expo.extra.router.origin`.\nfunction warnProductionOriginNotConfigured(requestUrl: string) {\n  if (hasWarned) {\n    return;\n  }\n  hasWarned = true;\n  if (!manifest?.extra?.router?.origin) {\n    console.warn(\n      `The relative fetch request \"${requestUrl}\" will not work in production until the Expo Router Config Plugin (app.json) is configured with the \\`origin\\` prop set to the base URL of your web server, e.g. \\`{ plugins: [[\"expo-router\", { origin: \"...\" }]] }\\`. [Learn more](https://expo.github.io/router/docs/lab/runtime-location)`\n    );\n  }\n}\n\n// TODO: This would be better if native and tied as close to the JS engine as possible, i.e. it should\n// reflect the exact location of the JS file that was executed.\nfunction getBaseUrl() {\n  if (process.env.NODE_ENV !== \"production\") {\n    // e.g. http://localhost:19006\n    return getDevServer().url?.replace(/\\/$/, \"\");\n  }\n\n  // TODO: Make it official by moving out of `extra`\n  const productionBaseUrl = manifest?.extra?.router?.origin;\n\n  if (!productionBaseUrl) {\n    return null;\n  }\n\n  // Ensure no trailing slash\n  return productionBaseUrl?.replace(/\\/$/, \"\");\n}\n\nfunction wrapFetchWithWindowLocation(\n  fetch: Function & { __EXPO_BASE_URL_POLYFILLED?: boolean }\n) {\n  if (fetch.__EXPO_BASE_URL_POLYFILLED) {\n    return fetch;\n  }\n\n  const _fetch = (...props: any[]) => {\n    if (props[0] && typeof props[0] === \"string\" && props[0].startsWith(\"/\")) {\n      if (process.env.NODE_ENV !== \"production\") {\n        warnProductionOriginNotConfigured(props[0]);\n      }\n\n      props[0] = new URL(props[0], window.location?.origin).toString();\n    } else if (props[0] && typeof props[0] === \"object\") {\n      if (\n        props[0].url &&\n        typeof props[0].url === \"string\" &&\n        props[0].url.startsWith(\"/\")\n      ) {\n        if (process.env.NODE_ENV !== \"production\") {\n          warnProductionOriginNotConfigured(props[0]);\n        }\n\n        props[0].url = new URL(\n          props[0].url,\n          window.location?.origin\n        ).toString();\n      }\n    }\n    return fetch(...props);\n  };\n\n  _fetch.__EXPO_BASE_URL_POLYFILLED = true;\n\n  return _fetch;\n}\n\nif (manifest?.extra?.router?.origin !== false) {\n  // Polyfill window.location in native runtimes.\n  if (typeof window !== \"undefined\" && !window.location) {\n    const url = getBaseUrl();\n    if (url) {\n      setLocationHref(url);\n      install();\n    }\n  }\n  // Polyfill native fetch to support relative URLs\n  Object.defineProperty(global, \"fetch\", {\n    value: wrapFetchWithWindowLocation(fetch),\n  });\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"install.native.js","sourceRoot":"","sources":["../../src/location/install.native.ts"],"names":[],"mappings":";;;;;AAAA,wFAAwF;AACxF,sDAAoD;AAEpD,oEAAuC;AACvC,0DAA4B;AAE5B,yCAAsD;AACtD,mEAA2C;AAE3C,IAAI,SAAS,GAAG,KAAK,CAAC;AAEtB,MAAM,QAAQ,GAAG,wBAAS,CAAC,UAAwC,CAAC;AAEpE,mEAAmE;AACnE,uEAAuE;AACvE,2EAA2E;AAC3E,SAAS,iCAAiC,CAAC,UAAkB;IAC3D,IAAI,SAAS,EAAE;QACb,OAAO;KACR;IACD,SAAS,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;QACpC,OAAO,CAAC,IAAI,CACV,+BAA+B,UAAU,+RAA+R,CACzU,CAAC;KACH;AACH,CAAC;AAED,sGAAsG;AACtG,+DAA+D;AAC/D,SAAS,UAAU;IACjB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,8BAA8B;QAC9B,OAAO,IAAA,sBAAY,GAAE,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KAC/C;IAED,kDAAkD;IAClD,MAAM,iBAAiB,GAAG,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;IAE1D,IAAI,CAAC,iBAAiB,EAAE;QACtB,OAAO,IAAI,CAAC;KACb;IAED,2BAA2B;IAC3B,OAAO,iBAAiB,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC/C,CAAC;AAED,SAAS,2BAA2B,CAAC,KAA0D;IAC7F,IAAI,KAAK,CAAC,0BAA0B,EAAE;QACpC,OAAO,KAAK,CAAC;KACd;IAED,MAAM,MAAM,GAAG,CAAC,GAAG,KAAY,EAAE,EAAE;QACjC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACxE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;gBACzC,iCAAiC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;YAED,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,mBAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;SAClE;aAAM,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACnD,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACpF,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;oBACzC,iCAAiC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7C;gBAED,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,mBAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;aAC1E;SACF;QACD,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,MAAM,CAAC,0BAA0B,GAAG,IAAI,CAAC;IAEzC,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,IAAI,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,KAAK,KAAK,EAAE;IAC7C,+CAA+C;IAC/C,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;QACrD,MAAM,GAAG,GAAG,UAAU,EAAE,CAAC;QACzB,IAAI,GAAG,EAAE;YACP,IAAA,0BAAe,EAAC,GAAG,CAAC,CAAC;YACrB,IAAA,kBAAO,GAAE,CAAC;SACX;KACF;IACD,iDAAiD;IACjD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE;QACrC,KAAK,EAAE,2BAA2B,CAAC,KAAK,CAAC;KAC1C,CAAC,CAAC;CACJ","sourcesContent":["// This MUST be first to ensure that `fetch` is defined in the React Native environment.\nimport 'react-native/Libraries/Core/InitializeCore';\n\nimport Constants from 'expo-constants';\nimport URL from 'url-parse';\n\nimport { install, setLocationHref } from './Location';\nimport getDevServer from '../getDevServer';\n\nlet hasWarned = false;\n\nconst manifest = Constants.expoConfig as Record<string, any> | null;\n\n// Add a development warning for fetch requests with relative paths\n// to ensure developers are aware of the need to configure a production\n// base URL in the Expo config (app.json) under `expo.extra.router.origin`.\nfunction warnProductionOriginNotConfigured(requestUrl: string) {\n  if (hasWarned) {\n    return;\n  }\n  hasWarned = true;\n  if (!manifest?.extra?.router?.origin) {\n    console.warn(\n      `The relative fetch request \"${requestUrl}\" will not work in production until the Expo Router Config Plugin (app.json) is configured with the \\`origin\\` prop set to the base URL of your web server, e.g. \\`{ plugins: [[\"expo-router\", { origin: \"...\" }]] }\\`. [Learn more](https://expo.github.io/router/docs/lab/runtime-location)`\n    );\n  }\n}\n\n// TODO: This would be better if native and tied as close to the JS engine as possible, i.e. it should\n// reflect the exact location of the JS file that was executed.\nfunction getBaseUrl() {\n  if (process.env.NODE_ENV !== 'production') {\n    // e.g. http://localhost:19006\n    return getDevServer().url?.replace(/\\/$/, '');\n  }\n\n  // TODO: Make it official by moving out of `extra`\n  const productionBaseUrl = manifest?.extra?.router?.origin;\n\n  if (!productionBaseUrl) {\n    return null;\n  }\n\n  // Ensure no trailing slash\n  return productionBaseUrl?.replace(/\\/$/, '');\n}\n\nfunction wrapFetchWithWindowLocation(fetch: Function & { __EXPO_BASE_URL_POLYFILLED?: boolean }) {\n  if (fetch.__EXPO_BASE_URL_POLYFILLED) {\n    return fetch;\n  }\n\n  const _fetch = (...props: any[]) => {\n    if (props[0] && typeof props[0] === 'string' && props[0].startsWith('/')) {\n      if (process.env.NODE_ENV !== 'production') {\n        warnProductionOriginNotConfigured(props[0]);\n      }\n\n      props[0] = new URL(props[0], window.location?.origin).toString();\n    } else if (props[0] && typeof props[0] === 'object') {\n      if (props[0].url && typeof props[0].url === 'string' && props[0].url.startsWith('/')) {\n        if (process.env.NODE_ENV !== 'production') {\n          warnProductionOriginNotConfigured(props[0]);\n        }\n\n        props[0].url = new URL(props[0].url, window.location?.origin).toString();\n      }\n    }\n    return fetch(...props);\n  };\n\n  _fetch.__EXPO_BASE_URL_POLYFILLED = true;\n\n  return _fetch;\n}\n\nif (manifest?.extra?.router?.origin !== false) {\n  // Polyfill window.location in native runtimes.\n  if (typeof window !== 'undefined' && !window.location) {\n    const url = getBaseUrl();\n    if (url) {\n      setLocationHref(url);\n      install();\n    }\n  }\n  // Polyfill native fetch to support relative URLs\n  Object.defineProperty(global, 'fetch', {\n    value: wrapFetchWithWindowLocation(fetch),\n  });\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/messageSocket.d.ts.map b/node_modules/@expo/metro-runtime/build/messageSocket.d.ts.map
index e0c8bb0..5b32668 100644
--- a/node_modules/@expo/metro-runtime/build/messageSocket.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/messageSocket.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"messageSocket.d.ts","sourceRoot":"","sources":["../src/messageSocket.ts"],"names":[],"mappings":"AAKA,QAAA,MAAM,QAAQ,QAAuD,CAAC;AACtE,QAAA,MAAM,aAAa,WAElB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"messageSocket.d.ts","sourceRoot":"","sources":["../src/messageSocket.ts"],"names":[],"mappings":"AAKA,QAAA,MAAM,QAAQ,QAAuD,CAAC;AACtE,QAAA,MAAM,aAAa,WAAiE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/messageSocket.js b/node_modules/@expo/metro-runtime/build/messageSocket.js
index 02fc101..884ddf2 100644
--- a/node_modules/@expo/metro-runtime/build/messageSocket.js
+++ b/node_modules/@expo/metro-runtime/build/messageSocket.js
@@ -1,23 +1,22 @@
-"use strict";
 /* eslint-env browser */
 // Setup websocket messages for reloading the page from the command line.
 // This is normally setup on the native client.
-const protocol = window.location.protocol === "https:" ? "wss" : "ws";
+const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';
 const messageSocket = new WebSocket(`${protocol}://${window.location.host}/message`);
 messageSocket.onmessage = (message) => {
     const data = JSON.parse(String(message.data));
     switch (data.method) {
-        case "sendDevCommand":
+        case 'sendDevCommand':
             switch (data.params.name) {
-                case "reload":
+                case 'reload':
                     window.location.reload();
                     break;
             }
             break;
-        case "reload":
+        case 'reload':
             window.location.reload();
             break;
-        case "devMenu":
+        case 'devMenu':
             // no-op
             break;
     }
diff --git a/node_modules/@expo/metro-runtime/build/messageSocket.js.map b/node_modules/@expo/metro-runtime/build/messageSocket.js.map
index e6f28fe..55435d5 100644
--- a/node_modules/@expo/metro-runtime/build/messageSocket.js.map
+++ b/node_modules/@expo/metro-runtime/build/messageSocket.js.map
@@ -1 +1 @@
-{"version":3,"file":"messageSocket.js","sourceRoot":"","sources":["../src/messageSocket.ts"],"names":[],"mappings":";AAAA,wBAAwB;AAExB,yEAAyE;AACzE,+CAA+C;AAE/C,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AACtE,MAAM,aAAa,GAAG,IAAI,SAAS,CACjC,GAAG,QAAQ,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,CAChD,CAAC;AACF,aAAa,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE;IACpC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9C,QAAQ,IAAI,CAAC,MAAM,EAAE;QACnB,KAAK,gBAAgB;YACnB,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACxB,KAAK,QAAQ;oBACX,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;oBACzB,MAAM;aACT;YACD,MAAM;QACR,KAAK,QAAQ;YACX,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACzB,MAAM;QACR,KAAK,SAAS;YACZ,QAAQ;YACR,MAAM;KACT;AACH,CAAC,CAAC","sourcesContent":["/* eslint-env browser */\n\n// Setup websocket messages for reloading the page from the command line.\n// This is normally setup on the native client.\n\nconst protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\nconst messageSocket = new WebSocket(\n  `${protocol}://${window.location.host}/message`\n);\nmessageSocket.onmessage = (message) => {\n  const data = JSON.parse(String(message.data));\n  switch (data.method) {\n    case \"sendDevCommand\":\n      switch (data.params.name) {\n        case \"reload\":\n          window.location.reload();\n          break;\n      }\n      break;\n    case \"reload\":\n      window.location.reload();\n      break;\n    case \"devMenu\":\n      // no-op\n      break;\n  }\n};\n"]}
\ No newline at end of file
+{"version":3,"file":"messageSocket.js","sourceRoot":"","sources":["../src/messageSocket.ts"],"names":[],"mappings":"AAAA,wBAAwB;AAExB,yEAAyE;AACzE,+CAA+C;AAE/C,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AACtE,MAAM,aAAa,GAAG,IAAI,SAAS,CAAC,GAAG,QAAQ,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,CAAC;AACrF,aAAa,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE;IACpC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9C,QAAQ,IAAI,CAAC,MAAM,EAAE;QACnB,KAAK,gBAAgB;YACnB,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACxB,KAAK,QAAQ;oBACX,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;oBACzB,MAAM;aACT;YACD,MAAM;QACR,KAAK,QAAQ;YACX,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACzB,MAAM;QACR,KAAK,SAAS;YACZ,QAAQ;YACR,MAAM;KACT;AACH,CAAC,CAAC","sourcesContent":["/* eslint-env browser */\n\n// Setup websocket messages for reloading the page from the command line.\n// This is normally setup on the native client.\n\nconst protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\nconst messageSocket = new WebSocket(`${protocol}://${window.location.host}/message`);\nmessageSocket.onmessage = (message) => {\n  const data = JSON.parse(String(message.data));\n  switch (data.method) {\n    case 'sendDevCommand':\n      switch (data.params.name) {\n        case 'reload':\n          window.location.reload();\n          break;\n      }\n      break;\n    case 'reload':\n      window.location.reload();\n      break;\n    case 'devMenu':\n      // no-op\n      break;\n  }\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/setupFastRefresh.d.ts.map b/node_modules/@expo/metro-runtime/build/setupFastRefresh.d.ts.map
index 49b6629..b1a07e6 100644
--- a/node_modules/@expo/metro-runtime/build/setupFastRefresh.d.ts.map
+++ b/node_modules/@expo/metro-runtime/build/setupFastRefresh.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"setupFastRefresh.d.ts","sourceRoot":"","sources":["../src/setupFastRefresh.ts"],"names":[],"mappings":"AAEA,QAAA,MAAM,mBAAmB,KAAmC,CAAC;AAG7D,QAAA,MAAM,OAAO;;;;;;;CAqBZ,CAAC"}
\ No newline at end of file
+{"version":3,"file":"setupFastRefresh.d.ts","sourceRoot":"","sources":["../src/setupFastRefresh.ts"],"names":[],"mappings":"AAEA,QAAA,MAAM,mBAAmB,KAAmC,CAAC;AAG7D,QAAA,MAAM,OAAO;;;;;;;CAoBZ,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/setupFastRefresh.js b/node_modules/@expo/metro-runtime/build/setupFastRefresh.js
index 6063b0e..e677c08 100644
--- a/node_modules/@expo/metro-runtime/build/setupFastRefresh.js
+++ b/node_modules/@expo/metro-runtime/build/setupFastRefresh.js
@@ -1,6 +1,5 @@
-"use strict";
 // This needs to run before the renderer initializes.
-const ReactRefreshRuntime = require("react-refresh/runtime");
+const ReactRefreshRuntime = require('react-refresh/runtime');
 ReactRefreshRuntime.injectIntoGlobalHook(global);
 const Refresh = {
     performFullRefresh() {
@@ -20,6 +19,5 @@ const Refresh = {
 };
 // The metro require polyfill can not have dependencies (applies for all polyfills).
 // Expose `Refresh` by assigning it to global to make it available in the polyfill.
-// @ts-expect-error
-global[(global.__METRO_GLOBAL_PREFIX__ || "") + "__ReactRefresh"] = Refresh;
+global[(global.__METRO_GLOBAL_PREFIX__ || '') + '__ReactRefresh'] = Refresh;
 //# sourceMappingURL=setupFastRefresh.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/setupFastRefresh.js.map b/node_modules/@expo/metro-runtime/build/setupFastRefresh.js.map
index ab3d6e4..5b510c6 100644
--- a/node_modules/@expo/metro-runtime/build/setupFastRefresh.js.map
+++ b/node_modules/@expo/metro-runtime/build/setupFastRefresh.js.map
@@ -1 +1 @@
-{"version":3,"file":"setupFastRefresh.js","sourceRoot":"","sources":["../src/setupFastRefresh.ts"],"names":[],"mappings":";AAAA,qDAAqD;AAErD,MAAM,mBAAmB,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC7D,mBAAmB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;AAEjD,MAAM,OAAO,GAAG;IACd,kBAAkB;QAChB,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAED,mCAAmC,EACjC,mBAAmB,CAAC,mCAAmC;IAEzD,qBAAqB,EAAE,mBAAmB,CAAC,qBAAqB;IAEhE,eAAe,EAAE,mBAAmB,CAAC,eAAe;IAEpD,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;IAEtC,mBAAmB;QACjB,IAAI,mBAAmB,CAAC,sBAAsB,EAAE,EAAE;YAChD,QAAQ,CAAC,MAAM,EAAE,CAAC;YAClB,OAAO;SACR;QACD,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;IAC5C,CAAC;CACF,CAAC;AAEF,oFAAoF;AACpF,mFAAmF;AACnF,mBAAmB;AACnB,MAAM,CAAC,CAAC,MAAM,CAAC,uBAAuB,IAAI,EAAE,CAAC,GAAG,gBAAgB,CAAC,GAAG,OAAO,CAAC","sourcesContent":["// This needs to run before the renderer initializes.\n\nconst ReactRefreshRuntime = require(\"react-refresh/runtime\");\nReactRefreshRuntime.injectIntoGlobalHook(global);\n\nconst Refresh = {\n  performFullRefresh() {\n    location.reload();\n  },\n\n  createSignatureFunctionForTransform:\n    ReactRefreshRuntime.createSignatureFunctionForTransform,\n\n  isLikelyComponentType: ReactRefreshRuntime.isLikelyComponentType,\n\n  getFamilyByType: ReactRefreshRuntime.getFamilyByType,\n\n  register: ReactRefreshRuntime.register,\n\n  performReactRefresh() {\n    if (ReactRefreshRuntime.hasUnrecoverableErrors()) {\n      location.reload();\n      return;\n    }\n    ReactRefreshRuntime.performReactRefresh();\n  },\n};\n\n// The metro require polyfill can not have dependencies (applies for all polyfills).\n// Expose `Refresh` by assigning it to global to make it available in the polyfill.\n// @ts-expect-error\nglobal[(global.__METRO_GLOBAL_PREFIX__ || \"\") + \"__ReactRefresh\"] = Refresh;\n"]}
\ No newline at end of file
+{"version":3,"file":"setupFastRefresh.js","sourceRoot":"","sources":["../src/setupFastRefresh.ts"],"names":[],"mappings":"AAAA,qDAAqD;AAErD,MAAM,mBAAmB,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC7D,mBAAmB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;AAEjD,MAAM,OAAO,GAAG;IACd,kBAAkB;QAChB,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAED,mCAAmC,EAAE,mBAAmB,CAAC,mCAAmC;IAE5F,qBAAqB,EAAE,mBAAmB,CAAC,qBAAqB;IAEhE,eAAe,EAAE,mBAAmB,CAAC,eAAe;IAEpD,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;IAEtC,mBAAmB;QACjB,IAAI,mBAAmB,CAAC,sBAAsB,EAAE,EAAE;YAChD,QAAQ,CAAC,MAAM,EAAE,CAAC;YAClB,OAAO;SACR;QACD,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;IAC5C,CAAC;CACF,CAAC;AAEF,oFAAoF;AACpF,mFAAmF;AACnF,MAAM,CAAC,CAAC,MAAM,CAAC,uBAAuB,IAAI,EAAE,CAAC,GAAG,gBAAgB,CAAC,GAAG,OAAO,CAAC","sourcesContent":["// This needs to run before the renderer initializes.\n\nconst ReactRefreshRuntime = require('react-refresh/runtime');\nReactRefreshRuntime.injectIntoGlobalHook(global);\n\nconst Refresh = {\n  performFullRefresh() {\n    location.reload();\n  },\n\n  createSignatureFunctionForTransform: ReactRefreshRuntime.createSignatureFunctionForTransform,\n\n  isLikelyComponentType: ReactRefreshRuntime.isLikelyComponentType,\n\n  getFamilyByType: ReactRefreshRuntime.getFamilyByType,\n\n  register: ReactRefreshRuntime.register,\n\n  performReactRefresh() {\n    if (ReactRefreshRuntime.hasUnrecoverableErrors()) {\n      location.reload();\n      return;\n    }\n    ReactRefreshRuntime.performReactRefresh();\n  },\n};\n\n// The metro require polyfill can not have dependencies (applies for all polyfills).\n// Expose `Refresh` by assigning it to global to make it available in the polyfill.\nglobal[(global.__METRO_GLOBAL_PREFIX__ || '') + '__ReactRefresh'] = Refresh;\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/setupHMR.js b/node_modules/@expo/metro-runtime/build/setupHMR.js
index 0cd3757..0f669ad 100644
--- a/node_modules/@expo/metro-runtime/build/setupHMR.js
+++ b/node_modules/@expo/metro-runtime/build/setupHMR.js
@@ -27,9 +27,7 @@ if (!react_native_1.Platform.isTesting) {
     //     originalFunction.apply(console, args);
     //   };
     // });
-    HMRClient_1.default.log("log", [
-        `[${react_native_1.Platform.OS}] Logs will appear in the browser console`,
-    ]);
+    HMRClient_1.default.log('log', [`[${react_native_1.Platform.OS}] Logs will appear in the browser console`]);
 }
 // This is called native on native platforms
 HMRClient_1.default.setup({ isEnabled: true });
diff --git a/node_modules/@expo/metro-runtime/build/setupHMR.js.map b/node_modules/@expo/metro-runtime/build/setupHMR.js.map
index 2dfeea5..faf9d50 100644
--- a/node_modules/@expo/metro-runtime/build/setupHMR.js.map
+++ b/node_modules/@expo/metro-runtime/build/setupHMR.js.map
@@ -1 +1 @@
-{"version":3,"file":"setupHMR.js","sourceRoot":"","sources":["../src/setupHMR.ts"],"names":[],"mappings":";;;;;AAAA,+CAAwC;AAExC,4DAAoC;AAEpC,gDAAgD;AAChD,IAAI,CAAC,uBAAQ,CAAC,SAAS,EAAE;IACvB,6EAA6E;IAC7E,IAAI;IACJ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,6CAA6C;IAC7C,0DAA0D;IAC1D,qBAAqB;IACrB,4BAA4B;IAC5B,sBAAsB;IACtB,6CAA6C;IAC7C,OAAO;IACP,MAAM;IAEN,mBAAS,CAAC,GAAG,CAAC,KAAK,EAAE;QACnB,IAAI,uBAAQ,CAAC,EAAE,2CAA2C;KAC3D,CAAC,CAAC;CACJ;AAED,4CAA4C;AAC5C,mBAAS,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC","sourcesContent":["import { Platform } from \"react-native\";\n\nimport HMRClient from \"./HMRClient\";\n\n// Sets up developer tools for React Native web.\nif (!Platform.isTesting) {\n  // We assume full control over the console and send JavaScript logs to Metro.\n  // [\n  //   'trace',\n  //   'info',\n  //   'warn',\n  //   'error',\n  //   'log',\n  //   'group',\n  //   'groupCollapsed',\n  //   'groupEnd',\n  //   'debug',\n  // ].forEach(level => {\n  //   const originalFunction = console[level];\n  //   console[level] = function (...args: readonly any[]) {\n  //     HMRClient.log(\n  //       // @ts-expect-error\n  //       level, args);\n  //     originalFunction.apply(console, args);\n  //   };\n  // });\n\n  HMRClient.log(\"log\", [\n    `[${Platform.OS}] Logs will appear in the browser console`,\n  ]);\n}\n\n// This is called native on native platforms\nHMRClient.setup({ isEnabled: true });\n"]}
\ No newline at end of file
+{"version":3,"file":"setupHMR.js","sourceRoot":"","sources":["../src/setupHMR.ts"],"names":[],"mappings":";;;;;AAAA,+CAAwC;AAExC,4DAAoC;AAEpC,gDAAgD;AAChD,IAAI,CAAC,uBAAQ,CAAC,SAAS,EAAE;IACvB,6EAA6E;IAC7E,IAAI;IACJ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,6CAA6C;IAC7C,0DAA0D;IAC1D,qBAAqB;IACrB,4BAA4B;IAC5B,sBAAsB;IACtB,6CAA6C;IAC7C,OAAO;IACP,MAAM;IAEN,mBAAS,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,uBAAQ,CAAC,EAAE,2CAA2C,CAAC,CAAC,CAAC;CACpF;AAED,4CAA4C;AAC5C,mBAAS,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC","sourcesContent":["import { Platform } from 'react-native';\n\nimport HMRClient from './HMRClient';\n\n// Sets up developer tools for React Native web.\nif (!Platform.isTesting) {\n  // We assume full control over the console and send JavaScript logs to Metro.\n  // [\n  //   'trace',\n  //   'info',\n  //   'warn',\n  //   'error',\n  //   'log',\n  //   'group',\n  //   'groupCollapsed',\n  //   'groupEnd',\n  //   'debug',\n  // ].forEach(level => {\n  //   const originalFunction = console[level];\n  //   console[level] = function (...args: readonly any[]) {\n  //     HMRClient.log(\n  //       // @ts-expect-error\n  //       level, args);\n  //     originalFunction.apply(console, args);\n  //   };\n  // });\n\n  HMRClient.log('log', [`[${Platform.OS}] Logs will appear in the browser console`]);\n}\n\n// This is called native on native platforms\nHMRClient.setup({ isEnabled: true });\n"]}
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/symbolicate.d.ts b/node_modules/@expo/metro-runtime/build/symbolicate.d.ts
index d00f7a6..b2bdba4 100644
--- a/node_modules/@expo/metro-runtime/build/symbolicate.d.ts
+++ b/node_modules/@expo/metro-runtime/build/symbolicate.d.ts
@@ -1,5 +1,5 @@
-import { LogBoxLog } from "./error-overlay/Data/LogBoxLog";
-import parseErrorStack from "./error-overlay/modules/parseErrorStack";
+import { LogBoxLog } from './error-overlay/Data/LogBoxLog';
+import parseErrorStack from './error-overlay/modules/parseErrorStack';
 export { LogBoxLog, parseErrorStack };
-export * from "./error-overlay/formatProjectFilePath";
+export * from './error-overlay/formatProjectFilePath';
 //# sourceMappingURL=symbolicate.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@expo/metro-runtime/build/symbolicate.js.map b/node_modules/@expo/metro-runtime/build/symbolicate.js.map
index d3569dc..a775065 100644
--- a/node_modules/@expo/metro-runtime/build/symbolicate.js.map
+++ b/node_modules/@expo/metro-runtime/build/symbolicate.js.map
@@ -1 +1 @@
-{"version":3,"file":"symbolicate.js","sourceRoot":"","sources":["../src/symbolicate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,8DAA2D;AAGlD,0FAHA,qBAAS,OAGA;AAFlB,8FAAsE;AAElD,0BAFb,yBAAe,CAEa;AAEnC,wEAAsD","sourcesContent":["import { LogBoxLog } from \"./error-overlay/Data/LogBoxLog\";\nimport parseErrorStack from \"./error-overlay/modules/parseErrorStack\";\n\nexport { LogBoxLog, parseErrorStack };\n\nexport * from \"./error-overlay/formatProjectFilePath\";\n"]}
\ No newline at end of file
+{"version":3,"file":"symbolicate.js","sourceRoot":"","sources":["../src/symbolicate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,8DAA2D;AAGlD,0FAHA,qBAAS,OAGA;AAFlB,8FAAsE;AAElD,0BAFb,yBAAe,CAEa;AAEnC,wEAAsD","sourcesContent":["import { LogBoxLog } from './error-overlay/Data/LogBoxLog';\nimport parseErrorStack from './error-overlay/modules/parseErrorStack';\n\nexport { LogBoxLog, parseErrorStack };\n\nexport * from './error-overlay/formatProjectFilePath';\n"]}
\ No newline at end of file
